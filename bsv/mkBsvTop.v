//
// Generated by Bluespec Compiler, version 2023.01 (build 52adafa5)
//
// On Tue Dec 19 12:04:32 CST 2023
//
//
// Ports:
// Name                         I/O  size props
// xdmaChannel_rawH2cAxiStream_tready  O     1
// xdmaChannel_rawC2hAxiStream_tvalid  O     1
// xdmaChannel_rawC2hAxiStream_tdata  O   512 reg
// xdmaChannel_rawC2hAxiStream_tkeep  O    64 reg
// xdmaChannel_rawC2hAxiStream_tlast  O     1 reg
// xdmaChannel_h2cDescByp_load    O     1
// xdmaChannel_h2cDescByp_src_addr  O    64 reg
// xdmaChannel_h2cDescByp_dst_addr  O    64 const
// xdmaChannel_h2cDescByp_len     O    28
// xdmaChannel_h2cDescByp_ctl     O     5 const
// xdmaChannel_c2hDescByp_load    O     1
// xdmaChannel_c2hDescByp_src_addr  O    64 const
// xdmaChannel_c2hDescByp_dst_addr  O    64 reg
// xdmaChannel_c2hDescByp_len     O    28
// xdmaChannel_c2hDescByp_ctl     O     5 const
// axilRegBlock_awready           O     1
// axilRegBlock_wready            O     1
// axilRegBlock_bvalid            O     1
// axilRegBlock_bresp             O     2
// axilRegBlock_arready           O     1
// axilRegBlock_rvalid            O     1
// axilRegBlock_rresp             O     2
// axilRegBlock_rdata             O    32
// RDY_rdmaDataStreamInput_put    O     1
// rdmaDataStreamPipeOut_first    O   290
// RDY_rdmaDataStreamPipeOut_first  O     1
// RDY_rdmaDataStreamPipeOut_deq  O     1
// rdmaDataStreamPipeOut_notEmpty  O     1
// RDY_rdmaDataStreamPipeOut_notEmpty  O     1 const
// CLK_slowClockIfc               O     1
// CLK_GATE_slowClockIfc          O     1 const
// CLK_slowClock                  I     1
// RST_N_slowReset                I     1 reset
// CLK                            I     1 clock
// RST_N                          I     1 reset
// xdmaChannel_rawH2cAxiStream_tvalid  I     1
// xdmaChannel_rawH2cAxiStream_tdata  I   512 reg
// xdmaChannel_rawH2cAxiStream_tkeep  I    64 reg
// xdmaChannel_rawH2cAxiStream_tlast  I     1 reg
// xdmaChannel_rawC2hAxiStream_tready  I     1
// xdmaChannel_h2cDescByp_ready   I     1
// xdmaChannel_h2cDescByp_desc_done  I     1 unused
// xdmaChannel_c2hDescByp_ready   I     1
// xdmaChannel_c2hDescByp_desc_done  I     1 unused
// axilRegBlock_awvalid           I     1
// axilRegBlock_awaddr            I    12
// axilRegBlock_awprot            I     3
// axilRegBlock_wvalid            I     1
// axilRegBlock_wdata             I    32
// axilRegBlock_wstrb             I     4
// axilRegBlock_bready            I     1
// axilRegBlock_arvalid           I     1
// axilRegBlock_araddr            I    12
// axilRegBlock_arprot            I     3
// axilRegBlock_rready            I     1
// rdmaDataStreamInput_put        I   290
// EN_rdmaDataStreamInput_put     I     1
// EN_rdmaDataStreamPipeOut_deq   I     1
//
// Combinational paths from inputs to outputs:
//   xdmaChannel_h2cDescByp_ready -> xdmaChannel_h2cDescByp_load
//   xdmaChannel_h2cDescByp_ready -> xdmaChannel_h2cDescByp_src_addr
//   xdmaChannel_h2cDescByp_ready -> xdmaChannel_h2cDescByp_len
//   xdmaChannel_c2hDescByp_ready -> xdmaChannel_c2hDescByp_load
//   xdmaChannel_c2hDescByp_ready -> xdmaChannel_c2hDescByp_dst_addr
//   xdmaChannel_c2hDescByp_ready -> xdmaChannel_c2hDescByp_len
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkBsvTop(CLK_slowClock,
		RST_N_slowReset,
		CLK,
		RST_N,

		xdmaChannel_rawH2cAxiStream_tvalid,
		xdmaChannel_rawH2cAxiStream_tdata,
		xdmaChannel_rawH2cAxiStream_tkeep,
		xdmaChannel_rawH2cAxiStream_tlast,

		xdmaChannel_rawH2cAxiStream_tready,

		xdmaChannel_rawC2hAxiStream_tvalid,

		xdmaChannel_rawC2hAxiStream_tdata,

		xdmaChannel_rawC2hAxiStream_tkeep,

		xdmaChannel_rawC2hAxiStream_tlast,

		xdmaChannel_rawC2hAxiStream_tready,

		xdmaChannel_h2cDescByp_ready,

		xdmaChannel_h2cDescByp_load,

		xdmaChannel_h2cDescByp_src_addr,

		xdmaChannel_h2cDescByp_dst_addr,

		xdmaChannel_h2cDescByp_len,

		xdmaChannel_h2cDescByp_ctl,

		xdmaChannel_h2cDescByp_desc_done,

		xdmaChannel_c2hDescByp_ready,

		xdmaChannel_c2hDescByp_load,

		xdmaChannel_c2hDescByp_src_addr,

		xdmaChannel_c2hDescByp_dst_addr,

		xdmaChannel_c2hDescByp_len,

		xdmaChannel_c2hDescByp_ctl,

		xdmaChannel_c2hDescByp_desc_done,

		axilRegBlock_awvalid,
		axilRegBlock_awaddr,
		axilRegBlock_awprot,

		axilRegBlock_awready,

		axilRegBlock_wvalid,
		axilRegBlock_wdata,
		axilRegBlock_wstrb,

		axilRegBlock_wready,

		axilRegBlock_bvalid,

		axilRegBlock_bresp,

		axilRegBlock_bready,

		axilRegBlock_arvalid,
		axilRegBlock_araddr,
		axilRegBlock_arprot,

		axilRegBlock_arready,

		axilRegBlock_rvalid,

		axilRegBlock_rresp,

		axilRegBlock_rdata,

		axilRegBlock_rready,

		rdmaDataStreamInput_put,
		EN_rdmaDataStreamInput_put,
		RDY_rdmaDataStreamInput_put,

		rdmaDataStreamPipeOut_first,
		RDY_rdmaDataStreamPipeOut_first,

		EN_rdmaDataStreamPipeOut_deq,
		RDY_rdmaDataStreamPipeOut_deq,

		rdmaDataStreamPipeOut_notEmpty,
		RDY_rdmaDataStreamPipeOut_notEmpty,

		CLK_slowClockIfc,
		CLK_GATE_slowClockIfc);
  input  CLK_slowClock;
  input  RST_N_slowReset;
  input  CLK;
  input  RST_N;

  // action method xdmaChannel_rawH2cAxiStream_tValid
  input  xdmaChannel_rawH2cAxiStream_tvalid;
  input  [511 : 0] xdmaChannel_rawH2cAxiStream_tdata;
  input  [63 : 0] xdmaChannel_rawH2cAxiStream_tkeep;
  input  xdmaChannel_rawH2cAxiStream_tlast;

  // value method xdmaChannel_rawH2cAxiStream_tReady
  output xdmaChannel_rawH2cAxiStream_tready;

  // value method xdmaChannel_rawC2hAxiStream_tValid
  output xdmaChannel_rawC2hAxiStream_tvalid;

  // value method xdmaChannel_rawC2hAxiStream_tData
  output [511 : 0] xdmaChannel_rawC2hAxiStream_tdata;

  // value method xdmaChannel_rawC2hAxiStream_tKeep
  output [63 : 0] xdmaChannel_rawC2hAxiStream_tkeep;

  // value method xdmaChannel_rawC2hAxiStream_tLast
  output xdmaChannel_rawC2hAxiStream_tlast;

  // value method xdmaChannel_rawC2hAxiStream_tUser

  // action method xdmaChannel_rawC2hAxiStream_tReady
  input  xdmaChannel_rawC2hAxiStream_tready;

  // action method xdmaChannel_h2cDescByp_ready
  input  xdmaChannel_h2cDescByp_ready;

  // value method xdmaChannel_h2cDescByp_load
  output xdmaChannel_h2cDescByp_load;

  // value method xdmaChannel_h2cDescByp_srcAddr
  output [63 : 0] xdmaChannel_h2cDescByp_src_addr;

  // value method xdmaChannel_h2cDescByp_dstAddr
  output [63 : 0] xdmaChannel_h2cDescByp_dst_addr;

  // value method xdmaChannel_h2cDescByp_len
  output [27 : 0] xdmaChannel_h2cDescByp_len;

  // value method xdmaChannel_h2cDescByp_ctl
  output [4 : 0] xdmaChannel_h2cDescByp_ctl;

  // action method xdmaChannel_h2cDescByp_descDone
  input  xdmaChannel_h2cDescByp_desc_done;

  // action method xdmaChannel_c2hDescByp_ready
  input  xdmaChannel_c2hDescByp_ready;

  // value method xdmaChannel_c2hDescByp_load
  output xdmaChannel_c2hDescByp_load;

  // value method xdmaChannel_c2hDescByp_srcAddr
  output [63 : 0] xdmaChannel_c2hDescByp_src_addr;

  // value method xdmaChannel_c2hDescByp_dstAddr
  output [63 : 0] xdmaChannel_c2hDescByp_dst_addr;

  // value method xdmaChannel_c2hDescByp_len
  output [27 : 0] xdmaChannel_c2hDescByp_len;

  // value method xdmaChannel_c2hDescByp_ctl
  output [4 : 0] xdmaChannel_c2hDescByp_ctl;

  // action method xdmaChannel_c2hDescByp_descDone
  input  xdmaChannel_c2hDescByp_desc_done;

  // action method axilRegBlock_wrSlave_awValidData
  input  axilRegBlock_awvalid;
  input  [11 : 0] axilRegBlock_awaddr;
  input  [2 : 0] axilRegBlock_awprot;

  // value method axilRegBlock_wrSlave_awReady
  output axilRegBlock_awready;

  // action method axilRegBlock_wrSlave_wValidData
  input  axilRegBlock_wvalid;
  input  [31 : 0] axilRegBlock_wdata;
  input  [3 : 0] axilRegBlock_wstrb;

  // value method axilRegBlock_wrSlave_wReady
  output axilRegBlock_wready;

  // value method axilRegBlock_wrSlave_bValid
  output axilRegBlock_bvalid;

  // value method axilRegBlock_wrSlave_bResp
  output [1 : 0] axilRegBlock_bresp;

  // action method axilRegBlock_wrSlave_bReady
  input  axilRegBlock_bready;

  // action method axilRegBlock_rdSlave_arValidData
  input  axilRegBlock_arvalid;
  input  [11 : 0] axilRegBlock_araddr;
  input  [2 : 0] axilRegBlock_arprot;

  // value method axilRegBlock_rdSlave_arReady
  output axilRegBlock_arready;

  // value method axilRegBlock_rdSlave_rValid
  output axilRegBlock_rvalid;

  // value method axilRegBlock_rdSlave_rResp
  output [1 : 0] axilRegBlock_rresp;

  // value method axilRegBlock_rdSlave_rData
  output [31 : 0] axilRegBlock_rdata;

  // action method axilRegBlock_rdSlave_rReady
  input  axilRegBlock_rready;

  // action method rdmaDataStreamInput_put
  input  [289 : 0] rdmaDataStreamInput_put;
  input  EN_rdmaDataStreamInput_put;
  output RDY_rdmaDataStreamInput_put;

  // value method rdmaDataStreamPipeOut_first
  output [289 : 0] rdmaDataStreamPipeOut_first;
  output RDY_rdmaDataStreamPipeOut_first;

  // action method rdmaDataStreamPipeOut_deq
  input  EN_rdmaDataStreamPipeOut_deq;
  output RDY_rdmaDataStreamPipeOut_deq;

  // value method rdmaDataStreamPipeOut_notEmpty
  output rdmaDataStreamPipeOut_notEmpty;
  output RDY_rdmaDataStreamPipeOut_notEmpty;

  // oscillator and gates for output clock CLK_slowClockIfc
  output CLK_slowClockIfc;
  output CLK_GATE_slowClockIfc;

  // signals for module outputs
  wire [511 : 0] xdmaChannel_rawC2hAxiStream_tdata;
  wire [289 : 0] rdmaDataStreamPipeOut_first;
  wire [63 : 0] xdmaChannel_c2hDescByp_dst_addr,
		xdmaChannel_c2hDescByp_src_addr,
		xdmaChannel_h2cDescByp_dst_addr,
		xdmaChannel_h2cDescByp_src_addr,
		xdmaChannel_rawC2hAxiStream_tkeep;
  wire [31 : 0] axilRegBlock_rdata;
  wire [27 : 0] xdmaChannel_c2hDescByp_len, xdmaChannel_h2cDescByp_len;
  wire [4 : 0] xdmaChannel_c2hDescByp_ctl, xdmaChannel_h2cDescByp_ctl;
  wire [1 : 0] axilRegBlock_bresp, axilRegBlock_rresp;
  wire CLK_GATE_slowClockIfc,
       CLK_slowClockIfc,
       RDY_rdmaDataStreamInput_put,
       RDY_rdmaDataStreamPipeOut_deq,
       RDY_rdmaDataStreamPipeOut_first,
       RDY_rdmaDataStreamPipeOut_notEmpty,
       axilRegBlock_arready,
       axilRegBlock_awready,
       axilRegBlock_bvalid,
       axilRegBlock_rvalid,
       axilRegBlock_wready,
       rdmaDataStreamPipeOut_notEmpty,
       xdmaChannel_c2hDescByp_load,
       xdmaChannel_h2cDescByp_load,
       xdmaChannel_rawC2hAxiStream_tlast,
       xdmaChannel_rawC2hAxiStream_tvalid,
       xdmaChannel_rawH2cAxiStream_tready;

  // inlined wires
  wire [576 : 0] xdmaWrap_rawH2cSt_rawBus_dataW_wget;
  wire [35 : 0] xdmaAxiLiteWrap_cntrlAxilSlave_rawWrDataBus_dataW_wget;
  wire [14 : 0] xdmaAxiLiteWrap_cntrlAxilSlave_rawRdAddrBus_dataW_wget,
		xdmaAxiLiteWrap_cntrlAxilSlave_rawWrAddrBus_dataW_wget;
  wire bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_dequeueing_whas,
       bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_enqw_whas,
       bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_enqw_whas,
       bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_dequeueing_whas,
       bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_enqw_whas,
       bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_enqw_whas,
       bsvTopCore_xdmaGearbox_c2hStreamRespQ_deq_pw_whas,
       bsvTopCore_xdmaGearbox_c2hStreamRespQ_enq_pw_whas,
       bsvTopCore_xdmaGearbox_h2cStreamReqQ_deq_pw_whas,
       bsvTopCore_xdmaGearbox_h2cStreamReqQ_enq_pw_whas;

  // register bsvTopCore_cmdQController_descReadProxy_curSegCntReg
  reg [3 : 0] bsvTopCore_cmdQController_descReadProxy_curSegCntReg;
  wire [3 : 0] bsvTopCore_cmdQController_descReadProxy_curSegCntReg_D_IN;
  wire bsvTopCore_cmdQController_descReadProxy_curSegCntReg_EN;

  // register bsvTopCore_cmdQController_descReadProxy_isFillingReqSegmentsReg
  reg bsvTopCore_cmdQController_descReadProxy_isFillingReqSegmentsReg;
  wire bsvTopCore_cmdQController_descReadProxy_isFillingReqSegmentsReg_D_IN,
       bsvTopCore_cmdQController_descReadProxy_isFillingReqSegmentsReg_EN;

  // register bsvTopCore_cmdQController_descReadProxy_isFirstReqSegmentsReg
  reg bsvTopCore_cmdQController_descReadProxy_isFirstReqSegmentsReg;
  wire bsvTopCore_cmdQController_descReadProxy_isFirstReqSegmentsReg_D_IN,
       bsvTopCore_cmdQController_descReadProxy_isFirstReqSegmentsReg_EN;

  // register bsvTopCore_cmdQController_descReadProxy_segBuf_0
  reg [255 : 0] bsvTopCore_cmdQController_descReadProxy_segBuf_0;
  wire [255 : 0] bsvTopCore_cmdQController_descReadProxy_segBuf_0_D_IN;
  wire bsvTopCore_cmdQController_descReadProxy_segBuf_0_EN;

  // register bsvTopCore_cmdQController_descReadProxy_segBuf_1
  reg [255 : 0] bsvTopCore_cmdQController_descReadProxy_segBuf_1;
  wire [255 : 0] bsvTopCore_cmdQController_descReadProxy_segBuf_1_D_IN;
  wire bsvTopCore_cmdQController_descReadProxy_segBuf_1_EN;

  // register bsvTopCore_cmdQController_descReadProxy_totalSegCntReg
  reg [3 : 0] bsvTopCore_cmdQController_descReadProxy_totalSegCntReg;
  wire [3 : 0] bsvTopCore_cmdQController_descReadProxy_totalSegCntReg_D_IN;
  wire bsvTopCore_cmdQController_descReadProxy_totalSegCntReg_EN;

  // register bsvTopCore_cmdQController_descWriteProxy_isSendingDescReg
  reg bsvTopCore_cmdQController_descWriteProxy_isSendingDescReg;
  wire bsvTopCore_cmdQController_descWriteProxy_isSendingDescReg_D_IN,
       bsvTopCore_cmdQController_descWriteProxy_isSendingDescReg_EN;

  // register bsvTopCore_cmdQController_descWriteProxy_segBuf_0
  reg [255 : 0] bsvTopCore_cmdQController_descWriteProxy_segBuf_0;
  wire [255 : 0] bsvTopCore_cmdQController_descWriteProxy_segBuf_0_D_IN;
  wire bsvTopCore_cmdQController_descWriteProxy_segBuf_0_EN;

  // register bsvTopCore_cmdQController_descWriteProxy_segBuf_1
  reg [255 : 0] bsvTopCore_cmdQController_descWriteProxy_segBuf_1;
  wire [255 : 0] bsvTopCore_cmdQController_descWriteProxy_segBuf_1_D_IN;
  wire bsvTopCore_cmdQController_descWriteProxy_segBuf_1_EN;

  // register bsvTopCore_cmdQController_descWriteProxy_segCntReg
  reg [3 : 0] bsvTopCore_cmdQController_descWriteProxy_segCntReg;
  wire [3 : 0] bsvTopCore_cmdQController_descWriteProxy_segCntReg_D_IN;
  wire bsvTopCore_cmdQController_descWriteProxy_segCntReg_EN;

  // register bsvTopCore_dmaAccessH2cCltVec_3_t
  reg bsvTopCore_dmaAccessH2cCltVec_3_t;
  wire bsvTopCore_dmaAccessH2cCltVec_3_t_D_IN,
       bsvTopCore_dmaAccessH2cCltVec_3_t_EN;

  // register bsvTopCore_pgtManager_curBeatOfDataReg
  reg [289 : 0] bsvTopCore_pgtManager_curBeatOfDataReg;
  wire [289 : 0] bsvTopCore_pgtManager_curBeatOfDataReg_D_IN;
  wire bsvTopCore_pgtManager_curBeatOfDataReg_EN;

  // register bsvTopCore_pgtManager_curSecondStagePgtWriteIdxReg
  reg [16 : 0] bsvTopCore_pgtManager_curSecondStagePgtWriteIdxReg;
  wire [16 : 0] bsvTopCore_pgtManager_curSecondStagePgtWriteIdxReg_D_IN;
  wire bsvTopCore_pgtManager_curSecondStagePgtWriteIdxReg_EN;

  // register bsvTopCore_pgtManager_state
  reg [1 : 0] bsvTopCore_pgtManager_state;
  wire [1 : 0] bsvTopCore_pgtManager_state_D_IN;
  wire bsvTopCore_pgtManager_state_EN;

  // register bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_grantReg
  reg bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_grantReg;
  wire bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_grantReg_D_IN,
       bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_grantReg_EN;

  // register bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg
  reg bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg;
  wire bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg_D_IN,
       bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg_EN;

  // register bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg
  reg bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg;
  wire bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg_D_IN,
       bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg_EN;

  // register bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_grantReg
  reg bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_grantReg;
  wire bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_grantReg_D_IN,
       bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_grantReg_EN;

  // register bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_needArbitrationReg
  reg bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_needArbitrationReg;
  wire bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_needArbitrationReg_D_IN,
       bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_needArbitrationReg_EN;

  // register bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_priorityReg
  reg bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_priorityReg;
  wire bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_priorityReg_D_IN,
       bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_priorityReg_EN;

  // register bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_grantReg
  reg bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_grantReg;
  wire bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_grantReg_D_IN,
       bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_grantReg_EN;

  // register bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_needArbitrationReg
  reg bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_needArbitrationReg;
  wire bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_needArbitrationReg_D_IN,
       bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_needArbitrationReg_EN;

  // register bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_priorityReg
  reg bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_priorityReg;
  wire bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_priorityReg_D_IN,
       bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_priorityReg_EN;

  // register bsvTopCore_ringbufPool_arbitratedC2hClient_shouldSaveGrantIdxReg
  reg bsvTopCore_ringbufPool_arbitratedC2hClient_shouldSaveGrantIdxReg;
  wire bsvTopCore_ringbufPool_arbitratedC2hClient_shouldSaveGrantIdxReg_D_IN,
       bsvTopCore_ringbufPool_arbitratedC2hClient_shouldSaveGrantIdxReg_EN;

  // register bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_grantReg
  reg bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_grantReg;
  wire bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_grantReg_D_IN,
       bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_grantReg_EN;

  // register bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg
  reg bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg;
  wire bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg_D_IN,
       bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg_EN;

  // register bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg
  reg bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg;
  wire bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg_D_IN,
       bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg_EN;

  // register bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_grantReg
  reg bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_grantReg;
  wire bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_grantReg_D_IN,
       bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_grantReg_EN;

  // register bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_needArbitrationReg
  reg bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_needArbitrationReg;
  wire bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_needArbitrationReg_D_IN,
       bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_needArbitrationReg_EN;

  // register bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_priorityReg
  reg bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_priorityReg;
  wire bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_priorityReg_D_IN,
       bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_priorityReg_EN;

  // register bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_grantReg
  reg bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_grantReg;
  wire bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_grantReg_D_IN,
       bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_grantReg_EN;

  // register bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_needArbitrationReg
  reg bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_needArbitrationReg;
  wire bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_needArbitrationReg_D_IN,
       bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_needArbitrationReg_EN;

  // register bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_priorityReg
  reg bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_priorityReg;
  wire bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_priorityReg_D_IN,
       bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_priorityReg_EN;

  // register bsvTopCore_ringbufPool_arbitratedH2cClient_shouldSaveGrantIdxReg
  reg bsvTopCore_ringbufPool_arbitratedH2cClient_shouldSaveGrantIdxReg;
  wire bsvTopCore_ringbufPool_arbitratedH2cClient_shouldSaveGrantIdxReg_D_IN,
       bsvTopCore_ringbufPool_arbitratedH2cClient_shouldSaveGrantIdxReg_EN;

  // register bsvTopCore_ringbufPool_controller_0_baseAddrReg
  reg [63 : 0] bsvTopCore_ringbufPool_controller_0_baseAddrReg;
  wire [63 : 0] bsvTopCore_ringbufPool_controller_0_baseAddrReg_D_IN;
  wire bsvTopCore_ringbufPool_controller_0_baseAddrReg_EN;

  // register bsvTopCore_ringbufPool_controller_0_baseAddrReg_1
  reg [63 : 0] bsvTopCore_ringbufPool_controller_0_baseAddrReg_1;
  wire [63 : 0] bsvTopCore_ringbufPool_controller_0_baseAddrReg_1_D_IN;
  wire bsvTopCore_ringbufPool_controller_0_baseAddrReg_1_EN;

  // register bsvTopCore_ringbufPool_controller_0_headReg
  reg [7 : 0] bsvTopCore_ringbufPool_controller_0_headReg;
  wire [7 : 0] bsvTopCore_ringbufPool_controller_0_headReg_D_IN;
  wire bsvTopCore_ringbufPool_controller_0_headReg_EN;

  // register bsvTopCore_ringbufPool_controller_0_headReg_1
  reg [7 : 0] bsvTopCore_ringbufPool_controller_0_headReg_1;
  wire [7 : 0] bsvTopCore_ringbufPool_controller_0_headReg_1_D_IN;
  wire bsvTopCore_ringbufPool_controller_0_headReg_1_EN;

  // register bsvTopCore_ringbufPool_controller_0_headShadowReg
  reg [7 : 0] bsvTopCore_ringbufPool_controller_0_headShadowReg;
  wire [7 : 0] bsvTopCore_ringbufPool_controller_0_headShadowReg_D_IN;
  wire bsvTopCore_ringbufPool_controller_0_headShadowReg_EN;

  // register bsvTopCore_ringbufPool_controller_0_ruleState
  reg bsvTopCore_ringbufPool_controller_0_ruleState;
  wire bsvTopCore_ringbufPool_controller_0_ruleState_D_IN,
       bsvTopCore_ringbufPool_controller_0_ruleState_EN;

  // register bsvTopCore_ringbufPool_controller_0_tailPosInReadBlockReg
  reg [2 : 0] bsvTopCore_ringbufPool_controller_0_tailPosInReadBlockReg;
  wire [2 : 0] bsvTopCore_ringbufPool_controller_0_tailPosInReadBlockReg_D_IN;
  wire bsvTopCore_ringbufPool_controller_0_tailPosInReadBlockReg_EN;

  // register bsvTopCore_ringbufPool_controller_0_tailReg
  reg [7 : 0] bsvTopCore_ringbufPool_controller_0_tailReg;
  wire [7 : 0] bsvTopCore_ringbufPool_controller_0_tailReg_D_IN;
  wire bsvTopCore_ringbufPool_controller_0_tailReg_EN;

  // register bsvTopCore_ringbufPool_controller_0_tailReg_1
  reg [7 : 0] bsvTopCore_ringbufPool_controller_0_tailReg_1;
  wire [7 : 0] bsvTopCore_ringbufPool_controller_0_tailReg_1_D_IN;
  wire bsvTopCore_ringbufPool_controller_0_tailReg_1_EN;

  // register bsvTopCore_ringbufPool_controller_0_tailShadowReg
  reg [7 : 0] bsvTopCore_ringbufPool_controller_0_tailShadowReg;
  wire [7 : 0] bsvTopCore_ringbufPool_controller_0_tailShadowReg_D_IN;
  wire bsvTopCore_ringbufPool_controller_0_tailShadowReg_EN;

  // register bsvTopCore_ringbufPool_controller_1_baseAddrReg
  reg [63 : 0] bsvTopCore_ringbufPool_controller_1_baseAddrReg;
  wire [63 : 0] bsvTopCore_ringbufPool_controller_1_baseAddrReg_D_IN;
  wire bsvTopCore_ringbufPool_controller_1_baseAddrReg_EN;

  // register bsvTopCore_ringbufPool_controller_1_baseAddrReg_1
  reg [63 : 0] bsvTopCore_ringbufPool_controller_1_baseAddrReg_1;
  wire [63 : 0] bsvTopCore_ringbufPool_controller_1_baseAddrReg_1_D_IN;
  wire bsvTopCore_ringbufPool_controller_1_baseAddrReg_1_EN;

  // register bsvTopCore_ringbufPool_controller_1_headReg
  reg [7 : 0] bsvTopCore_ringbufPool_controller_1_headReg;
  wire [7 : 0] bsvTopCore_ringbufPool_controller_1_headReg_D_IN;
  wire bsvTopCore_ringbufPool_controller_1_headReg_EN;

  // register bsvTopCore_ringbufPool_controller_1_headReg_1
  reg [7 : 0] bsvTopCore_ringbufPool_controller_1_headReg_1;
  wire [7 : 0] bsvTopCore_ringbufPool_controller_1_headReg_1_D_IN;
  wire bsvTopCore_ringbufPool_controller_1_headReg_1_EN;

  // register bsvTopCore_ringbufPool_controller_1_headShadowReg
  reg [7 : 0] bsvTopCore_ringbufPool_controller_1_headShadowReg;
  wire [7 : 0] bsvTopCore_ringbufPool_controller_1_headShadowReg_D_IN;
  wire bsvTopCore_ringbufPool_controller_1_headShadowReg_EN;

  // register bsvTopCore_ringbufPool_controller_1_ruleState
  reg bsvTopCore_ringbufPool_controller_1_ruleState;
  wire bsvTopCore_ringbufPool_controller_1_ruleState_D_IN,
       bsvTopCore_ringbufPool_controller_1_ruleState_EN;

  // register bsvTopCore_ringbufPool_controller_1_tailPosInReadBlockReg
  reg [2 : 0] bsvTopCore_ringbufPool_controller_1_tailPosInReadBlockReg;
  wire [2 : 0] bsvTopCore_ringbufPool_controller_1_tailPosInReadBlockReg_D_IN;
  wire bsvTopCore_ringbufPool_controller_1_tailPosInReadBlockReg_EN;

  // register bsvTopCore_ringbufPool_controller_1_tailReg
  reg [7 : 0] bsvTopCore_ringbufPool_controller_1_tailReg;
  wire [7 : 0] bsvTopCore_ringbufPool_controller_1_tailReg_D_IN;
  wire bsvTopCore_ringbufPool_controller_1_tailReg_EN;

  // register bsvTopCore_ringbufPool_controller_1_tailReg_1
  reg [7 : 0] bsvTopCore_ringbufPool_controller_1_tailReg_1;
  wire [7 : 0] bsvTopCore_ringbufPool_controller_1_tailReg_1_D_IN;
  wire bsvTopCore_ringbufPool_controller_1_tailReg_1_EN;

  // register bsvTopCore_ringbufPool_controller_1_tailShadowReg
  reg [7 : 0] bsvTopCore_ringbufPool_controller_1_tailShadowReg;
  wire [7 : 0] bsvTopCore_ringbufPool_controller_1_tailShadowReg_D_IN;
  wire bsvTopCore_ringbufPool_controller_1_tailShadowReg_EN;

  // register bsvTopCore_ringbufPool_controller_2_baseAddrReg
  reg [63 : 0] bsvTopCore_ringbufPool_controller_2_baseAddrReg;
  wire [63 : 0] bsvTopCore_ringbufPool_controller_2_baseAddrReg_D_IN;
  wire bsvTopCore_ringbufPool_controller_2_baseAddrReg_EN;

  // register bsvTopCore_ringbufPool_controller_2_baseAddrReg_1
  reg [63 : 0] bsvTopCore_ringbufPool_controller_2_baseAddrReg_1;
  wire [63 : 0] bsvTopCore_ringbufPool_controller_2_baseAddrReg_1_D_IN;
  wire bsvTopCore_ringbufPool_controller_2_baseAddrReg_1_EN;

  // register bsvTopCore_ringbufPool_controller_2_headReg
  reg [7 : 0] bsvTopCore_ringbufPool_controller_2_headReg;
  wire [7 : 0] bsvTopCore_ringbufPool_controller_2_headReg_D_IN;
  wire bsvTopCore_ringbufPool_controller_2_headReg_EN;

  // register bsvTopCore_ringbufPool_controller_2_headReg_1
  reg [7 : 0] bsvTopCore_ringbufPool_controller_2_headReg_1;
  wire [7 : 0] bsvTopCore_ringbufPool_controller_2_headReg_1_D_IN;
  wire bsvTopCore_ringbufPool_controller_2_headReg_1_EN;

  // register bsvTopCore_ringbufPool_controller_2_headShadowReg
  reg [7 : 0] bsvTopCore_ringbufPool_controller_2_headShadowReg;
  wire [7 : 0] bsvTopCore_ringbufPool_controller_2_headShadowReg_D_IN;
  wire bsvTopCore_ringbufPool_controller_2_headShadowReg_EN;

  // register bsvTopCore_ringbufPool_controller_2_ruleState
  reg bsvTopCore_ringbufPool_controller_2_ruleState;
  wire bsvTopCore_ringbufPool_controller_2_ruleState_D_IN,
       bsvTopCore_ringbufPool_controller_2_ruleState_EN;

  // register bsvTopCore_ringbufPool_controller_2_tailPosInReadBlockReg
  reg [2 : 0] bsvTopCore_ringbufPool_controller_2_tailPosInReadBlockReg;
  wire [2 : 0] bsvTopCore_ringbufPool_controller_2_tailPosInReadBlockReg_D_IN;
  wire bsvTopCore_ringbufPool_controller_2_tailPosInReadBlockReg_EN;

  // register bsvTopCore_ringbufPool_controller_2_tailReg
  reg [7 : 0] bsvTopCore_ringbufPool_controller_2_tailReg;
  wire [7 : 0] bsvTopCore_ringbufPool_controller_2_tailReg_D_IN;
  wire bsvTopCore_ringbufPool_controller_2_tailReg_EN;

  // register bsvTopCore_ringbufPool_controller_2_tailReg_1
  reg [7 : 0] bsvTopCore_ringbufPool_controller_2_tailReg_1;
  wire [7 : 0] bsvTopCore_ringbufPool_controller_2_tailReg_1_D_IN;
  wire bsvTopCore_ringbufPool_controller_2_tailReg_1_EN;

  // register bsvTopCore_ringbufPool_controller_2_tailShadowReg
  reg [7 : 0] bsvTopCore_ringbufPool_controller_2_tailShadowReg;
  wire [7 : 0] bsvTopCore_ringbufPool_controller_2_tailShadowReg_D_IN;
  wire bsvTopCore_ringbufPool_controller_2_tailShadowReg_EN;

  // register bsvTopCore_ringbufPool_controller_3_baseAddrReg
  reg [63 : 0] bsvTopCore_ringbufPool_controller_3_baseAddrReg;
  wire [63 : 0] bsvTopCore_ringbufPool_controller_3_baseAddrReg_D_IN;
  wire bsvTopCore_ringbufPool_controller_3_baseAddrReg_EN;

  // register bsvTopCore_ringbufPool_controller_3_baseAddrReg_1
  reg [63 : 0] bsvTopCore_ringbufPool_controller_3_baseAddrReg_1;
  wire [63 : 0] bsvTopCore_ringbufPool_controller_3_baseAddrReg_1_D_IN;
  wire bsvTopCore_ringbufPool_controller_3_baseAddrReg_1_EN;

  // register bsvTopCore_ringbufPool_controller_3_headReg
  reg [7 : 0] bsvTopCore_ringbufPool_controller_3_headReg;
  wire [7 : 0] bsvTopCore_ringbufPool_controller_3_headReg_D_IN;
  wire bsvTopCore_ringbufPool_controller_3_headReg_EN;

  // register bsvTopCore_ringbufPool_controller_3_headReg_1
  reg [7 : 0] bsvTopCore_ringbufPool_controller_3_headReg_1;
  wire [7 : 0] bsvTopCore_ringbufPool_controller_3_headReg_1_D_IN;
  wire bsvTopCore_ringbufPool_controller_3_headReg_1_EN;

  // register bsvTopCore_ringbufPool_controller_3_headShadowReg
  reg [7 : 0] bsvTopCore_ringbufPool_controller_3_headShadowReg;
  wire [7 : 0] bsvTopCore_ringbufPool_controller_3_headShadowReg_D_IN;
  wire bsvTopCore_ringbufPool_controller_3_headShadowReg_EN;

  // register bsvTopCore_ringbufPool_controller_3_ruleState
  reg bsvTopCore_ringbufPool_controller_3_ruleState;
  wire bsvTopCore_ringbufPool_controller_3_ruleState_D_IN,
       bsvTopCore_ringbufPool_controller_3_ruleState_EN;

  // register bsvTopCore_ringbufPool_controller_3_tailPosInReadBlockReg
  reg [2 : 0] bsvTopCore_ringbufPool_controller_3_tailPosInReadBlockReg;
  wire [2 : 0] bsvTopCore_ringbufPool_controller_3_tailPosInReadBlockReg_D_IN;
  wire bsvTopCore_ringbufPool_controller_3_tailPosInReadBlockReg_EN;

  // register bsvTopCore_ringbufPool_controller_3_tailReg
  reg [7 : 0] bsvTopCore_ringbufPool_controller_3_tailReg;
  wire [7 : 0] bsvTopCore_ringbufPool_controller_3_tailReg_D_IN;
  wire bsvTopCore_ringbufPool_controller_3_tailReg_EN;

  // register bsvTopCore_ringbufPool_controller_3_tailReg_1
  reg [7 : 0] bsvTopCore_ringbufPool_controller_3_tailReg_1;
  wire [7 : 0] bsvTopCore_ringbufPool_controller_3_tailReg_1_D_IN;
  wire bsvTopCore_ringbufPool_controller_3_tailReg_1_EN;

  // register bsvTopCore_ringbufPool_controller_3_tailShadowReg
  reg [7 : 0] bsvTopCore_ringbufPool_controller_3_tailShadowReg;
  wire [7 : 0] bsvTopCore_ringbufPool_controller_3_tailShadowReg_D_IN;
  wire bsvTopCore_ringbufPool_controller_3_tailShadowReg_EN;

  // register bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_cnt
  reg [3 : 0] bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_cnt;
  wire [3 : 0] bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_cnt_D_IN;
  wire bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_cnt_EN;

  // register bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_s1
  reg [1 : 0] bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_s1;
  wire [1 : 0] bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_s1_D_IN;
  wire bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_s1_EN;

  // register bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_s2
  reg [1 : 0] bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_s2;
  wire [1 : 0] bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_s2_D_IN;
  wire bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_s2_EN;

  // register bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_cnt
  reg [3 : 0] bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_cnt;
  wire [3 : 0] bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_cnt_D_IN;
  wire bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_cnt_EN;

  // register bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_s1
  reg [1 : 0] bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_s1;
  wire [1 : 0] bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_s1_D_IN;
  wire bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_s1_EN;

  // register bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_s2
  reg [1 : 0] bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_s2;
  wire [1 : 0] bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_s2_D_IN;
  wire bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_s2_EN;

  // register bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_cnt
  reg [3 : 0] bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_cnt;
  wire [3 : 0] bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_cnt_D_IN;
  wire bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_cnt_EN;

  // register bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_s1
  reg [1 : 0] bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_s1;
  wire [1 : 0] bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_s1_D_IN;
  wire bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_s1_EN;

  // register bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_s2
  reg [1 : 0] bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_s2;
  wire [1 : 0] bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_s2_D_IN;
  wire bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_s2_EN;

  // register bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_cnt
  reg [3 : 0] bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_cnt;
  wire [3 : 0] bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_cnt_D_IN;
  wire bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_cnt_EN;

  // register bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_s1
  reg [1 : 0] bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_s1;
  wire [1 : 0] bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_s1_D_IN;
  wire bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_s1_EN;

  // register bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_s2
  reg [1 : 0] bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_s2;
  wire [1 : 0] bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_s2_D_IN;
  wire bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_s2_EN;

  // register bsvTopCore_workAndCompleteQController_sqDescReadProxy_curSegCntReg
  reg [3 : 0] bsvTopCore_workAndCompleteQController_sqDescReadProxy_curSegCntReg;
  wire [3 : 0] bsvTopCore_workAndCompleteQController_sqDescReadProxy_curSegCntReg_D_IN;
  wire bsvTopCore_workAndCompleteQController_sqDescReadProxy_curSegCntReg_EN;

  // register bsvTopCore_workAndCompleteQController_sqDescReadProxy_isFillingReqSegmentsReg
  reg bsvTopCore_workAndCompleteQController_sqDescReadProxy_isFillingReqSegmentsReg;
  wire bsvTopCore_workAndCompleteQController_sqDescReadProxy_isFillingReqSegmentsReg_D_IN,
       bsvTopCore_workAndCompleteQController_sqDescReadProxy_isFillingReqSegmentsReg_EN;

  // register bsvTopCore_workAndCompleteQController_sqDescReadProxy_isFirstReqSegmentsReg
  reg bsvTopCore_workAndCompleteQController_sqDescReadProxy_isFirstReqSegmentsReg;
  wire bsvTopCore_workAndCompleteQController_sqDescReadProxy_isFirstReqSegmentsReg_D_IN,
       bsvTopCore_workAndCompleteQController_sqDescReadProxy_isFirstReqSegmentsReg_EN;

  // register bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_0
  reg [255 : 0] bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_0;
  wire [255 : 0] bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_0_D_IN;
  wire bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_0_EN;

  // register bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1
  reg [255 : 0] bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1;
  wire [255 : 0] bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1_D_IN;
  wire bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1_EN;

  // register bsvTopCore_workAndCompleteQController_sqDescReadProxy_totalSegCntReg
  reg [3 : 0] bsvTopCore_workAndCompleteQController_sqDescReadProxy_totalSegCntReg;
  wire [3 : 0] bsvTopCore_workAndCompleteQController_sqDescReadProxy_totalSegCntReg_D_IN;
  wire bsvTopCore_workAndCompleteQController_sqDescReadProxy_totalSegCntReg_EN;

  // register bsvTopCore_xdmaGearbox_c2hReqGearbox_block0_status
  reg bsvTopCore_xdmaGearbox_c2hReqGearbox_block0_status;
  wire bsvTopCore_xdmaGearbox_c2hReqGearbox_block0_status_D_IN,
       bsvTopCore_xdmaGearbox_c2hReqGearbox_block0_status_EN;

  // register bsvTopCore_xdmaGearbox_c2hReqGearbox_block1_status
  reg bsvTopCore_xdmaGearbox_c2hReqGearbox_block1_status;
  wire bsvTopCore_xdmaGearbox_c2hReqGearbox_block1_status_D_IN,
       bsvTopCore_xdmaGearbox_c2hReqGearbox_block1_status_EN;

  // register bsvTopCore_xdmaGearbox_c2hReqGearbox_dInReset_pre_isInReset
  reg bsvTopCore_xdmaGearbox_c2hReqGearbox_dInReset_pre_isInReset;
  wire bsvTopCore_xdmaGearbox_c2hReqGearbox_dInReset_pre_isInReset_D_IN,
       bsvTopCore_xdmaGearbox_c2hReqGearbox_dInReset_pre_isInReset_EN;

  // register bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_status_0
  reg bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_status_0;
  wire bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_status_0_D_IN,
       bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_status_0_EN;

  // register bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_status_1
  reg bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_status_1;
  wire bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_status_1_D_IN,
       bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_status_1_EN;

  // register bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_status_0
  reg bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_status_0;
  wire bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_status_0_D_IN,
       bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_status_0_EN;

  // register bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_status_1
  reg bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_status_1;
  wire bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_status_1_D_IN,
       bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_status_1_EN;

  // register bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_0
  reg [374 : 0] bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_0;
  wire [374 : 0] bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_0_D_IN;
  wire bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_0_EN;

  // register bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_1
  reg [374 : 0] bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_1;
  wire [374 : 0] bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_1_D_IN;
  wire bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_1_EN;

  // register bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_2
  reg [374 : 0] bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_2;
  wire [374 : 0] bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_2_D_IN;
  wire bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_2_EN;

  // register bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_3
  reg [374 : 0] bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_3;
  wire [374 : 0] bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_3_D_IN;
  wire bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_3_EN;

  // register bsvTopCore_xdmaGearbox_c2hReqGearbox_read_block
  reg bsvTopCore_xdmaGearbox_c2hReqGearbox_read_block;
  wire bsvTopCore_xdmaGearbox_c2hReqGearbox_read_block_D_IN,
       bsvTopCore_xdmaGearbox_c2hReqGearbox_read_block_EN;

  // register bsvTopCore_xdmaGearbox_c2hReqGearbox_sInReset_pre_isInReset
  reg bsvTopCore_xdmaGearbox_c2hReqGearbox_sInReset_pre_isInReset;
  wire bsvTopCore_xdmaGearbox_c2hReqGearbox_sInReset_pre_isInReset_D_IN,
       bsvTopCore_xdmaGearbox_c2hReqGearbox_sInReset_pre_isInReset_EN;

  // register bsvTopCore_xdmaGearbox_c2hReqGearbox_write_block
  reg bsvTopCore_xdmaGearbox_c2hReqGearbox_write_block;
  wire bsvTopCore_xdmaGearbox_c2hReqGearbox_write_block_D_IN,
       bsvTopCore_xdmaGearbox_c2hReqGearbox_write_block_EN;

  // register bsvTopCore_xdmaGearbox_c2hStreamRespQ_head_wrapped
  reg bsvTopCore_xdmaGearbox_c2hStreamRespQ_head_wrapped;
  wire bsvTopCore_xdmaGearbox_c2hStreamRespQ_head_wrapped_D_IN,
       bsvTopCore_xdmaGearbox_c2hStreamRespQ_head_wrapped_EN;

  // register bsvTopCore_xdmaGearbox_c2hStreamRespQ_tail_wrapped
  reg bsvTopCore_xdmaGearbox_c2hStreamRespQ_tail_wrapped;
  wire bsvTopCore_xdmaGearbox_c2hStreamRespQ_tail_wrapped_D_IN,
       bsvTopCore_xdmaGearbox_c2hStreamRespQ_tail_wrapped_EN;

  // register bsvTopCore_xdmaGearbox_h2cRespGearbox_block0
  reg [581 : 0] bsvTopCore_xdmaGearbox_h2cRespGearbox_block0;
  wire [581 : 0] bsvTopCore_xdmaGearbox_h2cRespGearbox_block0_D_IN;
  wire bsvTopCore_xdmaGearbox_h2cRespGearbox_block0_EN;

  // register bsvTopCore_xdmaGearbox_h2cRespGearbox_block0_status
  reg bsvTopCore_xdmaGearbox_h2cRespGearbox_block0_status;
  wire bsvTopCore_xdmaGearbox_h2cRespGearbox_block0_status_D_IN,
       bsvTopCore_xdmaGearbox_h2cRespGearbox_block0_status_EN;

  // register bsvTopCore_xdmaGearbox_h2cRespGearbox_block1
  reg [581 : 0] bsvTopCore_xdmaGearbox_h2cRespGearbox_block1;
  wire [581 : 0] bsvTopCore_xdmaGearbox_h2cRespGearbox_block1_D_IN;
  wire bsvTopCore_xdmaGearbox_h2cRespGearbox_block1_EN;

  // register bsvTopCore_xdmaGearbox_h2cRespGearbox_block1_status
  reg bsvTopCore_xdmaGearbox_h2cRespGearbox_block1_status;
  wire bsvTopCore_xdmaGearbox_h2cRespGearbox_block1_status_D_IN,
       bsvTopCore_xdmaGearbox_h2cRespGearbox_block1_status_EN;

  // register bsvTopCore_xdmaGearbox_h2cRespGearbox_dInReset_pre_isInReset
  reg bsvTopCore_xdmaGearbox_h2cRespGearbox_dInReset_pre_isInReset;
  wire bsvTopCore_xdmaGearbox_h2cRespGearbox_dInReset_pre_isInReset_D_IN,
       bsvTopCore_xdmaGearbox_h2cRespGearbox_dInReset_pre_isInReset_EN;

  // register bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_status_0
  reg bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_status_0;
  wire bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_status_0_D_IN,
       bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_status_0_EN;

  // register bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_status_1
  reg bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_status_1;
  wire bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_status_1_D_IN,
       bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_status_1_EN;

  // register bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_status_0
  reg bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_status_0;
  wire bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_status_0_D_IN,
       bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_status_0_EN;

  // register bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_status_1
  reg bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_status_1;
  wire bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_status_1_D_IN,
       bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_status_1_EN;

  // register bsvTopCore_xdmaGearbox_h2cRespGearbox_read_block
  reg bsvTopCore_xdmaGearbox_h2cRespGearbox_read_block;
  wire bsvTopCore_xdmaGearbox_h2cRespGearbox_read_block_D_IN,
       bsvTopCore_xdmaGearbox_h2cRespGearbox_read_block_EN;

  // register bsvTopCore_xdmaGearbox_h2cRespGearbox_sInReset_pre_isInReset
  reg bsvTopCore_xdmaGearbox_h2cRespGearbox_sInReset_pre_isInReset;
  wire bsvTopCore_xdmaGearbox_h2cRespGearbox_sInReset_pre_isInReset_D_IN,
       bsvTopCore_xdmaGearbox_h2cRespGearbox_sInReset_pre_isInReset_EN;

  // register bsvTopCore_xdmaGearbox_h2cRespGearbox_write_block
  reg bsvTopCore_xdmaGearbox_h2cRespGearbox_write_block;
  wire bsvTopCore_xdmaGearbox_h2cRespGearbox_write_block_D_IN,
       bsvTopCore_xdmaGearbox_h2cRespGearbox_write_block_EN;

  // register bsvTopCore_xdmaGearbox_h2cStreamReqQStore
  reg [83 : 0] bsvTopCore_xdmaGearbox_h2cStreamReqQStore;
  wire [83 : 0] bsvTopCore_xdmaGearbox_h2cStreamReqQStore_D_IN;
  wire bsvTopCore_xdmaGearbox_h2cStreamReqQStore_EN;

  // register bsvTopCore_xdmaGearbox_h2cStreamReqQ_head_wrapped
  reg bsvTopCore_xdmaGearbox_h2cStreamReqQ_head_wrapped;
  wire bsvTopCore_xdmaGearbox_h2cStreamReqQ_head_wrapped_D_IN,
       bsvTopCore_xdmaGearbox_h2cStreamReqQ_head_wrapped_EN;

  // register bsvTopCore_xdmaGearbox_h2cStreamReqQ_tail_wrapped
  reg bsvTopCore_xdmaGearbox_h2cStreamReqQ_tail_wrapped;
  wire bsvTopCore_xdmaGearbox_h2cStreamReqQ_tail_wrapped_D_IN,
       bsvTopCore_xdmaGearbox_h2cStreamReqQ_tail_wrapped_EN;

  // register bsvTopCore_xdmaGearbox_isCurrentC2hReqAnEvenBeat
  reg bsvTopCore_xdmaGearbox_isCurrentC2hReqAnEvenBeat;
  wire bsvTopCore_xdmaGearbox_isCurrentC2hReqAnEvenBeat_D_IN,
       bsvTopCore_xdmaGearbox_isCurrentC2hReqAnEvenBeat_EN;

  // register bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_grantReg
  reg bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_grantReg;
  wire bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_grantReg_D_IN,
       bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_grantReg_EN;

  // register bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg
  reg bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg;
  wire bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg_D_IN,
       bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg_EN;

  // register bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg
  reg bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg;
  wire bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg_D_IN,
       bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg_EN;

  // register bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_grantReg
  reg bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_grantReg;
  wire bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_grantReg_D_IN,
       bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_grantReg_EN;

  // register bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_needArbitrationReg
  reg bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_needArbitrationReg;
  wire bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_needArbitrationReg_D_IN,
       bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_needArbitrationReg_EN;

  // register bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_priorityReg
  reg bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_priorityReg;
  wire bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_priorityReg_D_IN,
       bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_priorityReg_EN;

  // register bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_grantReg
  reg bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_grantReg;
  wire bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_grantReg_D_IN,
       bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_grantReg_EN;

  // register bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_needArbitrationReg
  reg bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_needArbitrationReg;
  wire bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_needArbitrationReg_D_IN,
       bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_needArbitrationReg_EN;

  // register bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_priorityReg
  reg bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_priorityReg;
  wire bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_priorityReg_D_IN,
       bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_priorityReg_EN;

  // register bsvTopCore_xdmaReadClt_shouldSaveGrantIdxReg
  reg bsvTopCore_xdmaReadClt_shouldSaveGrantIdxReg;
  wire bsvTopCore_xdmaReadClt_shouldSaveGrantIdxReg_D_IN,
       bsvTopCore_xdmaReadClt_shouldSaveGrantIdxReg_EN;

  // register bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_grantReg
  reg bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_grantReg;
  wire bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_grantReg_D_IN,
       bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_grantReg_EN;

  // register bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_needArbitrationReg
  reg bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_needArbitrationReg;
  reg bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_needArbitrationReg_D_IN;
  wire bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_needArbitrationReg_EN;

  // register bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_priorityReg
  reg bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_priorityReg;
  wire bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_priorityReg_D_IN,
       bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_priorityReg_EN;

  // register bsvTopCore_xdmaWriteClt_shouldSaveGrantIdxReg
  reg bsvTopCore_xdmaWriteClt_shouldSaveGrantIdxReg;
  wire bsvTopCore_xdmaWriteClt_shouldSaveGrantIdxReg_D_IN,
       bsvTopCore_xdmaWriteClt_shouldSaveGrantIdxReg_EN;

  // register xdmaAxiLiteWrap_cntrlAxilSlave_rawRdAddrBus_isReset_isInReset
  reg xdmaAxiLiteWrap_cntrlAxilSlave_rawRdAddrBus_isReset_isInReset;
  wire xdmaAxiLiteWrap_cntrlAxilSlave_rawRdAddrBus_isReset_isInReset_D_IN,
       xdmaAxiLiteWrap_cntrlAxilSlave_rawRdAddrBus_isReset_isInReset_EN;

  // register xdmaAxiLiteWrap_cntrlAxilSlave_rawRdDataBus_isReset_isInReset
  reg xdmaAxiLiteWrap_cntrlAxilSlave_rawRdDataBus_isReset_isInReset;
  wire xdmaAxiLiteWrap_cntrlAxilSlave_rawRdDataBus_isReset_isInReset_D_IN,
       xdmaAxiLiteWrap_cntrlAxilSlave_rawRdDataBus_isReset_isInReset_EN;

  // register xdmaAxiLiteWrap_cntrlAxilSlave_rawWrAddrBus_isReset_isInReset
  reg xdmaAxiLiteWrap_cntrlAxilSlave_rawWrAddrBus_isReset_isInReset;
  wire xdmaAxiLiteWrap_cntrlAxilSlave_rawWrAddrBus_isReset_isInReset_D_IN,
       xdmaAxiLiteWrap_cntrlAxilSlave_rawWrAddrBus_isReset_isInReset_EN;

  // register xdmaAxiLiteWrap_cntrlAxilSlave_rawWrDataBus_isReset_isInReset
  reg xdmaAxiLiteWrap_cntrlAxilSlave_rawWrDataBus_isReset_isInReset;
  wire xdmaAxiLiteWrap_cntrlAxilSlave_rawWrDataBus_isReset_isInReset_D_IN,
       xdmaAxiLiteWrap_cntrlAxilSlave_rawWrDataBus_isReset_isInReset_EN;

  // register xdmaAxiLiteWrap_cntrlAxilSlave_rawWrRespBus_isReset_isInReset
  reg xdmaAxiLiteWrap_cntrlAxilSlave_rawWrRespBus_isReset_isInReset;
  wire xdmaAxiLiteWrap_cntrlAxilSlave_rawWrRespBus_isReset_isInReset_D_IN,
       xdmaAxiLiteWrap_cntrlAxilSlave_rawWrRespBus_isReset_isInReset_EN;

  // register xdmaWrap_h2cNextBeatIsFirst
  reg xdmaWrap_h2cNextBeatIsFirst;
  wire xdmaWrap_h2cNextBeatIsFirst_D_IN, xdmaWrap_h2cNextBeatIsFirst_EN;

  // register xdmaWrap_rawC2hSt_rawBus_isReset_isInReset
  reg xdmaWrap_rawC2hSt_rawBus_isReset_isInReset;
  wire xdmaWrap_rawC2hSt_rawBus_isReset_isInReset_D_IN,
       xdmaWrap_rawC2hSt_rawBus_isReset_isInReset_EN;

  // register xdmaWrap_rawH2cSt_rawBus_isReset_isInReset
  reg xdmaWrap_rawH2cSt_rawBus_isReset_isInReset;
  wire xdmaWrap_rawH2cSt_rawBus_isReset_isInReset_D_IN,
       xdmaWrap_rawH2cSt_rawBus_isReset_isInReset_EN;

  // ports of submodule bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ
  wire [51 : 0] bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_IN,
		bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT;
  wire bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_CLR,
       bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_DEQ,
       bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_EMPTY_N,
       bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_ENQ,
       bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_FULL_N;

  // ports of submodule bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ
  wire [418 : 0] bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_IN,
		 bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT;
  wire bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_CLR,
       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_DEQ,
       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_EMPTY_N,
       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_ENQ,
       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_FULL_N;

  // ports of submodule bsvTopCore_bluerdmaDmaProxy_c2hProxy_inRespQ
  wire [52 : 0] bsvTopCore_bluerdmaDmaProxy_c2hProxy_inRespQ_D_IN,
		bsvTopCore_bluerdmaDmaProxy_c2hProxy_inRespQ_D_OUT;
  wire bsvTopCore_bluerdmaDmaProxy_c2hProxy_inRespQ_CLR,
       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inRespQ_DEQ,
       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inRespQ_EMPTY_N,
       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inRespQ_ENQ,
       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inRespQ_FULL_N;

  // ports of submodule bsvTopCore_bluerdmaDmaProxy_c2hProxy_outReqQ
  wire [373 : 0] bsvTopCore_bluerdmaDmaProxy_c2hProxy_outReqQ_D_IN,
		 bsvTopCore_bluerdmaDmaProxy_c2hProxy_outReqQ_D_OUT;
  wire bsvTopCore_bluerdmaDmaProxy_c2hProxy_outReqQ_CLR,
       bsvTopCore_bluerdmaDmaProxy_c2hProxy_outReqQ_DEQ,
       bsvTopCore_bluerdmaDmaProxy_c2hProxy_outReqQ_EMPTY_N,
       bsvTopCore_bluerdmaDmaProxy_c2hProxy_outReqQ_ENQ,
       bsvTopCore_bluerdmaDmaProxy_c2hProxy_outReqQ_FULL_N;

  // ports of submodule bsvTopCore_bluerdmaDmaProxy_c2hProxy_outRespQ
  wire bsvTopCore_bluerdmaDmaProxy_c2hProxy_outRespQ_CLR,
       bsvTopCore_bluerdmaDmaProxy_c2hProxy_outRespQ_DEQ,
       bsvTopCore_bluerdmaDmaProxy_c2hProxy_outRespQ_EMPTY_N,
       bsvTopCore_bluerdmaDmaProxy_c2hProxy_outRespQ_ENQ,
       bsvTopCore_bluerdmaDmaProxy_c2hProxy_outRespQ_FULL_N;

  // ports of submodule bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ
  wire [91 : 0] bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_IN,
		bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT;
  wire bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_CLR,
       bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_DEQ,
       bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_EMPTY_N,
       bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_ENQ,
       bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_FULL_N;

  // ports of submodule bsvTopCore_bluerdmaDmaProxy_h2cProxy_inReqQ
  wire [168 : 0] bsvTopCore_bluerdmaDmaProxy_h2cProxy_inReqQ_D_IN,
		 bsvTopCore_bluerdmaDmaProxy_h2cProxy_inReqQ_D_OUT;
  wire bsvTopCore_bluerdmaDmaProxy_h2cProxy_inReqQ_CLR,
       bsvTopCore_bluerdmaDmaProxy_h2cProxy_inReqQ_DEQ,
       bsvTopCore_bluerdmaDmaProxy_h2cProxy_inReqQ_EMPTY_N,
       bsvTopCore_bluerdmaDmaProxy_h2cProxy_inReqQ_ENQ,
       bsvTopCore_bluerdmaDmaProxy_h2cProxy_inReqQ_FULL_N;

  // ports of submodule bsvTopCore_bluerdmaDmaProxy_h2cProxy_inRespQ
  wire [382 : 0] bsvTopCore_bluerdmaDmaProxy_h2cProxy_inRespQ_D_IN,
		 bsvTopCore_bluerdmaDmaProxy_h2cProxy_inRespQ_D_OUT;
  wire bsvTopCore_bluerdmaDmaProxy_h2cProxy_inRespQ_CLR,
       bsvTopCore_bluerdmaDmaProxy_h2cProxy_inRespQ_DEQ,
       bsvTopCore_bluerdmaDmaProxy_h2cProxy_inRespQ_EMPTY_N,
       bsvTopCore_bluerdmaDmaProxy_h2cProxy_inRespQ_ENQ,
       bsvTopCore_bluerdmaDmaProxy_h2cProxy_inRespQ_FULL_N;

  // ports of submodule bsvTopCore_bluerdmaDmaProxy_h2cProxy_outReqQ
  wire [83 : 0] bsvTopCore_bluerdmaDmaProxy_h2cProxy_outReqQ_D_IN,
		bsvTopCore_bluerdmaDmaProxy_h2cProxy_outReqQ_D_OUT;
  wire bsvTopCore_bluerdmaDmaProxy_h2cProxy_outReqQ_CLR,
       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outReqQ_DEQ,
       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outReqQ_EMPTY_N,
       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outReqQ_ENQ,
       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outReqQ_FULL_N;

  // ports of submodule bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ
  wire [289 : 0] bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_IN,
		 bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT;
  wire bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_CLR,
       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_DEQ,
       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_EMPTY_N,
       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_ENQ,
       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_FULL_N;

  // ports of submodule bsvTopCore_cmdQController_descReadProxy_ringbufQ
  wire [255 : 0] bsvTopCore_cmdQController_descReadProxy_ringbufQ_D_IN,
		 bsvTopCore_cmdQController_descReadProxy_ringbufQ_D_OUT;
  wire bsvTopCore_cmdQController_descReadProxy_ringbufQ_CLR,
       bsvTopCore_cmdQController_descReadProxy_ringbufQ_DEQ,
       bsvTopCore_cmdQController_descReadProxy_ringbufQ_EMPTY_N,
       bsvTopCore_cmdQController_descReadProxy_ringbufQ_ENQ,
       bsvTopCore_cmdQController_descReadProxy_ringbufQ_FULL_N;

  // ports of submodule bsvTopCore_cmdQController_descWriteProxy_ringbufQ
  wire [255 : 0] bsvTopCore_cmdQController_descWriteProxy_ringbufQ_D_IN,
		 bsvTopCore_cmdQController_descWriteProxy_ringbufQ_D_OUT;
  wire bsvTopCore_cmdQController_descWriteProxy_ringbufQ_CLR,
       bsvTopCore_cmdQController_descWriteProxy_ringbufQ_DEQ,
       bsvTopCore_cmdQController_descWriteProxy_ringbufQ_EMPTY_N,
       bsvTopCore_cmdQController_descWriteProxy_ringbufQ_ENQ,
       bsvTopCore_cmdQController_descWriteProxy_ringbufQ_FULL_N;

  // ports of submodule bsvTopCore_cmdQController_metaDataInflightReqQ
  wire [255 : 0] bsvTopCore_cmdQController_metaDataInflightReqQ_D_IN,
		 bsvTopCore_cmdQController_metaDataInflightReqQ_D_OUT;
  wire bsvTopCore_cmdQController_metaDataInflightReqQ_CLR,
       bsvTopCore_cmdQController_metaDataInflightReqQ_DEQ,
       bsvTopCore_cmdQController_metaDataInflightReqQ_EMPTY_N,
       bsvTopCore_cmdQController_metaDataInflightReqQ_ENQ,
       bsvTopCore_cmdQController_metaDataInflightReqQ_FULL_N;

  // ports of submodule bsvTopCore_cmdQController_metaDataReqQ
  reg [302 : 0] bsvTopCore_cmdQController_metaDataReqQ_D_IN;
  wire [302 : 0] bsvTopCore_cmdQController_metaDataReqQ_D_OUT;
  wire bsvTopCore_cmdQController_metaDataReqQ_CLR,
       bsvTopCore_cmdQController_metaDataReqQ_DEQ,
       bsvTopCore_cmdQController_metaDataReqQ_EMPTY_N,
       bsvTopCore_cmdQController_metaDataReqQ_ENQ,
       bsvTopCore_cmdQController_metaDataReqQ_FULL_N;

  // ports of submodule bsvTopCore_cmdQController_metaDataRespQ
  reg [275 : 0] bsvTopCore_cmdQController_metaDataRespQ_D_IN;
  wire [275 : 0] bsvTopCore_cmdQController_metaDataRespQ_D_OUT;
  wire bsvTopCore_cmdQController_metaDataRespQ_CLR,
       bsvTopCore_cmdQController_metaDataRespQ_DEQ,
       bsvTopCore_cmdQController_metaDataRespQ_EMPTY_N,
       bsvTopCore_cmdQController_metaDataRespQ_ENQ,
       bsvTopCore_cmdQController_metaDataRespQ_FULL_N;

  // ports of submodule bsvTopCore_cmdQController_pgtInflightReqQ
  wire [255 : 0] bsvTopCore_cmdQController_pgtInflightReqQ_D_IN,
		 bsvTopCore_cmdQController_pgtInflightReqQ_D_OUT;
  wire bsvTopCore_cmdQController_pgtInflightReqQ_CLR,
       bsvTopCore_cmdQController_pgtInflightReqQ_DEQ,
       bsvTopCore_cmdQController_pgtInflightReqQ_EMPTY_N,
       bsvTopCore_cmdQController_pgtInflightReqQ_ENQ,
       bsvTopCore_cmdQController_pgtInflightReqQ_FULL_N;

  // ports of submodule bsvTopCore_cmdQController_pgtReqQ
  wire [255 : 0] bsvTopCore_cmdQController_pgtReqQ_D_IN,
		 bsvTopCore_cmdQController_pgtReqQ_D_OUT;
  wire bsvTopCore_cmdQController_pgtReqQ_CLR,
       bsvTopCore_cmdQController_pgtReqQ_DEQ,
       bsvTopCore_cmdQController_pgtReqQ_EMPTY_N,
       bsvTopCore_cmdQController_pgtReqQ_ENQ,
       bsvTopCore_cmdQController_pgtReqQ_FULL_N;

  // ports of submodule bsvTopCore_cmdQController_pgtRespQ
  wire bsvTopCore_cmdQController_pgtRespQ_CLR,
       bsvTopCore_cmdQController_pgtRespQ_DEQ,
       bsvTopCore_cmdQController_pgtRespQ_D_IN,
       bsvTopCore_cmdQController_pgtRespQ_D_OUT,
       bsvTopCore_cmdQController_pgtRespQ_EMPTY_N,
       bsvTopCore_cmdQController_pgtRespQ_ENQ,
       bsvTopCore_cmdQController_pgtRespQ_FULL_N;

  // ports of submodule bsvTopCore_pgtManager_dmaReadReqQ
  wire [83 : 0] bsvTopCore_pgtManager_dmaReadReqQ_D_IN,
		bsvTopCore_pgtManager_dmaReadReqQ_D_OUT;
  wire bsvTopCore_pgtManager_dmaReadReqQ_CLR,
       bsvTopCore_pgtManager_dmaReadReqQ_DEQ,
       bsvTopCore_pgtManager_dmaReadReqQ_EMPTY_N,
       bsvTopCore_pgtManager_dmaReadReqQ_ENQ,
       bsvTopCore_pgtManager_dmaReadReqQ_FULL_N;

  // ports of submodule bsvTopCore_pgtManager_dmaReadRespQ
  wire [289 : 0] bsvTopCore_pgtManager_dmaReadRespQ_D_IN,
		 bsvTopCore_pgtManager_dmaReadRespQ_D_OUT;
  wire bsvTopCore_pgtManager_dmaReadRespQ_CLR,
       bsvTopCore_pgtManager_dmaReadRespQ_DEQ,
       bsvTopCore_pgtManager_dmaReadRespQ_EMPTY_N,
       bsvTopCore_pgtManager_dmaReadRespQ_ENQ,
       bsvTopCore_pgtManager_dmaReadRespQ_FULL_N;

  // ports of submodule bsvTopCore_pgtManager_reqQ
  wire [255 : 0] bsvTopCore_pgtManager_reqQ_D_IN,
		 bsvTopCore_pgtManager_reqQ_D_OUT;
  wire bsvTopCore_pgtManager_reqQ_CLR,
       bsvTopCore_pgtManager_reqQ_DEQ,
       bsvTopCore_pgtManager_reqQ_EMPTY_N,
       bsvTopCore_pgtManager_reqQ_ENQ,
       bsvTopCore_pgtManager_reqQ_FULL_N;

  // ports of submodule bsvTopCore_pgtManager_respQ
  wire bsvTopCore_pgtManager_respQ_CLR,
       bsvTopCore_pgtManager_respQ_DEQ,
       bsvTopCore_pgtManager_respQ_D_IN,
       bsvTopCore_pgtManager_respQ_D_OUT,
       bsvTopCore_pgtManager_respQ_EMPTY_N,
       bsvTopCore_pgtManager_respQ_ENQ,
       bsvTopCore_pgtManager_respQ_FULL_N;

  // ports of submodule bsvTopCore_rdmaTransportLayer
  wire [600 : 0] bsvTopCore_rdmaTransportLayer_workReqInput_put;
  wire [418 : 0] bsvTopCore_rdmaTransportLayer_dmaWriteClt_request_get;
  wire [382 : 0] bsvTopCore_rdmaTransportLayer_dmaReadClt_response_put;
  wire [302 : 0] bsvTopCore_rdmaTransportLayer_srvPortMetaData_request_put;
  wire [289 : 0] bsvTopCore_rdmaTransportLayer_rdmaDataStreamInput_put,
		 bsvTopCore_rdmaTransportLayer_rdmaDataStreamPipeOut_first;
  wire [275 : 0] bsvTopCore_rdmaTransportLayer_srvPortMetaData_response_get;
  wire [221 : 0] bsvTopCore_rdmaTransportLayer_workCompPipeOutRQ_first,
		 bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first;
  wire [215 : 0] bsvTopCore_rdmaTransportLayer_recvReqInput_put;
  wire [168 : 0] bsvTopCore_rdmaTransportLayer_dmaReadClt_request_get;
  wire [52 : 0] bsvTopCore_rdmaTransportLayer_dmaWriteClt_response_put;
  wire bsvTopCore_rdmaTransportLayer_EN_dmaReadClt_request_get,
       bsvTopCore_rdmaTransportLayer_EN_dmaReadClt_response_put,
       bsvTopCore_rdmaTransportLayer_EN_dmaWriteClt_request_get,
       bsvTopCore_rdmaTransportLayer_EN_dmaWriteClt_response_put,
       bsvTopCore_rdmaTransportLayer_EN_rdmaDataStreamInput_put,
       bsvTopCore_rdmaTransportLayer_EN_rdmaDataStreamPipeOut_deq,
       bsvTopCore_rdmaTransportLayer_EN_recvReqInput_put,
       bsvTopCore_rdmaTransportLayer_EN_srvPortMetaData_request_put,
       bsvTopCore_rdmaTransportLayer_EN_srvPortMetaData_response_get,
       bsvTopCore_rdmaTransportLayer_EN_workCompPipeOutRQ_deq,
       bsvTopCore_rdmaTransportLayer_EN_workCompPipeOutSQ_deq,
       bsvTopCore_rdmaTransportLayer_EN_workReqInput_put,
       bsvTopCore_rdmaTransportLayer_RDY_dmaReadClt_request_get,
       bsvTopCore_rdmaTransportLayer_RDY_dmaReadClt_response_put,
       bsvTopCore_rdmaTransportLayer_RDY_dmaWriteClt_request_get,
       bsvTopCore_rdmaTransportLayer_RDY_dmaWriteClt_response_put,
       bsvTopCore_rdmaTransportLayer_RDY_rdmaDataStreamInput_put,
       bsvTopCore_rdmaTransportLayer_RDY_rdmaDataStreamPipeOut_deq,
       bsvTopCore_rdmaTransportLayer_RDY_rdmaDataStreamPipeOut_first,
       bsvTopCore_rdmaTransportLayer_RDY_recvReqInput_put,
       bsvTopCore_rdmaTransportLayer_RDY_srvPortMetaData_request_put,
       bsvTopCore_rdmaTransportLayer_RDY_srvPortMetaData_response_get,
       bsvTopCore_rdmaTransportLayer_RDY_workCompPipeOutRQ_deq,
       bsvTopCore_rdmaTransportLayer_RDY_workCompPipeOutRQ_first,
       bsvTopCore_rdmaTransportLayer_RDY_workCompPipeOutSQ_deq,
       bsvTopCore_rdmaTransportLayer_RDY_workCompPipeOutSQ_first,
       bsvTopCore_rdmaTransportLayer_RDY_workReqInput_put,
       bsvTopCore_rdmaTransportLayer_rdmaDataStreamPipeOut_notEmpty;

  // ports of submodule bsvTopCore_regBlock_readReqQ
  wire [11 : 0] bsvTopCore_regBlock_readReqQ_D_IN,
		bsvTopCore_regBlock_readReqQ_D_OUT;
  wire bsvTopCore_regBlock_readReqQ_CLR,
       bsvTopCore_regBlock_readReqQ_DEQ,
       bsvTopCore_regBlock_readReqQ_EMPTY_N,
       bsvTopCore_regBlock_readReqQ_ENQ,
       bsvTopCore_regBlock_readReqQ_FULL_N;

  // ports of submodule bsvTopCore_regBlock_readRespQ
  reg [31 : 0] bsvTopCore_regBlock_readRespQ_D_IN;
  wire [31 : 0] bsvTopCore_regBlock_readRespQ_D_OUT;
  wire bsvTopCore_regBlock_readRespQ_CLR,
       bsvTopCore_regBlock_readRespQ_DEQ,
       bsvTopCore_regBlock_readRespQ_EMPTY_N,
       bsvTopCore_regBlock_readRespQ_ENQ,
       bsvTopCore_regBlock_readRespQ_FULL_N;

  // ports of submodule bsvTopCore_regBlock_writeReqQ
  wire [43 : 0] bsvTopCore_regBlock_writeReqQ_D_IN,
		bsvTopCore_regBlock_writeReqQ_D_OUT;
  wire bsvTopCore_regBlock_writeReqQ_CLR,
       bsvTopCore_regBlock_writeReqQ_DEQ,
       bsvTopCore_regBlock_writeReqQ_EMPTY_N,
       bsvTopCore_regBlock_writeReqQ_ENQ,
       bsvTopCore_regBlock_writeReqQ_FULL_N;

  // ports of submodule bsvTopCore_regBlock_writeRespQ
  wire bsvTopCore_regBlock_writeRespQ_CLR,
       bsvTopCore_regBlock_writeRespQ_DEQ,
       bsvTopCore_regBlock_writeRespQ_EMPTY_N,
       bsvTopCore_regBlock_writeRespQ_ENQ,
       bsvTopCore_regBlock_writeRespQ_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ
  wire [375 : 0] bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_D_IN,
		 bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_D_OUT;
  wire bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_CLR,
       bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_DEQ,
       bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_EMPTY_N,
       bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_ENQ,
       bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0
  wire [375 : 0] bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0_D_IN,
		 bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0_D_OUT;
  wire bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0_CLR,
       bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0_DEQ,
       bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0_EMPTY_N,
       bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0_ENQ,
       bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1
  wire [375 : 0] bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1_D_IN,
		 bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1_D_OUT;
  wire bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1_CLR,
       bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1_DEQ,
       bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1_EMPTY_N,
       bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1_ENQ,
       bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2
  wire [375 : 0] bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2_D_IN,
		 bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2_D_OUT;
  wire bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2_CLR,
       bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2_DEQ,
       bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2_EMPTY_N,
       bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2_ENQ,
       bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3
  wire [375 : 0] bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3_D_IN,
		 bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3_D_OUT;
  wire bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3_CLR,
       bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3_DEQ,
       bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3_EMPTY_N,
       bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3_ENQ,
       bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_pipeOutQ
  wire [375 : 0] bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_IN,
		 bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_OUT;
  wire bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_CLR,
       bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_DEQ,
       bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_EMPTY_N,
       bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_ENQ,
       bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ
  wire [375 : 0] bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_D_IN,
		 bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_D_OUT;
  wire bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_CLR,
       bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_DEQ,
       bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_EMPTY_N,
       bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_ENQ,
       bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_arbitratedC2hClient_preGrantIdxQ
  wire [1 : 0] bsvTopCore_ringbufPool_arbitratedC2hClient_preGrantIdxQ_D_IN,
	       bsvTopCore_ringbufPool_arbitratedC2hClient_preGrantIdxQ_D_OUT;
  wire bsvTopCore_ringbufPool_arbitratedC2hClient_preGrantIdxQ_CLR,
       bsvTopCore_ringbufPool_arbitratedC2hClient_preGrantIdxQ_DEQ,
       bsvTopCore_ringbufPool_arbitratedC2hClient_preGrantIdxQ_EMPTY_N,
       bsvTopCore_ringbufPool_arbitratedC2hClient_preGrantIdxQ_ENQ,
       bsvTopCore_ringbufPool_arbitratedC2hClient_preGrantIdxQ_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_arbitratedC2hClient_reqQ
  wire [373 : 0] bsvTopCore_ringbufPool_arbitratedC2hClient_reqQ_D_IN,
		 bsvTopCore_ringbufPool_arbitratedC2hClient_reqQ_D_OUT;
  wire bsvTopCore_ringbufPool_arbitratedC2hClient_reqQ_CLR,
       bsvTopCore_ringbufPool_arbitratedC2hClient_reqQ_DEQ,
       bsvTopCore_ringbufPool_arbitratedC2hClient_reqQ_EMPTY_N,
       bsvTopCore_ringbufPool_arbitratedC2hClient_reqQ_ENQ,
       bsvTopCore_ringbufPool_arbitratedC2hClient_reqQ_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_arbitratedC2hClient_respQ
  wire bsvTopCore_ringbufPool_arbitratedC2hClient_respQ_CLR,
       bsvTopCore_ringbufPool_arbitratedC2hClient_respQ_DEQ,
       bsvTopCore_ringbufPool_arbitratedC2hClient_respQ_EMPTY_N,
       bsvTopCore_ringbufPool_arbitratedC2hClient_respQ_ENQ,
       bsvTopCore_ringbufPool_arbitratedC2hClient_respQ_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ
  wire [85 : 0] bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_D_IN,
		bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_D_OUT;
  wire bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_CLR,
       bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_DEQ,
       bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_EMPTY_N,
       bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_ENQ,
       bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_0
  wire [85 : 0] bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_0_D_IN,
		bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_0_D_OUT;
  wire bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_0_CLR,
       bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_0_DEQ,
       bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_0_EMPTY_N,
       bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_0_ENQ,
       bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_0_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_1
  wire [85 : 0] bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_1_D_IN,
		bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_1_D_OUT;
  wire bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_1_CLR,
       bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_1_DEQ,
       bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_1_EMPTY_N,
       bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_1_ENQ,
       bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_1_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_2
  wire [85 : 0] bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_2_D_IN,
		bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_2_D_OUT;
  wire bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_2_CLR,
       bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_2_DEQ,
       bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_2_EMPTY_N,
       bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_2_ENQ,
       bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_2_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_3
  wire [85 : 0] bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_3_D_IN,
		bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_3_D_OUT;
  wire bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_3_CLR,
       bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_3_DEQ,
       bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_3_EMPTY_N,
       bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_3_ENQ,
       bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_3_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_pipeOutQ
  wire [85 : 0] bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_IN,
		bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_OUT;
  wire bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_CLR,
       bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_DEQ,
       bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_EMPTY_N,
       bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_ENQ,
       bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_pipeOutQ
  wire [85 : 0] bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_D_IN,
		bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_D_OUT;
  wire bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_CLR,
       bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_DEQ,
       bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_EMPTY_N,
       bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_ENQ,
       bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_arbitratedH2cClient_preGrantIdxQ
  wire [1 : 0] bsvTopCore_ringbufPool_arbitratedH2cClient_preGrantIdxQ_D_IN,
	       bsvTopCore_ringbufPool_arbitratedH2cClient_preGrantIdxQ_D_OUT;
  wire bsvTopCore_ringbufPool_arbitratedH2cClient_preGrantIdxQ_CLR,
       bsvTopCore_ringbufPool_arbitratedH2cClient_preGrantIdxQ_DEQ,
       bsvTopCore_ringbufPool_arbitratedH2cClient_preGrantIdxQ_EMPTY_N,
       bsvTopCore_ringbufPool_arbitratedH2cClient_preGrantIdxQ_ENQ,
       bsvTopCore_ringbufPool_arbitratedH2cClient_preGrantIdxQ_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_arbitratedH2cClient_reqQ
  wire [83 : 0] bsvTopCore_ringbufPool_arbitratedH2cClient_reqQ_D_IN,
		bsvTopCore_ringbufPool_arbitratedH2cClient_reqQ_D_OUT;
  wire bsvTopCore_ringbufPool_arbitratedH2cClient_reqQ_CLR,
       bsvTopCore_ringbufPool_arbitratedH2cClient_reqQ_DEQ,
       bsvTopCore_ringbufPool_arbitratedH2cClient_reqQ_EMPTY_N,
       bsvTopCore_ringbufPool_arbitratedH2cClient_reqQ_ENQ,
       bsvTopCore_ringbufPool_arbitratedH2cClient_reqQ_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_arbitratedH2cClient_respQ
  wire [289 : 0] bsvTopCore_ringbufPool_arbitratedH2cClient_respQ_D_IN,
		 bsvTopCore_ringbufPool_arbitratedH2cClient_respQ_D_OUT;
  wire bsvTopCore_ringbufPool_arbitratedH2cClient_respQ_CLR,
       bsvTopCore_ringbufPool_arbitratedH2cClient_respQ_DEQ,
       bsvTopCore_ringbufPool_arbitratedH2cClient_respQ_EMPTY_N,
       bsvTopCore_ringbufPool_arbitratedH2cClient_respQ_ENQ,
       bsvTopCore_ringbufPool_arbitratedH2cClient_respQ_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_controller_0_dmaReqQ
  wire [83 : 0] bsvTopCore_ringbufPool_controller_0_dmaReqQ_D_IN,
		bsvTopCore_ringbufPool_controller_0_dmaReqQ_D_OUT;
  wire bsvTopCore_ringbufPool_controller_0_dmaReqQ_CLR,
       bsvTopCore_ringbufPool_controller_0_dmaReqQ_DEQ,
       bsvTopCore_ringbufPool_controller_0_dmaReqQ_EMPTY_N,
       bsvTopCore_ringbufPool_controller_0_dmaReqQ_ENQ,
       bsvTopCore_ringbufPool_controller_0_dmaReqQ_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_controller_0_dmaReqQ_1
  wire [373 : 0] bsvTopCore_ringbufPool_controller_0_dmaReqQ_1_D_IN,
		 bsvTopCore_ringbufPool_controller_0_dmaReqQ_1_D_OUT;
  wire bsvTopCore_ringbufPool_controller_0_dmaReqQ_1_CLR,
       bsvTopCore_ringbufPool_controller_0_dmaReqQ_1_DEQ,
       bsvTopCore_ringbufPool_controller_0_dmaReqQ_1_EMPTY_N,
       bsvTopCore_ringbufPool_controller_0_dmaReqQ_1_ENQ,
       bsvTopCore_ringbufPool_controller_0_dmaReqQ_1_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_controller_0_dmaRespQ
  wire [289 : 0] bsvTopCore_ringbufPool_controller_0_dmaRespQ_D_IN,
		 bsvTopCore_ringbufPool_controller_0_dmaRespQ_D_OUT;
  wire bsvTopCore_ringbufPool_controller_0_dmaRespQ_CLR,
       bsvTopCore_ringbufPool_controller_0_dmaRespQ_DEQ,
       bsvTopCore_ringbufPool_controller_0_dmaRespQ_EMPTY_N,
       bsvTopCore_ringbufPool_controller_0_dmaRespQ_ENQ,
       bsvTopCore_ringbufPool_controller_0_dmaRespQ_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_controller_0_dmaRespQ_1
  wire bsvTopCore_ringbufPool_controller_0_dmaRespQ_1_CLR,
       bsvTopCore_ringbufPool_controller_0_dmaRespQ_1_DEQ,
       bsvTopCore_ringbufPool_controller_0_dmaRespQ_1_EMPTY_N,
       bsvTopCore_ringbufPool_controller_0_dmaRespQ_1_ENQ,
       bsvTopCore_ringbufPool_controller_0_dmaRespQ_1_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_controller_1_dmaReqQ
  wire [83 : 0] bsvTopCore_ringbufPool_controller_1_dmaReqQ_D_IN,
		bsvTopCore_ringbufPool_controller_1_dmaReqQ_D_OUT;
  wire bsvTopCore_ringbufPool_controller_1_dmaReqQ_CLR,
       bsvTopCore_ringbufPool_controller_1_dmaReqQ_DEQ,
       bsvTopCore_ringbufPool_controller_1_dmaReqQ_EMPTY_N,
       bsvTopCore_ringbufPool_controller_1_dmaReqQ_ENQ,
       bsvTopCore_ringbufPool_controller_1_dmaReqQ_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_controller_1_dmaReqQ_1
  wire [373 : 0] bsvTopCore_ringbufPool_controller_1_dmaReqQ_1_D_IN,
		 bsvTopCore_ringbufPool_controller_1_dmaReqQ_1_D_OUT;
  wire bsvTopCore_ringbufPool_controller_1_dmaReqQ_1_CLR,
       bsvTopCore_ringbufPool_controller_1_dmaReqQ_1_DEQ,
       bsvTopCore_ringbufPool_controller_1_dmaReqQ_1_EMPTY_N,
       bsvTopCore_ringbufPool_controller_1_dmaReqQ_1_ENQ,
       bsvTopCore_ringbufPool_controller_1_dmaReqQ_1_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_controller_1_dmaRespQ
  wire [289 : 0] bsvTopCore_ringbufPool_controller_1_dmaRespQ_D_IN,
		 bsvTopCore_ringbufPool_controller_1_dmaRespQ_D_OUT;
  wire bsvTopCore_ringbufPool_controller_1_dmaRespQ_CLR,
       bsvTopCore_ringbufPool_controller_1_dmaRespQ_DEQ,
       bsvTopCore_ringbufPool_controller_1_dmaRespQ_EMPTY_N,
       bsvTopCore_ringbufPool_controller_1_dmaRespQ_ENQ,
       bsvTopCore_ringbufPool_controller_1_dmaRespQ_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_controller_1_dmaRespQ_1
  wire bsvTopCore_ringbufPool_controller_1_dmaRespQ_1_CLR,
       bsvTopCore_ringbufPool_controller_1_dmaRespQ_1_DEQ,
       bsvTopCore_ringbufPool_controller_1_dmaRespQ_1_EMPTY_N,
       bsvTopCore_ringbufPool_controller_1_dmaRespQ_1_ENQ,
       bsvTopCore_ringbufPool_controller_1_dmaRespQ_1_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_controller_2_dmaReqQ
  wire [83 : 0] bsvTopCore_ringbufPool_controller_2_dmaReqQ_D_IN,
		bsvTopCore_ringbufPool_controller_2_dmaReqQ_D_OUT;
  wire bsvTopCore_ringbufPool_controller_2_dmaReqQ_CLR,
       bsvTopCore_ringbufPool_controller_2_dmaReqQ_DEQ,
       bsvTopCore_ringbufPool_controller_2_dmaReqQ_EMPTY_N,
       bsvTopCore_ringbufPool_controller_2_dmaReqQ_ENQ,
       bsvTopCore_ringbufPool_controller_2_dmaReqQ_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_controller_2_dmaReqQ_1
  wire [373 : 0] bsvTopCore_ringbufPool_controller_2_dmaReqQ_1_D_IN,
		 bsvTopCore_ringbufPool_controller_2_dmaReqQ_1_D_OUT;
  wire bsvTopCore_ringbufPool_controller_2_dmaReqQ_1_CLR,
       bsvTopCore_ringbufPool_controller_2_dmaReqQ_1_DEQ,
       bsvTopCore_ringbufPool_controller_2_dmaReqQ_1_EMPTY_N,
       bsvTopCore_ringbufPool_controller_2_dmaReqQ_1_ENQ,
       bsvTopCore_ringbufPool_controller_2_dmaReqQ_1_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_controller_2_dmaRespQ
  wire [289 : 0] bsvTopCore_ringbufPool_controller_2_dmaRespQ_D_IN,
		 bsvTopCore_ringbufPool_controller_2_dmaRespQ_D_OUT;
  wire bsvTopCore_ringbufPool_controller_2_dmaRespQ_CLR,
       bsvTopCore_ringbufPool_controller_2_dmaRespQ_DEQ,
       bsvTopCore_ringbufPool_controller_2_dmaRespQ_EMPTY_N,
       bsvTopCore_ringbufPool_controller_2_dmaRespQ_ENQ,
       bsvTopCore_ringbufPool_controller_2_dmaRespQ_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_controller_2_dmaRespQ_1
  wire bsvTopCore_ringbufPool_controller_2_dmaRespQ_1_CLR,
       bsvTopCore_ringbufPool_controller_2_dmaRespQ_1_DEQ,
       bsvTopCore_ringbufPool_controller_2_dmaRespQ_1_EMPTY_N,
       bsvTopCore_ringbufPool_controller_2_dmaRespQ_1_ENQ,
       bsvTopCore_ringbufPool_controller_2_dmaRespQ_1_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_controller_3_dmaReqQ
  wire [83 : 0] bsvTopCore_ringbufPool_controller_3_dmaReqQ_D_IN,
		bsvTopCore_ringbufPool_controller_3_dmaReqQ_D_OUT;
  wire bsvTopCore_ringbufPool_controller_3_dmaReqQ_CLR,
       bsvTopCore_ringbufPool_controller_3_dmaReqQ_DEQ,
       bsvTopCore_ringbufPool_controller_3_dmaReqQ_EMPTY_N,
       bsvTopCore_ringbufPool_controller_3_dmaReqQ_ENQ,
       bsvTopCore_ringbufPool_controller_3_dmaReqQ_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_controller_3_dmaReqQ_1
  wire [373 : 0] bsvTopCore_ringbufPool_controller_3_dmaReqQ_1_D_IN,
		 bsvTopCore_ringbufPool_controller_3_dmaReqQ_1_D_OUT;
  wire bsvTopCore_ringbufPool_controller_3_dmaReqQ_1_CLR,
       bsvTopCore_ringbufPool_controller_3_dmaReqQ_1_DEQ,
       bsvTopCore_ringbufPool_controller_3_dmaReqQ_1_EMPTY_N,
       bsvTopCore_ringbufPool_controller_3_dmaReqQ_1_ENQ,
       bsvTopCore_ringbufPool_controller_3_dmaReqQ_1_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_controller_3_dmaRespQ
  wire [289 : 0] bsvTopCore_ringbufPool_controller_3_dmaRespQ_D_IN,
		 bsvTopCore_ringbufPool_controller_3_dmaRespQ_D_OUT;
  wire bsvTopCore_ringbufPool_controller_3_dmaRespQ_CLR,
       bsvTopCore_ringbufPool_controller_3_dmaRespQ_DEQ,
       bsvTopCore_ringbufPool_controller_3_dmaRespQ_EMPTY_N,
       bsvTopCore_ringbufPool_controller_3_dmaRespQ_ENQ,
       bsvTopCore_ringbufPool_controller_3_dmaRespQ_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_controller_3_dmaRespQ_1
  wire bsvTopCore_ringbufPool_controller_3_dmaRespQ_1_CLR,
       bsvTopCore_ringbufPool_controller_3_dmaRespQ_1_DEQ,
       bsvTopCore_ringbufPool_controller_3_dmaRespQ_1_EMPTY_N,
       bsvTopCore_ringbufPool_controller_3_dmaRespQ_1_ENQ,
       bsvTopCore_ringbufPool_controller_3_dmaRespQ_1_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_t_0_bufQ
  wire [255 : 0] bsvTopCore_ringbufPool_t_0_bufQ_D_IN,
		 bsvTopCore_ringbufPool_t_0_bufQ_D_OUT;
  wire bsvTopCore_ringbufPool_t_0_bufQ_CLR,
       bsvTopCore_ringbufPool_t_0_bufQ_DEQ,
       bsvTopCore_ringbufPool_t_0_bufQ_EMPTY_N,
       bsvTopCore_ringbufPool_t_0_bufQ_ENQ,
       bsvTopCore_ringbufPool_t_0_bufQ_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_t_0_bufQ_1
  wire [255 : 0] bsvTopCore_ringbufPool_t_0_bufQ_1_D_IN,
		 bsvTopCore_ringbufPool_t_0_bufQ_1_D_OUT;
  wire bsvTopCore_ringbufPool_t_0_bufQ_1_CLR,
       bsvTopCore_ringbufPool_t_0_bufQ_1_DEQ,
       bsvTopCore_ringbufPool_t_0_bufQ_1_EMPTY_N,
       bsvTopCore_ringbufPool_t_0_bufQ_1_ENQ,
       bsvTopCore_ringbufPool_t_0_bufQ_1_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_t_1_bufQ
  wire [255 : 0] bsvTopCore_ringbufPool_t_1_bufQ_D_IN,
		 bsvTopCore_ringbufPool_t_1_bufQ_D_OUT;
  wire bsvTopCore_ringbufPool_t_1_bufQ_CLR,
       bsvTopCore_ringbufPool_t_1_bufQ_DEQ,
       bsvTopCore_ringbufPool_t_1_bufQ_EMPTY_N,
       bsvTopCore_ringbufPool_t_1_bufQ_ENQ,
       bsvTopCore_ringbufPool_t_1_bufQ_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_t_1_bufQ_1
  wire [255 : 0] bsvTopCore_ringbufPool_t_1_bufQ_1_D_IN,
		 bsvTopCore_ringbufPool_t_1_bufQ_1_D_OUT;
  wire bsvTopCore_ringbufPool_t_1_bufQ_1_CLR,
       bsvTopCore_ringbufPool_t_1_bufQ_1_DEQ,
       bsvTopCore_ringbufPool_t_1_bufQ_1_EMPTY_N,
       bsvTopCore_ringbufPool_t_1_bufQ_1_ENQ,
       bsvTopCore_ringbufPool_t_1_bufQ_1_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_t_2_bufQ
  wire [255 : 0] bsvTopCore_ringbufPool_t_2_bufQ_D_IN,
		 bsvTopCore_ringbufPool_t_2_bufQ_D_OUT;
  wire bsvTopCore_ringbufPool_t_2_bufQ_CLR,
       bsvTopCore_ringbufPool_t_2_bufQ_DEQ,
       bsvTopCore_ringbufPool_t_2_bufQ_EMPTY_N,
       bsvTopCore_ringbufPool_t_2_bufQ_ENQ,
       bsvTopCore_ringbufPool_t_2_bufQ_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_t_2_bufQ_1
  wire [255 : 0] bsvTopCore_ringbufPool_t_2_bufQ_1_D_IN,
		 bsvTopCore_ringbufPool_t_2_bufQ_1_D_OUT;
  wire bsvTopCore_ringbufPool_t_2_bufQ_1_CLR,
       bsvTopCore_ringbufPool_t_2_bufQ_1_DEQ,
       bsvTopCore_ringbufPool_t_2_bufQ_1_EMPTY_N,
       bsvTopCore_ringbufPool_t_2_bufQ_1_ENQ,
       bsvTopCore_ringbufPool_t_2_bufQ_1_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_t_3_bufQ
  wire [255 : 0] bsvTopCore_ringbufPool_t_3_bufQ_D_IN;
  wire bsvTopCore_ringbufPool_t_3_bufQ_CLR,
       bsvTopCore_ringbufPool_t_3_bufQ_DEQ,
       bsvTopCore_ringbufPool_t_3_bufQ_EMPTY_N,
       bsvTopCore_ringbufPool_t_3_bufQ_ENQ,
       bsvTopCore_ringbufPool_t_3_bufQ_FULL_N;

  // ports of submodule bsvTopCore_ringbufPool_t_3_bufQ_1
  wire [255 : 0] bsvTopCore_ringbufPool_t_3_bufQ_1_D_IN,
		 bsvTopCore_ringbufPool_t_3_bufQ_1_D_OUT;
  wire bsvTopCore_ringbufPool_t_3_bufQ_1_CLR,
       bsvTopCore_ringbufPool_t_3_bufQ_1_DEQ,
       bsvTopCore_ringbufPool_t_3_bufQ_1_EMPTY_N,
       bsvTopCore_ringbufPool_t_3_bufQ_1_ENQ;

  // ports of submodule bsvTopCore_tlb_findReqQ
  wire [73 : 0] bsvTopCore_tlb_findReqQ_D_IN, bsvTopCore_tlb_findReqQ_D_OUT;
  wire bsvTopCore_tlb_findReqQ_CLR,
       bsvTopCore_tlb_findReqQ_DEQ,
       bsvTopCore_tlb_findReqQ_EMPTY_N,
       bsvTopCore_tlb_findReqQ_ENQ;

  // ports of submodule bsvTopCore_tlb_findRespQ
  wire [64 : 0] bsvTopCore_tlb_findRespQ_D_IN;
  wire bsvTopCore_tlb_findRespQ_CLR,
       bsvTopCore_tlb_findRespQ_DEQ,
       bsvTopCore_tlb_findRespQ_ENQ,
       bsvTopCore_tlb_findRespQ_FULL_N;

  // ports of submodule bsvTopCore_tlb_firstStageCache_bram2Port_memory
  wire [97 : 0] bsvTopCore_tlb_firstStageCache_bram2Port_memory_DIA,
		bsvTopCore_tlb_firstStageCache_bram2Port_memory_DIB,
		bsvTopCore_tlb_firstStageCache_bram2Port_memory_DOA,
		bsvTopCore_tlb_firstStageCache_bram2Port_memory_DOB;
  wire [9 : 0] bsvTopCore_tlb_firstStageCache_bram2Port_memory_ADDRA,
	       bsvTopCore_tlb_firstStageCache_bram2Port_memory_ADDRB;
  wire bsvTopCore_tlb_firstStageCache_bram2Port_memory_ENA,
       bsvTopCore_tlb_firstStageCache_bram2Port_memory_ENB,
       bsvTopCore_tlb_firstStageCache_bram2Port_memory_WEA,
       bsvTopCore_tlb_firstStageCache_bram2Port_memory_WEB;

  // ports of submodule bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_beforeDeq
  wire bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_beforeDeq_D_IN,
       bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_beforeDeq_EN,
       bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_beforeDeq_Q_OUT;

  // ports of submodule bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_beforeEnq
  wire bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_beforeEnq_D_IN,
       bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_beforeEnq_EN,
       bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_beforeEnq_Q_OUT;

  // ports of submodule bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_ff
  wire [97 : 0] bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_ff_D_IN,
		bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_ff_D_OUT;
  wire bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_ff_CLR,
       bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_ff_DEQ,
       bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_ff_EMPTY_N,
       bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_ff_ENQ,
       bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_ff_FULL_N;

  // ports of submodule bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_beforeDeq
  wire bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_beforeDeq_D_IN,
       bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_beforeDeq_EN,
       bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_beforeDeq_Q_OUT;

  // ports of submodule bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_beforeEnq
  wire bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_beforeEnq_D_IN,
       bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_beforeEnq_EN,
       bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_beforeEnq_Q_OUT;

  // ports of submodule bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_ff
  wire [97 : 0] bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_ff_D_IN;
  wire bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_ff_CLR,
       bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_ff_DEQ,
       bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_ff_ENQ,
       bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_ff_FULL_N;

  // ports of submodule bsvTopCore_tlb_firstStageCache_bramReadReqQ
  wire [9 : 0] bsvTopCore_tlb_firstStageCache_bramReadReqQ_D_IN,
	       bsvTopCore_tlb_firstStageCache_bramReadReqQ_D_OUT;
  wire bsvTopCore_tlb_firstStageCache_bramReadReqQ_CLR,
       bsvTopCore_tlb_firstStageCache_bramReadReqQ_DEQ,
       bsvTopCore_tlb_firstStageCache_bramReadReqQ_EMPTY_N,
       bsvTopCore_tlb_firstStageCache_bramReadReqQ_ENQ,
       bsvTopCore_tlb_firstStageCache_bramReadReqQ_FULL_N;

  // ports of submodule bsvTopCore_tlb_firstStageCache_bramReadRespQ
  wire [97 : 0] bsvTopCore_tlb_firstStageCache_bramReadRespQ_D_IN,
		bsvTopCore_tlb_firstStageCache_bramReadRespQ_D_OUT;
  wire bsvTopCore_tlb_firstStageCache_bramReadRespQ_CLR,
       bsvTopCore_tlb_firstStageCache_bramReadRespQ_DEQ,
       bsvTopCore_tlb_firstStageCache_bramReadRespQ_EMPTY_N,
       bsvTopCore_tlb_firstStageCache_bramReadRespQ_ENQ,
       bsvTopCore_tlb_firstStageCache_bramReadRespQ_FULL_N;

  // ports of submodule bsvTopCore_tlb_offsetInputQ
  wire [21 : 0] bsvTopCore_tlb_offsetInputQ_D_IN,
		bsvTopCore_tlb_offsetInputQ_D_OUT;
  wire bsvTopCore_tlb_offsetInputQ_CLR,
       bsvTopCore_tlb_offsetInputQ_DEQ,
       bsvTopCore_tlb_offsetInputQ_EMPTY_N,
       bsvTopCore_tlb_offsetInputQ_ENQ,
       bsvTopCore_tlb_offsetInputQ_FULL_N;

  // ports of submodule bsvTopCore_tlb_secondStageCache_bram2Port_memory
  wire [26 : 0] bsvTopCore_tlb_secondStageCache_bram2Port_memory_DIA,
		bsvTopCore_tlb_secondStageCache_bram2Port_memory_DIB,
		bsvTopCore_tlb_secondStageCache_bram2Port_memory_DOA,
		bsvTopCore_tlb_secondStageCache_bram2Port_memory_DOB;
  wire [16 : 0] bsvTopCore_tlb_secondStageCache_bram2Port_memory_ADDRA,
		bsvTopCore_tlb_secondStageCache_bram2Port_memory_ADDRB;
  wire bsvTopCore_tlb_secondStageCache_bram2Port_memory_ENA,
       bsvTopCore_tlb_secondStageCache_bram2Port_memory_ENB,
       bsvTopCore_tlb_secondStageCache_bram2Port_memory_WEA,
       bsvTopCore_tlb_secondStageCache_bram2Port_memory_WEB;

  // ports of submodule bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_beforeDeq
  wire bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_beforeDeq_D_IN,
       bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_beforeDeq_EN,
       bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_beforeDeq_Q_OUT;

  // ports of submodule bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_beforeEnq
  wire bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_beforeEnq_D_IN,
       bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_beforeEnq_EN,
       bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_beforeEnq_Q_OUT;

  // ports of submodule bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_ff
  wire [26 : 0] bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_ff_D_IN,
		bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_ff_D_OUT;
  wire bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_ff_CLR,
       bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_ff_DEQ,
       bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_ff_EMPTY_N,
       bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_ff_ENQ,
       bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_ff_FULL_N;

  // ports of submodule bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_beforeDeq
  wire bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_beforeDeq_D_IN,
       bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_beforeDeq_EN,
       bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_beforeDeq_Q_OUT;

  // ports of submodule bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_beforeEnq
  wire bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_beforeEnq_D_IN,
       bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_beforeEnq_EN,
       bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_beforeEnq_Q_OUT;

  // ports of submodule bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_ff
  wire [26 : 0] bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_ff_D_IN;
  wire bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_ff_CLR,
       bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_ff_DEQ,
       bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_ff_ENQ,
       bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_ff_FULL_N;

  // ports of submodule bsvTopCore_tlb_secondStageCache_bramReadReqQ
  wire [16 : 0] bsvTopCore_tlb_secondStageCache_bramReadReqQ_D_IN,
		bsvTopCore_tlb_secondStageCache_bramReadReqQ_D_OUT;
  wire bsvTopCore_tlb_secondStageCache_bramReadReqQ_CLR,
       bsvTopCore_tlb_secondStageCache_bramReadReqQ_DEQ,
       bsvTopCore_tlb_secondStageCache_bramReadReqQ_EMPTY_N,
       bsvTopCore_tlb_secondStageCache_bramReadReqQ_ENQ,
       bsvTopCore_tlb_secondStageCache_bramReadReqQ_FULL_N;

  // ports of submodule bsvTopCore_tlb_secondStageCache_bramReadRespQ
  wire [26 : 0] bsvTopCore_tlb_secondStageCache_bramReadRespQ_D_IN,
		bsvTopCore_tlb_secondStageCache_bramReadRespQ_D_OUT;
  wire bsvTopCore_tlb_secondStageCache_bramReadRespQ_CLR,
       bsvTopCore_tlb_secondStageCache_bramReadRespQ_DEQ,
       bsvTopCore_tlb_secondStageCache_bramReadRespQ_EMPTY_N,
       bsvTopCore_tlb_secondStageCache_bramReadRespQ_ENQ,
       bsvTopCore_tlb_secondStageCache_bramReadRespQ_FULL_N;

  // ports of submodule bsvTopCore_tlb_vaInputQ
  wire [63 : 0] bsvTopCore_tlb_vaInputQ_D_IN, bsvTopCore_tlb_vaInputQ_D_OUT;
  wire bsvTopCore_tlb_vaInputQ_CLR,
       bsvTopCore_tlb_vaInputQ_DEQ,
       bsvTopCore_tlb_vaInputQ_EMPTY_N,
       bsvTopCore_tlb_vaInputQ_ENQ,
       bsvTopCore_tlb_vaInputQ_FULL_N;

  // ports of submodule bsvTopCore_workAndCompleteQController_rcqRingBufQ
  wire [255 : 0] bsvTopCore_workAndCompleteQController_rcqRingBufQ_D_IN,
		 bsvTopCore_workAndCompleteQController_rcqRingBufQ_D_OUT;
  wire bsvTopCore_workAndCompleteQController_rcqRingBufQ_CLR,
       bsvTopCore_workAndCompleteQController_rcqRingBufQ_DEQ,
       bsvTopCore_workAndCompleteQController_rcqRingBufQ_EMPTY_N,
       bsvTopCore_workAndCompleteQController_rcqRingBufQ_ENQ,
       bsvTopCore_workAndCompleteQController_rcqRingBufQ_FULL_N;

  // ports of submodule bsvTopCore_workAndCompleteQController_recvReqQ
  wire [215 : 0] bsvTopCore_workAndCompleteQController_recvReqQ_D_IN,
		 bsvTopCore_workAndCompleteQController_recvReqQ_D_OUT;
  wire bsvTopCore_workAndCompleteQController_recvReqQ_CLR,
       bsvTopCore_workAndCompleteQController_recvReqQ_DEQ,
       bsvTopCore_workAndCompleteQController_recvReqQ_EMPTY_N,
       bsvTopCore_workAndCompleteQController_recvReqQ_ENQ,
       bsvTopCore_workAndCompleteQController_recvReqQ_FULL_N;

  // ports of submodule bsvTopCore_workAndCompleteQController_rqRingBufQ
  wire [255 : 0] bsvTopCore_workAndCompleteQController_rqRingBufQ_D_IN,
		 bsvTopCore_workAndCompleteQController_rqRingBufQ_D_OUT;
  wire bsvTopCore_workAndCompleteQController_rqRingBufQ_CLR,
       bsvTopCore_workAndCompleteQController_rqRingBufQ_DEQ,
       bsvTopCore_workAndCompleteQController_rqRingBufQ_EMPTY_N,
       bsvTopCore_workAndCompleteQController_rqRingBufQ_ENQ,
       bsvTopCore_workAndCompleteQController_rqRingBufQ_FULL_N;

  // ports of submodule bsvTopCore_workAndCompleteQController_scqRingBufQ
  wire [255 : 0] bsvTopCore_workAndCompleteQController_scqRingBufQ_D_IN,
		 bsvTopCore_workAndCompleteQController_scqRingBufQ_D_OUT;
  wire bsvTopCore_workAndCompleteQController_scqRingBufQ_CLR,
       bsvTopCore_workAndCompleteQController_scqRingBufQ_DEQ,
       bsvTopCore_workAndCompleteQController_scqRingBufQ_EMPTY_N,
       bsvTopCore_workAndCompleteQController_scqRingBufQ_ENQ,
       bsvTopCore_workAndCompleteQController_scqRingBufQ_FULL_N;

  // ports of submodule bsvTopCore_workAndCompleteQController_sqDescReadProxy_ringbufQ
  wire [255 : 0] bsvTopCore_workAndCompleteQController_sqDescReadProxy_ringbufQ_D_IN,
		 bsvTopCore_workAndCompleteQController_sqDescReadProxy_ringbufQ_D_OUT;
  wire bsvTopCore_workAndCompleteQController_sqDescReadProxy_ringbufQ_CLR,
       bsvTopCore_workAndCompleteQController_sqDescReadProxy_ringbufQ_DEQ,
       bsvTopCore_workAndCompleteQController_sqDescReadProxy_ringbufQ_EMPTY_N,
       bsvTopCore_workAndCompleteQController_sqDescReadProxy_ringbufQ_ENQ,
       bsvTopCore_workAndCompleteQController_sqDescReadProxy_ringbufQ_FULL_N;

  // ports of submodule bsvTopCore_workAndCompleteQController_sqRingBufQ
  wire [255 : 0] bsvTopCore_workAndCompleteQController_sqRingBufQ_D_IN,
		 bsvTopCore_workAndCompleteQController_sqRingBufQ_D_OUT;
  wire bsvTopCore_workAndCompleteQController_sqRingBufQ_CLR,
       bsvTopCore_workAndCompleteQController_sqRingBufQ_DEQ,
       bsvTopCore_workAndCompleteQController_sqRingBufQ_EMPTY_N,
       bsvTopCore_workAndCompleteQController_sqRingBufQ_ENQ,
       bsvTopCore_workAndCompleteQController_sqRingBufQ_FULL_N;

  // ports of submodule bsvTopCore_workAndCompleteQController_workCompRqQ
  wire [221 : 0] bsvTopCore_workAndCompleteQController_workCompRqQ_D_IN,
		 bsvTopCore_workAndCompleteQController_workCompRqQ_D_OUT;
  wire bsvTopCore_workAndCompleteQController_workCompRqQ_CLR,
       bsvTopCore_workAndCompleteQController_workCompRqQ_DEQ,
       bsvTopCore_workAndCompleteQController_workCompRqQ_EMPTY_N,
       bsvTopCore_workAndCompleteQController_workCompRqQ_ENQ,
       bsvTopCore_workAndCompleteQController_workCompRqQ_FULL_N;

  // ports of submodule bsvTopCore_workAndCompleteQController_workCompSqQ
  wire [221 : 0] bsvTopCore_workAndCompleteQController_workCompSqQ_D_IN,
		 bsvTopCore_workAndCompleteQController_workCompSqQ_D_OUT;
  wire bsvTopCore_workAndCompleteQController_workCompSqQ_CLR,
       bsvTopCore_workAndCompleteQController_workCompSqQ_DEQ,
       bsvTopCore_workAndCompleteQController_workCompSqQ_EMPTY_N,
       bsvTopCore_workAndCompleteQController_workCompSqQ_ENQ,
       bsvTopCore_workAndCompleteQController_workCompSqQ_FULL_N;

  // ports of submodule bsvTopCore_workAndCompleteQController_workReqQ
  wire [600 : 0] bsvTopCore_workAndCompleteQController_workReqQ_D_IN,
		 bsvTopCore_workAndCompleteQController_workReqQ_D_OUT;
  wire bsvTopCore_workAndCompleteQController_workReqQ_CLR,
       bsvTopCore_workAndCompleteQController_workReqQ_DEQ,
       bsvTopCore_workAndCompleteQController_workReqQ_EMPTY_N,
       bsvTopCore_workAndCompleteQController_workReqQ_ENQ,
       bsvTopCore_workAndCompleteQController_workReqQ_FULL_N;

  // ports of submodule bsvTopCore_xdmaGearbox_c2hReqGearbox_dCombinedReset
  wire bsvTopCore_xdmaGearbox_c2hReqGearbox_dCombinedReset_RST_OUT;

  // ports of submodule bsvTopCore_xdmaGearbox_c2hReqGearbox_dCrossedsReset
  wire bsvTopCore_xdmaGearbox_c2hReqGearbox_dCrossedsReset_OUT_RST;

  // ports of submodule bsvTopCore_xdmaGearbox_c2hReqGearbox_sCombinedReset
  wire bsvTopCore_xdmaGearbox_c2hReqGearbox_sCombinedReset_RST_OUT;

  // ports of submodule bsvTopCore_xdmaGearbox_c2hReqGearbox_sCrosseddReset
  wire bsvTopCore_xdmaGearbox_c2hReqGearbox_sCrosseddReset_OUT_RST;

  // ports of submodule bsvTopCore_xdmaGearbox_c2hReqQ
  wire [373 : 0] bsvTopCore_xdmaGearbox_c2hReqQ_D_IN,
		 bsvTopCore_xdmaGearbox_c2hReqQ_D_OUT;
  wire bsvTopCore_xdmaGearbox_c2hReqQ_CLR,
       bsvTopCore_xdmaGearbox_c2hReqQ_DEQ,
       bsvTopCore_xdmaGearbox_c2hReqQ_EMPTY_N,
       bsvTopCore_xdmaGearbox_c2hReqQ_ENQ,
       bsvTopCore_xdmaGearbox_c2hReqQ_FULL_N;

  // ports of submodule bsvTopCore_xdmaGearbox_c2hStreamRespQ_dCombinedReset
  wire bsvTopCore_xdmaGearbox_c2hStreamRespQ_dCombinedReset_RST_OUT;

  // ports of submodule bsvTopCore_xdmaGearbox_c2hStreamRespQ_dCrossedsReset
  wire bsvTopCore_xdmaGearbox_c2hStreamRespQ_dCrossedsReset_OUT_RST;

  // ports of submodule bsvTopCore_xdmaGearbox_c2hStreamRespQ_dInReset
  wire bsvTopCore_xdmaGearbox_c2hStreamRespQ_dInReset_VAL;

  // ports of submodule bsvTopCore_xdmaGearbox_c2hStreamRespQ_sCombinedReset
  wire bsvTopCore_xdmaGearbox_c2hStreamRespQ_sCombinedReset_RST_OUT;

  // ports of submodule bsvTopCore_xdmaGearbox_c2hStreamRespQ_sCrosseddReset
  wire bsvTopCore_xdmaGearbox_c2hStreamRespQ_sCrosseddReset_OUT_RST;

  // ports of submodule bsvTopCore_xdmaGearbox_c2hStreamRespQ_sInReset
  wire bsvTopCore_xdmaGearbox_c2hStreamRespQ_sInReset_VAL;

  // ports of submodule bsvTopCore_xdmaGearbox_divClk
  wire bsvTopCore_xdmaGearbox_divClk_PREEDGE;

  // ports of submodule bsvTopCore_xdmaGearbox_h2cRespGearbox_dCombinedReset
  wire bsvTopCore_xdmaGearbox_h2cRespGearbox_dCombinedReset_RST_OUT;

  // ports of submodule bsvTopCore_xdmaGearbox_h2cRespGearbox_dCrossedsReset
  wire bsvTopCore_xdmaGearbox_h2cRespGearbox_dCrossedsReset_OUT_RST;

  // ports of submodule bsvTopCore_xdmaGearbox_h2cRespGearbox_sCombinedReset
  wire bsvTopCore_xdmaGearbox_h2cRespGearbox_sCombinedReset_RST_OUT;

  // ports of submodule bsvTopCore_xdmaGearbox_h2cRespGearbox_sCrosseddReset
  wire bsvTopCore_xdmaGearbox_h2cRespGearbox_sCrosseddReset_OUT_RST;

  // ports of submodule bsvTopCore_xdmaGearbox_h2cRespQ
  wire [289 : 0] bsvTopCore_xdmaGearbox_h2cRespQ_D_IN,
		 bsvTopCore_xdmaGearbox_h2cRespQ_D_OUT;
  wire bsvTopCore_xdmaGearbox_h2cRespQ_CLR,
       bsvTopCore_xdmaGearbox_h2cRespQ_DEQ,
       bsvTopCore_xdmaGearbox_h2cRespQ_EMPTY_N,
       bsvTopCore_xdmaGearbox_h2cRespQ_ENQ,
       bsvTopCore_xdmaGearbox_h2cRespQ_FULL_N;

  // ports of submodule bsvTopCore_xdmaGearbox_h2cStreamReqQ_dCombinedReset
  wire bsvTopCore_xdmaGearbox_h2cStreamReqQ_dCombinedReset_RST_OUT;

  // ports of submodule bsvTopCore_xdmaGearbox_h2cStreamReqQ_dCrossedsReset
  wire bsvTopCore_xdmaGearbox_h2cStreamReqQ_dCrossedsReset_OUT_RST;

  // ports of submodule bsvTopCore_xdmaGearbox_h2cStreamReqQ_dInReset
  wire bsvTopCore_xdmaGearbox_h2cStreamReqQ_dInReset_VAL;

  // ports of submodule bsvTopCore_xdmaGearbox_h2cStreamReqQ_sCombinedReset
  wire bsvTopCore_xdmaGearbox_h2cStreamReqQ_sCombinedReset_RST_OUT;

  // ports of submodule bsvTopCore_xdmaGearbox_h2cStreamReqQ_sCrosseddReset
  wire bsvTopCore_xdmaGearbox_h2cStreamReqQ_sCrosseddReset_OUT_RST;

  // ports of submodule bsvTopCore_xdmaGearbox_h2cStreamReqQ_sInReset
  wire bsvTopCore_xdmaGearbox_h2cStreamReqQ_sInReset_VAL;

  // ports of submodule bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ
  wire [85 : 0] bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_D_IN,
		bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_D_OUT;
  wire bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_CLR,
       bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_DEQ,
       bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_EMPTY_N,
       bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_ENQ,
       bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_FULL_N;

  // ports of submodule bsvTopCore_xdmaReadClt_inputReqWithIdxVec_0
  wire [85 : 0] bsvTopCore_xdmaReadClt_inputReqWithIdxVec_0_D_IN,
		bsvTopCore_xdmaReadClt_inputReqWithIdxVec_0_D_OUT;
  wire bsvTopCore_xdmaReadClt_inputReqWithIdxVec_0_CLR,
       bsvTopCore_xdmaReadClt_inputReqWithIdxVec_0_DEQ,
       bsvTopCore_xdmaReadClt_inputReqWithIdxVec_0_EMPTY_N,
       bsvTopCore_xdmaReadClt_inputReqWithIdxVec_0_ENQ,
       bsvTopCore_xdmaReadClt_inputReqWithIdxVec_0_FULL_N;

  // ports of submodule bsvTopCore_xdmaReadClt_inputReqWithIdxVec_1
  wire [85 : 0] bsvTopCore_xdmaReadClt_inputReqWithIdxVec_1_D_IN,
		bsvTopCore_xdmaReadClt_inputReqWithIdxVec_1_D_OUT;
  wire bsvTopCore_xdmaReadClt_inputReqWithIdxVec_1_CLR,
       bsvTopCore_xdmaReadClt_inputReqWithIdxVec_1_DEQ,
       bsvTopCore_xdmaReadClt_inputReqWithIdxVec_1_EMPTY_N,
       bsvTopCore_xdmaReadClt_inputReqWithIdxVec_1_ENQ,
       bsvTopCore_xdmaReadClt_inputReqWithIdxVec_1_FULL_N;

  // ports of submodule bsvTopCore_xdmaReadClt_inputReqWithIdxVec_2
  wire [85 : 0] bsvTopCore_xdmaReadClt_inputReqWithIdxVec_2_D_IN,
		bsvTopCore_xdmaReadClt_inputReqWithIdxVec_2_D_OUT;
  wire bsvTopCore_xdmaReadClt_inputReqWithIdxVec_2_CLR,
       bsvTopCore_xdmaReadClt_inputReqWithIdxVec_2_DEQ,
       bsvTopCore_xdmaReadClt_inputReqWithIdxVec_2_EMPTY_N,
       bsvTopCore_xdmaReadClt_inputReqWithIdxVec_2_ENQ,
       bsvTopCore_xdmaReadClt_inputReqWithIdxVec_2_FULL_N;

  // ports of submodule bsvTopCore_xdmaReadClt_inputReqWithIdxVec_3
  wire [85 : 0] bsvTopCore_xdmaReadClt_inputReqWithIdxVec_3_D_IN,
		bsvTopCore_xdmaReadClt_inputReqWithIdxVec_3_D_OUT;
  wire bsvTopCore_xdmaReadClt_inputReqWithIdxVec_3_CLR,
       bsvTopCore_xdmaReadClt_inputReqWithIdxVec_3_DEQ,
       bsvTopCore_xdmaReadClt_inputReqWithIdxVec_3_EMPTY_N,
       bsvTopCore_xdmaReadClt_inputReqWithIdxVec_3_ENQ,
       bsvTopCore_xdmaReadClt_inputReqWithIdxVec_3_FULL_N;

  // ports of submodule bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_pipeOutQ
  wire [85 : 0] bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_IN,
		bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_OUT;
  wire bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_CLR,
       bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_DEQ,
       bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_EMPTY_N,
       bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_ENQ,
       bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_FULL_N;

  // ports of submodule bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_pipeOutQ
  wire [85 : 0] bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_pipeOutQ_D_IN,
		bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_pipeOutQ_D_OUT;
  wire bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_pipeOutQ_CLR,
       bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_pipeOutQ_DEQ,
       bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_pipeOutQ_EMPTY_N,
       bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_pipeOutQ_ENQ,
       bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_pipeOutQ_FULL_N;

  // ports of submodule bsvTopCore_xdmaReadClt_preGrantIdxQ
  wire [1 : 0] bsvTopCore_xdmaReadClt_preGrantIdxQ_D_IN,
	       bsvTopCore_xdmaReadClt_preGrantIdxQ_D_OUT;
  wire bsvTopCore_xdmaReadClt_preGrantIdxQ_CLR,
       bsvTopCore_xdmaReadClt_preGrantIdxQ_DEQ,
       bsvTopCore_xdmaReadClt_preGrantIdxQ_EMPTY_N,
       bsvTopCore_xdmaReadClt_preGrantIdxQ_ENQ,
       bsvTopCore_xdmaReadClt_preGrantIdxQ_FULL_N;

  // ports of submodule bsvTopCore_xdmaReadClt_reqQ
  wire [83 : 0] bsvTopCore_xdmaReadClt_reqQ_D_IN,
		bsvTopCore_xdmaReadClt_reqQ_D_OUT;
  wire bsvTopCore_xdmaReadClt_reqQ_CLR,
       bsvTopCore_xdmaReadClt_reqQ_DEQ,
       bsvTopCore_xdmaReadClt_reqQ_EMPTY_N,
       bsvTopCore_xdmaReadClt_reqQ_ENQ,
       bsvTopCore_xdmaReadClt_reqQ_FULL_N;

  // ports of submodule bsvTopCore_xdmaReadClt_respQ
  wire [289 : 0] bsvTopCore_xdmaReadClt_respQ_D_IN,
		 bsvTopCore_xdmaReadClt_respQ_D_OUT;
  wire bsvTopCore_xdmaReadClt_respQ_CLR,
       bsvTopCore_xdmaReadClt_respQ_DEQ,
       bsvTopCore_xdmaReadClt_respQ_EMPTY_N,
       bsvTopCore_xdmaReadClt_respQ_ENQ,
       bsvTopCore_xdmaReadClt_respQ_FULL_N;

  // ports of submodule bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0
  wire [374 : 0] bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0_D_IN,
		 bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0_D_OUT;
  wire bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0_CLR,
       bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0_DEQ,
       bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0_EMPTY_N,
       bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0_ENQ,
       bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0_FULL_N;

  // ports of submodule bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1
  wire [374 : 0] bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1_D_IN,
		 bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1_D_OUT;
  wire bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1_CLR,
       bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1_DEQ,
       bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1_EMPTY_N,
       bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1_ENQ,
       bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1_FULL_N;

  // ports of submodule bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_pipeOutQ
  wire [374 : 0] bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_IN,
		 bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_OUT;
  wire bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_CLR,
       bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_DEQ,
       bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_EMPTY_N,
       bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_ENQ,
       bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_FULL_N;

  // ports of submodule bsvTopCore_xdmaWriteClt_preGrantIdxQ
  wire bsvTopCore_xdmaWriteClt_preGrantIdxQ_CLR,
       bsvTopCore_xdmaWriteClt_preGrantIdxQ_DEQ,
       bsvTopCore_xdmaWriteClt_preGrantIdxQ_D_IN,
       bsvTopCore_xdmaWriteClt_preGrantIdxQ_D_OUT,
       bsvTopCore_xdmaWriteClt_preGrantIdxQ_EMPTY_N,
       bsvTopCore_xdmaWriteClt_preGrantIdxQ_ENQ,
       bsvTopCore_xdmaWriteClt_preGrantIdxQ_FULL_N;

  // ports of submodule bsvTopCore_xdmaWriteClt_reqQ
  wire [373 : 0] bsvTopCore_xdmaWriteClt_reqQ_D_IN,
		 bsvTopCore_xdmaWriteClt_reqQ_D_OUT;
  wire bsvTopCore_xdmaWriteClt_reqQ_CLR,
       bsvTopCore_xdmaWriteClt_reqQ_DEQ,
       bsvTopCore_xdmaWriteClt_reqQ_EMPTY_N,
       bsvTopCore_xdmaWriteClt_reqQ_ENQ,
       bsvTopCore_xdmaWriteClt_reqQ_FULL_N;

  // ports of submodule bsvTopCore_xdmaWriteClt_respQ
  wire bsvTopCore_xdmaWriteClt_respQ_CLR,
       bsvTopCore_xdmaWriteClt_respQ_DEQ,
       bsvTopCore_xdmaWriteClt_respQ_EMPTY_N,
       bsvTopCore_xdmaWriteClt_respQ_ENQ,
       bsvTopCore_xdmaWriteClt_respQ_FULL_N;

  // ports of submodule xdmaAxiLiteWrap_cntrlRdAddrFifo
  wire [14 : 0] xdmaAxiLiteWrap_cntrlRdAddrFifo_dD_OUT,
		xdmaAxiLiteWrap_cntrlRdAddrFifo_sD_IN;
  wire xdmaAxiLiteWrap_cntrlRdAddrFifo_dDEQ,
       xdmaAxiLiteWrap_cntrlRdAddrFifo_dEMPTY_N,
       xdmaAxiLiteWrap_cntrlRdAddrFifo_sENQ,
       xdmaAxiLiteWrap_cntrlRdAddrFifo_sFULL_N;

  // ports of submodule xdmaAxiLiteWrap_cntrlRdDataFifo
  wire [33 : 0] xdmaAxiLiteWrap_cntrlRdDataFifo_dD_OUT,
		xdmaAxiLiteWrap_cntrlRdDataFifo_sD_IN;
  wire xdmaAxiLiteWrap_cntrlRdDataFifo_dDEQ,
       xdmaAxiLiteWrap_cntrlRdDataFifo_dEMPTY_N,
       xdmaAxiLiteWrap_cntrlRdDataFifo_sENQ,
       xdmaAxiLiteWrap_cntrlRdDataFifo_sFULL_N;

  // ports of submodule xdmaAxiLiteWrap_cntrlWrAddrFifo
  wire [14 : 0] xdmaAxiLiteWrap_cntrlWrAddrFifo_dD_OUT,
		xdmaAxiLiteWrap_cntrlWrAddrFifo_sD_IN;
  wire xdmaAxiLiteWrap_cntrlWrAddrFifo_dDEQ,
       xdmaAxiLiteWrap_cntrlWrAddrFifo_dEMPTY_N,
       xdmaAxiLiteWrap_cntrlWrAddrFifo_sENQ,
       xdmaAxiLiteWrap_cntrlWrAddrFifo_sFULL_N;

  // ports of submodule xdmaAxiLiteWrap_cntrlWrDataFifo
  wire [35 : 0] xdmaAxiLiteWrap_cntrlWrDataFifo_dD_OUT,
		xdmaAxiLiteWrap_cntrlWrDataFifo_sD_IN;
  wire xdmaAxiLiteWrap_cntrlWrDataFifo_dDEQ,
       xdmaAxiLiteWrap_cntrlWrDataFifo_dEMPTY_N,
       xdmaAxiLiteWrap_cntrlWrDataFifo_sENQ,
       xdmaAxiLiteWrap_cntrlWrDataFifo_sFULL_N;

  // ports of submodule xdmaAxiLiteWrap_cntrlWrRespFifo
  wire [1 : 0] xdmaAxiLiteWrap_cntrlWrRespFifo_dD_OUT,
	       xdmaAxiLiteWrap_cntrlWrRespFifo_sD_IN;
  wire xdmaAxiLiteWrap_cntrlWrRespFifo_dDEQ,
       xdmaAxiLiteWrap_cntrlWrRespFifo_dEMPTY_N,
       xdmaAxiLiteWrap_cntrlWrRespFifo_sENQ,
       xdmaAxiLiteWrap_cntrlWrRespFifo_sFULL_N;

  // ports of submodule xdmaAxiLiteWrap_readReqQ
  wire [11 : 0] xdmaAxiLiteWrap_readReqQ_D_IN, xdmaAxiLiteWrap_readReqQ_D_OUT;
  wire xdmaAxiLiteWrap_readReqQ_CLR,
       xdmaAxiLiteWrap_readReqQ_DEQ,
       xdmaAxiLiteWrap_readReqQ_EMPTY_N,
       xdmaAxiLiteWrap_readReqQ_ENQ,
       xdmaAxiLiteWrap_readReqQ_FULL_N;

  // ports of submodule xdmaAxiLiteWrap_readRespQ
  wire [31 : 0] xdmaAxiLiteWrap_readRespQ_D_IN,
		xdmaAxiLiteWrap_readRespQ_D_OUT;
  wire xdmaAxiLiteWrap_readRespQ_CLR,
       xdmaAxiLiteWrap_readRespQ_DEQ,
       xdmaAxiLiteWrap_readRespQ_EMPTY_N,
       xdmaAxiLiteWrap_readRespQ_ENQ,
       xdmaAxiLiteWrap_readRespQ_FULL_N;

  // ports of submodule xdmaAxiLiteWrap_writeReqQ
  wire [43 : 0] xdmaAxiLiteWrap_writeReqQ_D_IN,
		xdmaAxiLiteWrap_writeReqQ_D_OUT;
  wire xdmaAxiLiteWrap_writeReqQ_CLR,
       xdmaAxiLiteWrap_writeReqQ_DEQ,
       xdmaAxiLiteWrap_writeReqQ_EMPTY_N,
       xdmaAxiLiteWrap_writeReqQ_ENQ,
       xdmaAxiLiteWrap_writeReqQ_FULL_N;

  // ports of submodule xdmaAxiLiteWrap_writeRespQ
  wire xdmaAxiLiteWrap_writeRespQ_CLR,
       xdmaAxiLiteWrap_writeRespQ_DEQ,
       xdmaAxiLiteWrap_writeRespQ_EMPTY_N,
       xdmaAxiLiteWrap_writeRespQ_ENQ,
       xdmaAxiLiteWrap_writeRespQ_FULL_N;

  // ports of submodule xdmaWrap_dmaReadReqQ
  wire [83 : 0] xdmaWrap_dmaReadReqQ_D_IN, xdmaWrap_dmaReadReqQ_D_OUT;
  wire xdmaWrap_dmaReadReqQ_CLR,
       xdmaWrap_dmaReadReqQ_DEQ,
       xdmaWrap_dmaReadReqQ_EMPTY_N,
       xdmaWrap_dmaReadReqQ_ENQ,
       xdmaWrap_dmaReadReqQ_FULL_N;

  // ports of submodule xdmaWrap_dmaReadRespQ
  wire [577 : 0] xdmaWrap_dmaReadRespQ_D_IN, xdmaWrap_dmaReadRespQ_D_OUT;
  wire xdmaWrap_dmaReadRespQ_CLR,
       xdmaWrap_dmaReadRespQ_DEQ,
       xdmaWrap_dmaReadRespQ_EMPTY_N,
       xdmaWrap_dmaReadRespQ_ENQ,
       xdmaWrap_dmaReadRespQ_FULL_N;

  // ports of submodule xdmaWrap_dmaWriteReqQ
  wire [661 : 0] xdmaWrap_dmaWriteReqQ_D_IN, xdmaWrap_dmaWriteReqQ_D_OUT;
  wire xdmaWrap_dmaWriteReqQ_CLR,
       xdmaWrap_dmaWriteReqQ_DEQ,
       xdmaWrap_dmaWriteReqQ_EMPTY_N,
       xdmaWrap_dmaWriteReqQ_ENQ,
       xdmaWrap_dmaWriteReqQ_FULL_N;

  // ports of submodule xdmaWrap_dmaWriteRespQ
  wire xdmaWrap_dmaWriteRespQ_CLR,
       xdmaWrap_dmaWriteRespQ_DEQ,
       xdmaWrap_dmaWriteRespQ_EMPTY_N,
       xdmaWrap_dmaWriteRespQ_ENQ,
       xdmaWrap_dmaWriteRespQ_FULL_N;

  // ports of submodule xdmaWrap_readReqProcessingQ
  wire [83 : 0] xdmaWrap_readReqProcessingQ_D_IN;
  wire xdmaWrap_readReqProcessingQ_CLR,
       xdmaWrap_readReqProcessingQ_DEQ,
       xdmaWrap_readReqProcessingQ_EMPTY_N,
       xdmaWrap_readReqProcessingQ_ENQ,
       xdmaWrap_readReqProcessingQ_FULL_N;

  // ports of submodule xdmaWrap_writeReqProcessingQ
  wire [661 : 0] xdmaWrap_writeReqProcessingQ_D_IN;
  wire xdmaWrap_writeReqProcessingQ_CLR,
       xdmaWrap_writeReqProcessingQ_DEQ,
       xdmaWrap_writeReqProcessingQ_EMPTY_N,
       xdmaWrap_writeReqProcessingQ_ENQ,
       xdmaWrap_writeReqProcessingQ_FULL_N;

  // ports of submodule xdmaWrap_xdmaC2hStFifo
  wire [576 : 0] xdmaWrap_xdmaC2hStFifo_D_IN, xdmaWrap_xdmaC2hStFifo_D_OUT;
  wire xdmaWrap_xdmaC2hStFifo_CLR,
       xdmaWrap_xdmaC2hStFifo_DEQ,
       xdmaWrap_xdmaC2hStFifo_EMPTY_N,
       xdmaWrap_xdmaC2hStFifo_ENQ,
       xdmaWrap_xdmaC2hStFifo_FULL_N;

  // ports of submodule xdmaWrap_xdmaH2cStFifo
  wire [576 : 0] xdmaWrap_xdmaH2cStFifo_D_IN, xdmaWrap_xdmaH2cStFifo_D_OUT;
  wire xdmaWrap_xdmaH2cStFifo_CLR,
       xdmaWrap_xdmaH2cStFifo_DEQ,
       xdmaWrap_xdmaH2cStFifo_EMPTY_N,
       xdmaWrap_xdmaH2cStFifo_ENQ,
       xdmaWrap_xdmaH2cStFifo_FULL_N;

  // rule scheduling signals
  wire CAN_FIRE_RL_bsvTopCore_ringbufPool_controller_0_recvDmaResp,
       CAN_FIRE_RL_bsvTopCore_ringbufPool_controller_1_recvDmaResp,
       CAN_FIRE_RL_bsvTopCore_ringbufPool_controller_2_recvDmaResp,
       CAN_FIRE_RL_bsvTopCore_ringbufPool_controller_3_recvDmaResp,
       WILL_FIRE_RL_ClientServerRequest_3,
       WILL_FIRE_RL_ClientServerResponse_2,
       WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_c2hProxy_forwardResp,
       WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp,
       WILL_FIRE_RL_bsvTopCore_cmdQController_descReadProxy_fillAllReqSegments,
       WILL_FIRE_RL_bsvTopCore_cmdQController_descWriteProxy_sendRespDesc,
       WILL_FIRE_RL_bsvTopCore_cmdQController_dispatchRingbufRequestDescriptors,
       WILL_FIRE_RL_bsvTopCore_cmdQController_gatherResponse,
       WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ,
       WILL_FIRE_RL_bsvTopCore_pgtManager_updatePgtStateHandleSecondStageUpdate,
       WILL_FIRE_RL_bsvTopCore_pgtManager_updatePgtStateIdle,
       WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite,
       WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedC2hClient_dispatchResponse,
       WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_binaryArbitrate,
       WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_binaryArbitrate,
       WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_binaryArbitrate,
       WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedH2cClient_dispatchResponse,
       WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_binaryArbitrate,
       WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_binaryArbitrate,
       WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_binaryArbitrate,
       WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_0_recvDmaResp,
       WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_0_sendDmaReq,
       WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_0_sendDmaReq_1,
       WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_1_recvDmaResp,
       WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_1_sendDmaReq,
       WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_1_sendDmaReq_1,
       WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_2_recvDmaResp,
       WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_2_sendDmaReq,
       WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_2_sendDmaReq_1,
       WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_3_recvDmaResp,
       WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_3_sendDmaReq,
       WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_3_sendDmaReq_1,
       WILL_FIRE_RL_bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_stageReadResponseAlways,
       WILL_FIRE_RL_bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_stageReadResponseAlways,
       WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ,
       WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_sqDescReadProxy_fillAllReqSegments,
       WILL_FIRE_RL_bsvTopCore_xdmaGearbox_c2hStreamRespQ_deq_update_head,
       WILL_FIRE_RL_bsvTopCore_xdmaGearbox_c2hStreamRespQ_enq_update_tail,
       WILL_FIRE_RL_bsvTopCore_xdmaGearbox_forwardC2hReq,
       WILL_FIRE_RL_bsvTopCore_xdmaGearbox_forwardH2cResp,
       WILL_FIRE_RL_bsvTopCore_xdmaGearbox_h2cStreamReqQ_deq_update_head,
       WILL_FIRE_RL_bsvTopCore_xdmaGearbox_h2cStreamReqQ_enq_update_tail,
       WILL_FIRE_RL_bsvTopCore_xdmaReadClt_dispatchResponse,
       WILL_FIRE_RL_bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_binaryArbitrate,
       WILL_FIRE_RL_bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_binaryArbitrate,
       WILL_FIRE_RL_bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_binaryArbitrate,
       WILL_FIRE_RL_bsvTopCore_xdmaWriteClt_dispatchResponse,
       WILL_FIRE_RL_bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_binaryArbitrate,
       WILL_FIRE_RL_xdmaWrap_forwardC2hDescAndData,
       WILL_FIRE_RL_xdmaWrap_forwardH2cDesc;

  // inputs to muxes for submodule ports
  wire [255 : 0] MUX_bsvTopCore_cmdQController_descWriteProxy_segBuf_0_write_1__VAL_1;
  wire [16 : 0] MUX_bsvTopCore_pgtManager_curSecondStagePgtWriteIdxReg_write_1__VAL_2;
  wire [7 : 0] MUX_bsvTopCore_ringbufPool_controller_0_headReg_1_write_1__VAL_2,
	       MUX_bsvTopCore_ringbufPool_controller_1_headReg_1_write_1__VAL_2,
	       MUX_bsvTopCore_ringbufPool_controller_2_headReg_1_write_1__VAL_2,
	       MUX_bsvTopCore_ringbufPool_controller_3_headReg_1_write_1__VAL_2;
  wire [3 : 0] MUX_bsvTopCore_cmdQController_descWriteProxy_segCntReg_write_1__VAL_1,
	       MUX_bsvTopCore_cmdQController_descWriteProxy_segCntReg_write_1__VAL_2;
  wire [2 : 0] MUX_bsvTopCore_ringbufPool_controller_0_tailPosInReadBlockReg_write_1__VAL_1,
	       MUX_bsvTopCore_ringbufPool_controller_1_tailPosInReadBlockReg_write_1__VAL_1,
	       MUX_bsvTopCore_ringbufPool_controller_2_tailPosInReadBlockReg_write_1__VAL_1,
	       MUX_bsvTopCore_ringbufPool_controller_3_tailPosInReadBlockReg_write_1__VAL_1;
  wire [1 : 0] MUX_bsvTopCore_pgtManager_state_write_1__VAL_1;
  wire MUX_bsvTopCore_cmdQController_descReadProxy_isFillingReqSegmentsReg_write_1__VAL_1,
       MUX_bsvTopCore_cmdQController_descWriteProxy_isSendingDescReg_write_1__SEL_1,
       MUX_bsvTopCore_cmdQController_descWriteProxy_isSendingDescReg_write_1__SEL_2,
       MUX_bsvTopCore_pgtManager_curSecondStagePgtWriteIdxReg_write_1__SEL_1,
       MUX_bsvTopCore_pgtManager_curSecondStagePgtWriteIdxReg_write_1__SEL_2,
       MUX_bsvTopCore_pgtManager_respQ_enq_1__SEL_1,
       MUX_bsvTopCore_pgtManager_state_write_1__SEL_1,
       MUX_bsvTopCore_ringbufPool_controller_0_headReg_1_write_1__SEL_1,
       MUX_bsvTopCore_ringbufPool_controller_0_headReg_1_write_1__SEL_2,
       MUX_bsvTopCore_ringbufPool_controller_0_ruleState_write_1__SEL_1,
       MUX_bsvTopCore_ringbufPool_controller_0_tailPosInReadBlockReg_write_1__SEL_1,
       MUX_bsvTopCore_ringbufPool_controller_0_tailReg_write_1__SEL_1,
       MUX_bsvTopCore_ringbufPool_controller_1_headReg_1_write_1__SEL_1,
       MUX_bsvTopCore_ringbufPool_controller_1_headReg_1_write_1__SEL_2,
       MUX_bsvTopCore_ringbufPool_controller_1_ruleState_write_1__SEL_1,
       MUX_bsvTopCore_ringbufPool_controller_1_tailPosInReadBlockReg_write_1__SEL_1,
       MUX_bsvTopCore_ringbufPool_controller_1_tailReg_write_1__SEL_1,
       MUX_bsvTopCore_ringbufPool_controller_2_headReg_1_write_1__SEL_1,
       MUX_bsvTopCore_ringbufPool_controller_2_headReg_1_write_1__SEL_2,
       MUX_bsvTopCore_ringbufPool_controller_2_ruleState_write_1__SEL_1,
       MUX_bsvTopCore_ringbufPool_controller_2_tailPosInReadBlockReg_write_1__SEL_1,
       MUX_bsvTopCore_ringbufPool_controller_2_tailReg_write_1__SEL_1,
       MUX_bsvTopCore_ringbufPool_controller_3_headReg_1_write_1__SEL_1,
       MUX_bsvTopCore_ringbufPool_controller_3_headReg_1_write_1__SEL_2,
       MUX_bsvTopCore_ringbufPool_controller_3_ruleState_write_1__SEL_1,
       MUX_bsvTopCore_ringbufPool_controller_3_tailPosInReadBlockReg_write_1__SEL_1,
       MUX_bsvTopCore_ringbufPool_controller_3_tailReg_write_1__SEL_1,
       MUX_bsvTopCore_workAndCompleteQController_sqDescReadProxy_isFillingReqSegmentsReg_write_1__VAL_1;

  // declarations used by system tasks
  // synopsys translate_off
  reg [63 : 0] v__h26229;
  reg [63 : 0] v__h27400;
  reg [63 : 0] v__h28571;
  reg [63 : 0] v__h29742;
  reg [63 : 0] v__h114342;
  // synopsys translate_on

  // remaining internal signals
  reg [255 : 0] CASE_bsvTopCore_cmdQController_metaDataRespQD_ETC__q33,
		CASE_v0211_0_bsvTopCore_xdmaWriteClt_inputReqW_ETC__q15,
		CASE_v7620_0_bsvTopCore_ringbufPool_arbitrated_ETC__q19,
		CASE_v8907_0_bsvTopCore_ringbufPool_arbitrated_ETC__q17,
		CASE_v9988_0_bsvTopCore_ringbufPool_arbitrated_ETC__q21,
		rawDesc__h92183;
  reg [63 : 0] CASE_v0211_0_bsvTopCore_xdmaWriteClt_inputReqW_ETC__q54,
	       CASE_v3019_0_bsvTopCore_ringbufPool_arbitrated_ETC__q39,
	       CASE_v4241_0_bsvTopCore_ringbufPool_arbitrated_ETC__q41,
	       CASE_v5257_0_bsvTopCore_ringbufPool_arbitrated_ETC__q37,
	       CASE_v5840_0_bsvTopCore_xdmaReadClt_inputReqWi_ETC__q50,
	       CASE_v7062_0_bsvTopCore_xdmaReadClt_inputReqWi_ETC__q52,
	       CASE_v7620_0_bsvTopCore_ringbufPool_arbitrated_ETC__q35,
	       CASE_v8078_0_bsvTopCore_xdmaReadClt_leafArbite_ETC__q48,
	       CASE_v8907_0_bsvTopCore_ringbufPool_arbitrated_ETC__q36,
	       CASE_v9988_0_bsvTopCore_ringbufPool_arbitrated_ETC__q34,
	       SEL_ARR_bsvTopCore_ringbufPool_controller_0_ba_ETC___d1227,
	       SEL_ARR_bsvTopCore_ringbufPool_controller_0_ba_ETC___d1241,
	       SEL_ARR_bsvTopCore_ringbufPool_controller_0_ba_ETC___d1293,
	       SEL_ARR_bsvTopCore_ringbufPool_controller_0_ba_ETC___d1295;
  reg [31 : 0] CASE_v0211_0_bsvTopCore_xdmaWriteClt_inputReqW_ETC__q11,
	       CASE_v7620_0_bsvTopCore_ringbufPool_arbitrated_ETC__q2,
	       CASE_v8907_0_bsvTopCore_ringbufPool_arbitrated_ETC__q5,
	       CASE_v9988_0_bsvTopCore_ringbufPool_arbitrated_ETC__q8;
  reg [19 : 0] CASE_v0211_0_bsvTopCore_xdmaWriteClt_inputReqW_ETC__q14,
	       CASE_v3019_0_bsvTopCore_ringbufPool_arbitrated_ETC__q40,
	       CASE_v4241_0_bsvTopCore_ringbufPool_arbitrated_ETC__q42,
	       CASE_v5257_0_bsvTopCore_ringbufPool_arbitrated_ETC__q38,
	       CASE_v5840_0_bsvTopCore_xdmaReadClt_inputReqWi_ETC__q51,
	       CASE_v7062_0_bsvTopCore_xdmaReadClt_inputReqWi_ETC__q53,
	       CASE_v7620_0_bsvTopCore_ringbufPool_arbitrated_ETC__q18,
	       CASE_v8078_0_bsvTopCore_xdmaReadClt_leafArbite_ETC__q49,
	       CASE_v8907_0_bsvTopCore_ringbufPool_arbitrated_ETC__q16,
	       CASE_v9988_0_bsvTopCore_ringbufPool_arbitrated_ETC__q20;
  reg [6 : 0] SEL_ARR_bsvTopCore_ringbufPool_controller_0_he_ETC___d1306,
	      SEL_ARR_bsvTopCore_ringbufPool_controller_0_he_ETC___d1319,
	      SEL_ARR_bsvTopCore_ringbufPool_controller_0_ta_ETC___d1327,
	      SEL_ARR_bsvTopCore_ringbufPool_controller_0_ta_ETC___d1332;
  reg [1 : 0] x__h43929,
	      x__h44923,
	      x__h45639,
	      x__h48530,
	      x__h49589,
	      x__h50370,
	      x__h66750,
	      x__h67744,
	      x__h68460;
  reg CASE_bsvTopCore_cmdQController_metaDataRespQD_ETC__q1,
      CASE_bsvTopCore_ringbufPool_arbitratedC2hClien_ETC___d1208,
      CASE_bsvTopCore_ringbufPool_arbitratedH2cClien_ETC___d996,
      CASE_bsvTopCore_xdmaReadClt_preGrantIdxQ_first_ETC___d1804,
      CASE_bsvTopCore_xdmaWriteClt_preGrantIdxQD_OU_ETC__q32,
      CASE_v0211_0_bsvTopCore_xdmaWriteClt_inputReqW_ETC__q12,
      CASE_v0211_0_bsvTopCore_xdmaWriteClt_inputReqW_ETC__q13,
      CASE_v0211_0_bsvTopCore_xdmaWriteClt_inputReqW_ETC__q31,
      CASE_v3019_0_bsvTopCore_ringbufPool_arbitrated_ETC__q23,
      CASE_v4241_0_bsvTopCore_ringbufPool_arbitrated_ETC__q22,
      CASE_v5257_0_bsvTopCore_ringbufPool_arbitrated_ETC__q24,
      CASE_v5840_0_bsvTopCore_xdmaReadClt_inputReqWi_ETC__q28,
      CASE_v7062_0_bsvTopCore_xdmaReadClt_inputReqWi_ETC__q30,
      CASE_v7620_0_bsvTopCore_ringbufPool_arbitrated_ETC__q25,
      CASE_v7620_0_bsvTopCore_ringbufPool_arbitrated_ETC__q3,
      CASE_v7620_0_bsvTopCore_ringbufPool_arbitrated_ETC__q4,
      CASE_v8078_0_bsvTopCore_xdmaReadClt_leafArbite_ETC__q29,
      CASE_v8907_0_bsvTopCore_ringbufPool_arbitrated_ETC__q26,
      CASE_v8907_0_bsvTopCore_ringbufPool_arbitrated_ETC__q6,
      CASE_v8907_0_bsvTopCore_ringbufPool_arbitrated_ETC__q7,
      CASE_v9988_0_bsvTopCore_ringbufPool_arbitrated_ETC__q10,
      CASE_v9988_0_bsvTopCore_ringbufPool_arbitrated_ETC__q27,
      CASE_v9988_0_bsvTopCore_ringbufPool_arbitrated_ETC__q9,
      IF_SEL_ARR_bsvTopCore_cmdQController_descReadP_ETC___d2177,
      SEL_ARR_bsvTopCore_ringbufPool_controller_0_he_ETC___d1304,
      SEL_ARR_bsvTopCore_ringbufPool_controller_0_he_ETC___d1313,
      SEL_ARR_bsvTopCore_ringbufPool_controller_0_ta_ETC___d1325,
      SEL_ARR_bsvTopCore_ringbufPool_controller_0_ta_ETC___d1330,
      x__h70886;
  wire [511 : 0] y_avValue_dataStream_data__h114741;
  wire [374 : 0] IF_NOT_bsvTopCore_xdmaGearbox_c2hReqQ_notEmpty_ETC___d2062,
		 IF_NOT_bsvTopCore_xdmaGearbox_c2hReqQ_notEmpty_ETC___d2076,
		 IF_NOT_bsvTopCore_xdmaGearbox_c2hReqQ_notEmpty_ETC___d2088,
		 IF_NOT_bsvTopCore_xdmaGearbox_c2hReqQ_notEmpty_ETC___d2102,
		 IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_write__ETC___d2057,
		 IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_write__ETC___d2061,
		 IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_write__ETC___d2070,
		 IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_write__ETC___d2075,
		 IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_write__ETC___d2083,
		 IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_write__ETC___d2087,
		 IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_write__ETC___d2096,
		 IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_write__ETC___d2101;
  wire [373 : 0] IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0__ETC___d2073,
		 IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1__ETC___d2099;
  wire [309 : 0] SEL_ARR_bsvTopCore_ringbufPool_arbitratedC2hCl_ETC___d1058,
		 SEL_ARR_bsvTopCore_ringbufPool_arbitratedC2hCl_ETC___d1113,
		 SEL_ARR_bsvTopCore_ringbufPool_arbitratedC2hCl_ETC___d1168,
		 SEL_ARR_bsvTopCore_xdmaWriteClt_inputReqWithId_ETC___d1865;
  wire [255 : 0] IF_IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_rea_ETC___d2907,
		 a_dataStream_data__h15271,
		 a_dataStream_data__h4861,
		 din__h93228,
		 din__h93848,
		 din__h94254,
		 din__h94868,
		 x_data__h64691;
  wire [63 : 0] bsvTopCore_tlb_vaInputQD_OUT_MINUS_bsvTopCore_ETC__q47,
		curReadBlockStartAddr__h25723,
		curReadBlockStartAddr__h26896,
		curReadBlockStartAddr__h28067,
		curReadBlockStartAddr__h29238,
		curWriteStartAddr__h30389,
		curWriteStartAddr__h33412,
		curWriteStartAddr__h36435,
		curWriteStartAddr__h39458,
		x__h52097,
		x__h52547,
		x__h52946,
		x__h53306,
		x__h63504,
		y_avValue_dataStream_byteEn__h114742;
  wire [47 : 0] x__h63509;
  wire [33 : 0] SEL_ARR_bsvTopCore_ringbufPool_arbitratedC2hCl_ETC___d1057,
		SEL_ARR_bsvTopCore_ringbufPool_arbitratedC2hCl_ETC___d1112,
		SEL_ARR_bsvTopCore_ringbufPool_arbitratedC2hCl_ETC___d1167,
		SEL_ARR_bsvTopCore_xdmaWriteClt_inputReqWithId_ETC___d1864;
  wire [31 : 0] IF_IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_rea_ETC___d2915,
		IF_bsvTopCore_regBlock_readReqQ_first__288_BIT_ETC___d1336,
		a_dataStream_byteEn__h15272,
		a_dataStream_byteEn__h4862,
		x_byteEn__h64692;
  wire [19 : 0] a_len__h15261, a_len__h4711;
  wire [7 : 0] IF_NOT_bsvTopCore_ringbufPool_controller_0_tai_ETC___d503,
	       IF_NOT_bsvTopCore_ringbufPool_controller_1_tai_ETC___d577,
	       IF_NOT_bsvTopCore_ringbufPool_controller_2_tai_ETC___d651,
	       IF_NOT_bsvTopCore_ringbufPool_controller_3_tai_ETC___d725,
	       bsvTopCore_ringbufPool_controller_0_tailReg_re_ETC___d488,
	       bsvTopCore_ringbufPool_controller_0_tailShadow_ETC__q43,
	       bsvTopCore_ringbufPool_controller_1_tailReg_re_ETC___d562,
	       bsvTopCore_ringbufPool_controller_1_tailShadow_ETC__q44,
	       bsvTopCore_ringbufPool_controller_2_tailReg_re_ETC___d636,
	       bsvTopCore_ringbufPool_controller_2_tailShadow_ETC__q45,
	       bsvTopCore_ringbufPool_controller_3_tailReg_re_ETC___d710,
	       bsvTopCore_ringbufPool_controller_3_tailShadow_ETC__q46,
	       x__h54801,
	       x__h54832,
	       x__h54865,
	       x__h54896;
  wire [6 : 0] IF_NOT_bsvTopCore_ringbufPool_controller_0_tai_ETC___d496,
	       IF_NOT_bsvTopCore_ringbufPool_controller_1_tai_ETC___d570,
	       IF_NOT_bsvTopCore_ringbufPool_controller_2_tai_ETC___d644,
	       IF_NOT_bsvTopCore_ringbufPool_controller_3_tai_ETC___d718;
  wire [3 : 0] bsvTopCore_tlb_firstStageCache_bram2Port_serve_ETC___d1360,
	       bsvTopCore_tlb_secondStageCache_bram2Port_serv_ETC___d1475,
	       curSegCnt__h104416,
	       curSegCnt__h91145,
	       totalSegCnt__h104415,
	       totalSegCnt__h91144;
  wire [1 : 0] IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_read_b_ETC___d2931,
	       x__h111261,
	       x__h111608,
	       x__h113086,
	       x__h113439,
	       x__h77565,
	       x__h77987,
	       x__h80645,
	       x__h81073;
  wire IF_IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_rea_ETC___d2930,
       IF_NOT_bsvTopCore_ringbufPool_controller_0_tai_ETC___d492,
       IF_NOT_bsvTopCore_ringbufPool_controller_1_tai_ETC___d566,
       IF_NOT_bsvTopCore_ringbufPool_controller_2_tai_ETC___d640,
       IF_NOT_bsvTopCore_ringbufPool_controller_3_tai_ETC___d714,
       IF_bsvTopCore_cmdQController_pgtRespQ_notEmpty_ETC___d2266,
       IF_bsvTopCore_pgtManager_curBeatOfDataReg_632__ETC___d1638,
       IF_bsvTopCore_pgtManager_reqQ_first__608_BITS__ETC___d1618,
       IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_read_b_ETC___d2891,
       IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_read_b_ETC___d2903,
       IF_bsvTopCore_xdmaGearbox_h2cRespGearbox_read__ETC___d1989,
       IF_bsvTopCore_xdmaGearbox_h2cRespGearbox_read__ETC___d2002,
       NOT_bsvTopCore_xdmaGearbox_c2hReqGearbox_read__ETC___d2879,
       NOT_bsvTopCore_xdmaGearbox_c2hReqGearbox_write_ETC___d2039,
       NOT_bsvTopCore_xdmaGearbox_h2cRespGearbox_read_ETC___d1970,
       NOT_bsvTopCore_xdmaGearbox_h2cRespGearbox_writ_ETC___d2760,
       bsvTopCore_cmdQController_metaDataRespQ_i_notE_ETC___d2264,
       bsvTopCore_cmdQController_pgtRespQ_notEmpty__2_ETC___d2271,
       bsvTopCore_ringbufPool_controller_0_dmaRespQ_f_ETC___d500,
       bsvTopCore_ringbufPool_controller_0_headReg_re_ETC___d435,
       bsvTopCore_ringbufPool_controller_0_headReg_re_ETC___d438,
       bsvTopCore_ringbufPool_controller_0_headShadow_ETC___d731,
       bsvTopCore_ringbufPool_controller_0_headShadow_ETC___d734,
       bsvTopCore_ringbufPool_controller_0_tailReg_re_ETC___d473,
       bsvTopCore_ringbufPool_controller_0_tailReg_re_ETC___d475,
       bsvTopCore_ringbufPool_controller_1_dmaRespQ_f_ETC___d574,
       bsvTopCore_ringbufPool_controller_1_headReg_re_ETC___d509,
       bsvTopCore_ringbufPool_controller_1_headReg_re_ETC___d512,
       bsvTopCore_ringbufPool_controller_1_headShadow_ETC___d761,
       bsvTopCore_ringbufPool_controller_1_headShadow_ETC___d764,
       bsvTopCore_ringbufPool_controller_1_tailReg_re_ETC___d547,
       bsvTopCore_ringbufPool_controller_1_tailReg_re_ETC___d549,
       bsvTopCore_ringbufPool_controller_2_dmaRespQ_f_ETC___d648,
       bsvTopCore_ringbufPool_controller_2_headReg_re_ETC___d583,
       bsvTopCore_ringbufPool_controller_2_headReg_re_ETC___d586,
       bsvTopCore_ringbufPool_controller_2_headShadow_ETC___d791,
       bsvTopCore_ringbufPool_controller_2_headShadow_ETC___d794,
       bsvTopCore_ringbufPool_controller_2_tailReg_re_ETC___d621,
       bsvTopCore_ringbufPool_controller_2_tailReg_re_ETC___d623,
       bsvTopCore_ringbufPool_controller_3_dmaRespQ_f_ETC___d722,
       bsvTopCore_ringbufPool_controller_3_headReg_re_ETC___d657,
       bsvTopCore_ringbufPool_controller_3_headReg_re_ETC___d660,
       bsvTopCore_ringbufPool_controller_3_headShadow_ETC___d821,
       bsvTopCore_ringbufPool_controller_3_headShadow_ETC___d824,
       bsvTopCore_ringbufPool_controller_3_tailReg_re_ETC___d695,
       bsvTopCore_ringbufPool_controller_3_tailReg_re_ETC___d697,
       bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_sta_ETC___d2016,
       bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_sta_ETC___d2019,
       bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_sta_ETC___d2027,
       bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_sta_ETC___d2030,
       bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_st_ETC___d1951,
       bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_st_ETC___d1953,
       bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_st_ETC___d1960,
       bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_st_ETC___d1962,
       v__h43019,
       v__h44241,
       v__h45257,
       v__h47620,
       v__h48907,
       v__h49988,
       v__h65840,
       v__h67062,
       v__h68078,
       v__h70211;

  // oscillator and gates for output clock CLK_slowClockIfc
  assign CLK_slowClockIfc = CLK_slowClock ;
  assign CLK_GATE_slowClockIfc = 1'd1 ;

  // value method xdmaChannel_rawH2cAxiStream_tReady
  assign xdmaChannel_rawH2cAxiStream_tready =
	     !xdmaWrap_rawH2cSt_rawBus_isReset_isInReset &&
	     xdmaWrap_xdmaH2cStFifo_FULL_N ;

  // value method xdmaChannel_rawC2hAxiStream_tValid
  assign xdmaChannel_rawC2hAxiStream_tvalid =
	     !xdmaWrap_rawC2hSt_rawBus_isReset_isInReset &&
	     xdmaWrap_xdmaC2hStFifo_EMPTY_N ;

  // value method xdmaChannel_rawC2hAxiStream_tData
  assign xdmaChannel_rawC2hAxiStream_tdata =
	     xdmaWrap_xdmaC2hStFifo_D_OUT[576:65] ;

  // value method xdmaChannel_rawC2hAxiStream_tKeep
  assign xdmaChannel_rawC2hAxiStream_tkeep =
	     xdmaWrap_xdmaC2hStFifo_D_OUT[64:1] ;

  // value method xdmaChannel_rawC2hAxiStream_tLast
  assign xdmaChannel_rawC2hAxiStream_tlast = xdmaWrap_xdmaC2hStFifo_D_OUT[0] ;

  // value method xdmaChannel_h2cDescByp_load
  assign xdmaChannel_h2cDescByp_load =
	     xdmaChannel_h2cDescByp_ready && xdmaWrap_dmaReadReqQ_EMPTY_N ;

  // value method xdmaChannel_h2cDescByp_srcAddr
  assign xdmaChannel_h2cDescByp_src_addr = xdmaWrap_dmaReadReqQ_D_OUT[83:20] ;

  // value method xdmaChannel_h2cDescByp_dstAddr
  assign xdmaChannel_h2cDescByp_dst_addr = 64'd0 ;

  // value method xdmaChannel_h2cDescByp_len
  assign xdmaChannel_h2cDescByp_len =
	     { 8'd0, xdmaWrap_dmaReadReqQ_D_OUT[19:0] } ;

  // value method xdmaChannel_h2cDescByp_ctl
  assign xdmaChannel_h2cDescByp_ctl = 5'd16 ;

  // value method xdmaChannel_c2hDescByp_load
  assign xdmaChannel_c2hDescByp_load =
	     xdmaChannel_c2hDescByp_ready && xdmaWrap_dmaWriteReqQ_EMPTY_N &&
	     xdmaWrap_dmaWriteReqQ_D_OUT[1] &&
	     xdmaWrap_writeReqProcessingQ_FULL_N &&
	     xdmaWrap_xdmaC2hStFifo_FULL_N &&
	     xdmaWrap_dmaWriteRespQ_FULL_N ;

  // value method xdmaChannel_c2hDescByp_srcAddr
  assign xdmaChannel_c2hDescByp_src_addr = 64'd0 ;

  // value method xdmaChannel_c2hDescByp_dstAddr
  assign xdmaChannel_c2hDescByp_dst_addr =
	     xdmaWrap_dmaWriteReqQ_D_OUT[661:598] ;

  // value method xdmaChannel_c2hDescByp_len
  assign xdmaChannel_c2hDescByp_len =
	     { 8'd0, xdmaWrap_dmaWriteReqQ_D_OUT[597:578] } ;

  // value method xdmaChannel_c2hDescByp_ctl
  assign xdmaChannel_c2hDescByp_ctl = 5'd16 ;

  // value method axilRegBlock_wrSlave_awReady
  assign axilRegBlock_awready =
	     !xdmaAxiLiteWrap_cntrlAxilSlave_rawWrAddrBus_isReset_isInReset &&
	     xdmaAxiLiteWrap_cntrlWrAddrFifo_sFULL_N ;

  // value method axilRegBlock_wrSlave_wReady
  assign axilRegBlock_wready =
	     !xdmaAxiLiteWrap_cntrlAxilSlave_rawWrDataBus_isReset_isInReset &&
	     xdmaAxiLiteWrap_cntrlWrDataFifo_sFULL_N ;

  // value method axilRegBlock_wrSlave_bValid
  assign axilRegBlock_bvalid =
	     !xdmaAxiLiteWrap_cntrlAxilSlave_rawWrRespBus_isReset_isInReset &&
	     xdmaAxiLiteWrap_cntrlWrRespFifo_dEMPTY_N ;

  // value method axilRegBlock_wrSlave_bResp
  assign axilRegBlock_bresp = xdmaAxiLiteWrap_cntrlWrRespFifo_dD_OUT ;

  // value method axilRegBlock_rdSlave_arReady
  assign axilRegBlock_arready =
	     !xdmaAxiLiteWrap_cntrlAxilSlave_rawRdAddrBus_isReset_isInReset &&
	     xdmaAxiLiteWrap_cntrlRdAddrFifo_sFULL_N ;

  // value method axilRegBlock_rdSlave_rValid
  assign axilRegBlock_rvalid =
	     !xdmaAxiLiteWrap_cntrlAxilSlave_rawRdDataBus_isReset_isInReset &&
	     xdmaAxiLiteWrap_cntrlRdDataFifo_dEMPTY_N ;

  // value method axilRegBlock_rdSlave_rResp
  assign axilRegBlock_rresp = xdmaAxiLiteWrap_cntrlRdDataFifo_dD_OUT[33:32] ;

  // value method axilRegBlock_rdSlave_rData
  assign axilRegBlock_rdata = xdmaAxiLiteWrap_cntrlRdDataFifo_dD_OUT[31:0] ;

  // action method rdmaDataStreamInput_put
  assign RDY_rdmaDataStreamInput_put =
	     bsvTopCore_rdmaTransportLayer_RDY_rdmaDataStreamInput_put ;

  // value method rdmaDataStreamPipeOut_first
  assign rdmaDataStreamPipeOut_first =
	     bsvTopCore_rdmaTransportLayer_rdmaDataStreamPipeOut_first ;
  assign RDY_rdmaDataStreamPipeOut_first =
	     bsvTopCore_rdmaTransportLayer_RDY_rdmaDataStreamPipeOut_first ;

  // action method rdmaDataStreamPipeOut_deq
  assign RDY_rdmaDataStreamPipeOut_deq =
	     bsvTopCore_rdmaTransportLayer_RDY_rdmaDataStreamPipeOut_deq ;

  // value method rdmaDataStreamPipeOut_notEmpty
  assign rdmaDataStreamPipeOut_notEmpty =
	     bsvTopCore_rdmaTransportLayer_rdmaDataStreamPipeOut_notEmpty ;
  assign RDY_rdmaDataStreamPipeOut_notEmpty = 1'd1 ;

  // submodule bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ
  FIFO2 #(.width(32'd52),
	  .guarded(1'd1)) bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ(.RST(RST_N),
									   .CLK(CLK),
									   .D_IN(bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_IN),
									   .ENQ(bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_ENQ),
									   .DEQ(bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_DEQ),
									   .CLR(bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_CLR),
									   .D_OUT(bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT),
									   .FULL_N(bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_FULL_N),
									   .EMPTY_N(bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_EMPTY_N));

  // submodule bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ
  FIFO2 #(.width(32'd419),
	  .guarded(1'd1)) bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ(.RST(RST_N),
								      .CLK(CLK),
								      .D_IN(bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_IN),
								      .ENQ(bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_ENQ),
								      .DEQ(bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_DEQ),
								      .CLR(bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_CLR),
								      .D_OUT(bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT),
								      .FULL_N(bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_FULL_N),
								      .EMPTY_N(bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_EMPTY_N));

  // submodule bsvTopCore_bluerdmaDmaProxy_c2hProxy_inRespQ
  FIFO2 #(.width(32'd53),
	  .guarded(1'd1)) bsvTopCore_bluerdmaDmaProxy_c2hProxy_inRespQ(.RST(RST_N),
								       .CLK(CLK),
								       .D_IN(bsvTopCore_bluerdmaDmaProxy_c2hProxy_inRespQ_D_IN),
								       .ENQ(bsvTopCore_bluerdmaDmaProxy_c2hProxy_inRespQ_ENQ),
								       .DEQ(bsvTopCore_bluerdmaDmaProxy_c2hProxy_inRespQ_DEQ),
								       .CLR(bsvTopCore_bluerdmaDmaProxy_c2hProxy_inRespQ_CLR),
								       .D_OUT(bsvTopCore_bluerdmaDmaProxy_c2hProxy_inRespQ_D_OUT),
								       .FULL_N(bsvTopCore_bluerdmaDmaProxy_c2hProxy_inRespQ_FULL_N),
								       .EMPTY_N(bsvTopCore_bluerdmaDmaProxy_c2hProxy_inRespQ_EMPTY_N));

  // submodule bsvTopCore_bluerdmaDmaProxy_c2hProxy_outReqQ
  FIFO2 #(.width(32'd374),
	  .guarded(1'd1)) bsvTopCore_bluerdmaDmaProxy_c2hProxy_outReqQ(.RST(RST_N),
								       .CLK(CLK),
								       .D_IN(bsvTopCore_bluerdmaDmaProxy_c2hProxy_outReqQ_D_IN),
								       .ENQ(bsvTopCore_bluerdmaDmaProxy_c2hProxy_outReqQ_ENQ),
								       .DEQ(bsvTopCore_bluerdmaDmaProxy_c2hProxy_outReqQ_DEQ),
								       .CLR(bsvTopCore_bluerdmaDmaProxy_c2hProxy_outReqQ_CLR),
								       .D_OUT(bsvTopCore_bluerdmaDmaProxy_c2hProxy_outReqQ_D_OUT),
								       .FULL_N(bsvTopCore_bluerdmaDmaProxy_c2hProxy_outReqQ_FULL_N),
								       .EMPTY_N(bsvTopCore_bluerdmaDmaProxy_c2hProxy_outReqQ_EMPTY_N));

  // submodule bsvTopCore_bluerdmaDmaProxy_c2hProxy_outRespQ
  FIFO20 #(.guarded(1'd1)) bsvTopCore_bluerdmaDmaProxy_c2hProxy_outRespQ(.RST(RST_N),
									 .CLK(CLK),
									 .ENQ(bsvTopCore_bluerdmaDmaProxy_c2hProxy_outRespQ_ENQ),
									 .DEQ(bsvTopCore_bluerdmaDmaProxy_c2hProxy_outRespQ_DEQ),
									 .CLR(bsvTopCore_bluerdmaDmaProxy_c2hProxy_outRespQ_CLR),
									 .FULL_N(bsvTopCore_bluerdmaDmaProxy_c2hProxy_outRespQ_FULL_N),
									 .EMPTY_N(bsvTopCore_bluerdmaDmaProxy_c2hProxy_outRespQ_EMPTY_N));

  // submodule bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ
  FIFO2 #(.width(32'd92),
	  .guarded(1'd1)) bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ(.RST(RST_N),
									   .CLK(CLK),
									   .D_IN(bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_IN),
									   .ENQ(bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_ENQ),
									   .DEQ(bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_DEQ),
									   .CLR(bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_CLR),
									   .D_OUT(bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT),
									   .FULL_N(bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_FULL_N),
									   .EMPTY_N(bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_EMPTY_N));

  // submodule bsvTopCore_bluerdmaDmaProxy_h2cProxy_inReqQ
  FIFO2 #(.width(32'd169),
	  .guarded(1'd1)) bsvTopCore_bluerdmaDmaProxy_h2cProxy_inReqQ(.RST(RST_N),
								      .CLK(CLK),
								      .D_IN(bsvTopCore_bluerdmaDmaProxy_h2cProxy_inReqQ_D_IN),
								      .ENQ(bsvTopCore_bluerdmaDmaProxy_h2cProxy_inReqQ_ENQ),
								      .DEQ(bsvTopCore_bluerdmaDmaProxy_h2cProxy_inReqQ_DEQ),
								      .CLR(bsvTopCore_bluerdmaDmaProxy_h2cProxy_inReqQ_CLR),
								      .D_OUT(bsvTopCore_bluerdmaDmaProxy_h2cProxy_inReqQ_D_OUT),
								      .FULL_N(bsvTopCore_bluerdmaDmaProxy_h2cProxy_inReqQ_FULL_N),
								      .EMPTY_N(bsvTopCore_bluerdmaDmaProxy_h2cProxy_inReqQ_EMPTY_N));

  // submodule bsvTopCore_bluerdmaDmaProxy_h2cProxy_inRespQ
  FIFO2 #(.width(32'd383),
	  .guarded(1'd1)) bsvTopCore_bluerdmaDmaProxy_h2cProxy_inRespQ(.RST(RST_N),
								       .CLK(CLK),
								       .D_IN(bsvTopCore_bluerdmaDmaProxy_h2cProxy_inRespQ_D_IN),
								       .ENQ(bsvTopCore_bluerdmaDmaProxy_h2cProxy_inRespQ_ENQ),
								       .DEQ(bsvTopCore_bluerdmaDmaProxy_h2cProxy_inRespQ_DEQ),
								       .CLR(bsvTopCore_bluerdmaDmaProxy_h2cProxy_inRespQ_CLR),
								       .D_OUT(bsvTopCore_bluerdmaDmaProxy_h2cProxy_inRespQ_D_OUT),
								       .FULL_N(bsvTopCore_bluerdmaDmaProxy_h2cProxy_inRespQ_FULL_N),
								       .EMPTY_N(bsvTopCore_bluerdmaDmaProxy_h2cProxy_inRespQ_EMPTY_N));

  // submodule bsvTopCore_bluerdmaDmaProxy_h2cProxy_outReqQ
  FIFO2 #(.width(32'd84),
	  .guarded(1'd1)) bsvTopCore_bluerdmaDmaProxy_h2cProxy_outReqQ(.RST(RST_N),
								       .CLK(CLK),
								       .D_IN(bsvTopCore_bluerdmaDmaProxy_h2cProxy_outReqQ_D_IN),
								       .ENQ(bsvTopCore_bluerdmaDmaProxy_h2cProxy_outReqQ_ENQ),
								       .DEQ(bsvTopCore_bluerdmaDmaProxy_h2cProxy_outReqQ_DEQ),
								       .CLR(bsvTopCore_bluerdmaDmaProxy_h2cProxy_outReqQ_CLR),
								       .D_OUT(bsvTopCore_bluerdmaDmaProxy_h2cProxy_outReqQ_D_OUT),
								       .FULL_N(bsvTopCore_bluerdmaDmaProxy_h2cProxy_outReqQ_FULL_N),
								       .EMPTY_N(bsvTopCore_bluerdmaDmaProxy_h2cProxy_outReqQ_EMPTY_N));

  // submodule bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ
  FIFO2 #(.width(32'd290),
	  .guarded(1'd1)) bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ(.RST(RST_N),
									.CLK(CLK),
									.D_IN(bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_IN),
									.ENQ(bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_ENQ),
									.DEQ(bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_DEQ),
									.CLR(bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_CLR),
									.D_OUT(bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT),
									.FULL_N(bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_FULL_N),
									.EMPTY_N(bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_EMPTY_N));

  // submodule bsvTopCore_cmdQController_descReadProxy_ringbufQ
  FIFO2 #(.width(32'd256),
	  .guarded(1'd1)) bsvTopCore_cmdQController_descReadProxy_ringbufQ(.RST(RST_N),
									   .CLK(CLK),
									   .D_IN(bsvTopCore_cmdQController_descReadProxy_ringbufQ_D_IN),
									   .ENQ(bsvTopCore_cmdQController_descReadProxy_ringbufQ_ENQ),
									   .DEQ(bsvTopCore_cmdQController_descReadProxy_ringbufQ_DEQ),
									   .CLR(bsvTopCore_cmdQController_descReadProxy_ringbufQ_CLR),
									   .D_OUT(bsvTopCore_cmdQController_descReadProxy_ringbufQ_D_OUT),
									   .FULL_N(bsvTopCore_cmdQController_descReadProxy_ringbufQ_FULL_N),
									   .EMPTY_N(bsvTopCore_cmdQController_descReadProxy_ringbufQ_EMPTY_N));

  // submodule bsvTopCore_cmdQController_descWriteProxy_ringbufQ
  FIFO2 #(.width(32'd256),
	  .guarded(1'd1)) bsvTopCore_cmdQController_descWriteProxy_ringbufQ(.RST(RST_N),
									    .CLK(CLK),
									    .D_IN(bsvTopCore_cmdQController_descWriteProxy_ringbufQ_D_IN),
									    .ENQ(bsvTopCore_cmdQController_descWriteProxy_ringbufQ_ENQ),
									    .DEQ(bsvTopCore_cmdQController_descWriteProxy_ringbufQ_DEQ),
									    .CLR(bsvTopCore_cmdQController_descWriteProxy_ringbufQ_CLR),
									    .D_OUT(bsvTopCore_cmdQController_descWriteProxy_ringbufQ_D_OUT),
									    .FULL_N(bsvTopCore_cmdQController_descWriteProxy_ringbufQ_FULL_N),
									    .EMPTY_N(bsvTopCore_cmdQController_descWriteProxy_ringbufQ_EMPTY_N));

  // submodule bsvTopCore_cmdQController_metaDataInflightReqQ
  FIFO2 #(.width(32'd256),
	  .guarded(1'd1)) bsvTopCore_cmdQController_metaDataInflightReqQ(.RST(RST_N),
									 .CLK(CLK),
									 .D_IN(bsvTopCore_cmdQController_metaDataInflightReqQ_D_IN),
									 .ENQ(bsvTopCore_cmdQController_metaDataInflightReqQ_ENQ),
									 .DEQ(bsvTopCore_cmdQController_metaDataInflightReqQ_DEQ),
									 .CLR(bsvTopCore_cmdQController_metaDataInflightReqQ_CLR),
									 .D_OUT(bsvTopCore_cmdQController_metaDataInflightReqQ_D_OUT),
									 .FULL_N(bsvTopCore_cmdQController_metaDataInflightReqQ_FULL_N),
									 .EMPTY_N(bsvTopCore_cmdQController_metaDataInflightReqQ_EMPTY_N));

  // submodule bsvTopCore_cmdQController_metaDataReqQ
  FIFO2 #(.width(32'd303),
	  .guarded(1'd1)) bsvTopCore_cmdQController_metaDataReqQ(.RST(RST_N),
								 .CLK(CLK),
								 .D_IN(bsvTopCore_cmdQController_metaDataReqQ_D_IN),
								 .ENQ(bsvTopCore_cmdQController_metaDataReqQ_ENQ),
								 .DEQ(bsvTopCore_cmdQController_metaDataReqQ_DEQ),
								 .CLR(bsvTopCore_cmdQController_metaDataReqQ_CLR),
								 .D_OUT(bsvTopCore_cmdQController_metaDataReqQ_D_OUT),
								 .FULL_N(bsvTopCore_cmdQController_metaDataReqQ_FULL_N),
								 .EMPTY_N(bsvTopCore_cmdQController_metaDataReqQ_EMPTY_N));

  // submodule bsvTopCore_cmdQController_metaDataRespQ
  FIFO2 #(.width(32'd276),
	  .guarded(1'd1)) bsvTopCore_cmdQController_metaDataRespQ(.RST(RST_N),
								  .CLK(CLK),
								  .D_IN(bsvTopCore_cmdQController_metaDataRespQ_D_IN),
								  .ENQ(bsvTopCore_cmdQController_metaDataRespQ_ENQ),
								  .DEQ(bsvTopCore_cmdQController_metaDataRespQ_DEQ),
								  .CLR(bsvTopCore_cmdQController_metaDataRespQ_CLR),
								  .D_OUT(bsvTopCore_cmdQController_metaDataRespQ_D_OUT),
								  .FULL_N(bsvTopCore_cmdQController_metaDataRespQ_FULL_N),
								  .EMPTY_N(bsvTopCore_cmdQController_metaDataRespQ_EMPTY_N));

  // submodule bsvTopCore_cmdQController_pgtInflightReqQ
  FIFO2 #(.width(32'd256),
	  .guarded(1'd1)) bsvTopCore_cmdQController_pgtInflightReqQ(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(bsvTopCore_cmdQController_pgtInflightReqQ_D_IN),
								    .ENQ(bsvTopCore_cmdQController_pgtInflightReqQ_ENQ),
								    .DEQ(bsvTopCore_cmdQController_pgtInflightReqQ_DEQ),
								    .CLR(bsvTopCore_cmdQController_pgtInflightReqQ_CLR),
								    .D_OUT(bsvTopCore_cmdQController_pgtInflightReqQ_D_OUT),
								    .FULL_N(bsvTopCore_cmdQController_pgtInflightReqQ_FULL_N),
								    .EMPTY_N(bsvTopCore_cmdQController_pgtInflightReqQ_EMPTY_N));

  // submodule bsvTopCore_cmdQController_pgtReqQ
  FIFO2 #(.width(32'd256),
	  .guarded(1'd1)) bsvTopCore_cmdQController_pgtReqQ(.RST(RST_N),
							    .CLK(CLK),
							    .D_IN(bsvTopCore_cmdQController_pgtReqQ_D_IN),
							    .ENQ(bsvTopCore_cmdQController_pgtReqQ_ENQ),
							    .DEQ(bsvTopCore_cmdQController_pgtReqQ_DEQ),
							    .CLR(bsvTopCore_cmdQController_pgtReqQ_CLR),
							    .D_OUT(bsvTopCore_cmdQController_pgtReqQ_D_OUT),
							    .FULL_N(bsvTopCore_cmdQController_pgtReqQ_FULL_N),
							    .EMPTY_N(bsvTopCore_cmdQController_pgtReqQ_EMPTY_N));

  // submodule bsvTopCore_cmdQController_pgtRespQ
  FIFO2 #(.width(32'd1),
	  .guarded(1'd1)) bsvTopCore_cmdQController_pgtRespQ(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(bsvTopCore_cmdQController_pgtRespQ_D_IN),
							     .ENQ(bsvTopCore_cmdQController_pgtRespQ_ENQ),
							     .DEQ(bsvTopCore_cmdQController_pgtRespQ_DEQ),
							     .CLR(bsvTopCore_cmdQController_pgtRespQ_CLR),
							     .D_OUT(bsvTopCore_cmdQController_pgtRespQ_D_OUT),
							     .FULL_N(bsvTopCore_cmdQController_pgtRespQ_FULL_N),
							     .EMPTY_N(bsvTopCore_cmdQController_pgtRespQ_EMPTY_N));

  // submodule bsvTopCore_pgtManager_dmaReadReqQ
  FIFO2 #(.width(32'd84),
	  .guarded(1'd1)) bsvTopCore_pgtManager_dmaReadReqQ(.RST(RST_N),
							    .CLK(CLK),
							    .D_IN(bsvTopCore_pgtManager_dmaReadReqQ_D_IN),
							    .ENQ(bsvTopCore_pgtManager_dmaReadReqQ_ENQ),
							    .DEQ(bsvTopCore_pgtManager_dmaReadReqQ_DEQ),
							    .CLR(bsvTopCore_pgtManager_dmaReadReqQ_CLR),
							    .D_OUT(bsvTopCore_pgtManager_dmaReadReqQ_D_OUT),
							    .FULL_N(bsvTopCore_pgtManager_dmaReadReqQ_FULL_N),
							    .EMPTY_N(bsvTopCore_pgtManager_dmaReadReqQ_EMPTY_N));

  // submodule bsvTopCore_pgtManager_dmaReadRespQ
  FIFO2 #(.width(32'd290),
	  .guarded(1'd1)) bsvTopCore_pgtManager_dmaReadRespQ(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(bsvTopCore_pgtManager_dmaReadRespQ_D_IN),
							     .ENQ(bsvTopCore_pgtManager_dmaReadRespQ_ENQ),
							     .DEQ(bsvTopCore_pgtManager_dmaReadRespQ_DEQ),
							     .CLR(bsvTopCore_pgtManager_dmaReadRespQ_CLR),
							     .D_OUT(bsvTopCore_pgtManager_dmaReadRespQ_D_OUT),
							     .FULL_N(bsvTopCore_pgtManager_dmaReadRespQ_FULL_N),
							     .EMPTY_N(bsvTopCore_pgtManager_dmaReadRespQ_EMPTY_N));

  // submodule bsvTopCore_pgtManager_reqQ
  FIFO2 #(.width(32'd256),
	  .guarded(1'd1)) bsvTopCore_pgtManager_reqQ(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(bsvTopCore_pgtManager_reqQ_D_IN),
						     .ENQ(bsvTopCore_pgtManager_reqQ_ENQ),
						     .DEQ(bsvTopCore_pgtManager_reqQ_DEQ),
						     .CLR(bsvTopCore_pgtManager_reqQ_CLR),
						     .D_OUT(bsvTopCore_pgtManager_reqQ_D_OUT),
						     .FULL_N(bsvTopCore_pgtManager_reqQ_FULL_N),
						     .EMPTY_N(bsvTopCore_pgtManager_reqQ_EMPTY_N));

  // submodule bsvTopCore_pgtManager_respQ
  FIFO2 #(.width(32'd1),
	  .guarded(1'd1)) bsvTopCore_pgtManager_respQ(.RST(RST_N),
						      .CLK(CLK),
						      .D_IN(bsvTopCore_pgtManager_respQ_D_IN),
						      .ENQ(bsvTopCore_pgtManager_respQ_ENQ),
						      .DEQ(bsvTopCore_pgtManager_respQ_DEQ),
						      .CLR(bsvTopCore_pgtManager_respQ_CLR),
						      .D_OUT(bsvTopCore_pgtManager_respQ_D_OUT),
						      .FULL_N(bsvTopCore_pgtManager_respQ_FULL_N),
						      .EMPTY_N(bsvTopCore_pgtManager_respQ_EMPTY_N));

  // submodule bsvTopCore_rdmaTransportLayer
  mkTransportLayer bsvTopCore_rdmaTransportLayer(.CLK(CLK),
						 .RST_N(RST_N),
						 .dmaReadClt_response_put(bsvTopCore_rdmaTransportLayer_dmaReadClt_response_put),
						 .dmaWriteClt_response_put(bsvTopCore_rdmaTransportLayer_dmaWriteClt_response_put),
						 .rdmaDataStreamInput_put(bsvTopCore_rdmaTransportLayer_rdmaDataStreamInput_put),
						 .recvReqInput_put(bsvTopCore_rdmaTransportLayer_recvReqInput_put),
						 .srvPortMetaData_request_put(bsvTopCore_rdmaTransportLayer_srvPortMetaData_request_put),
						 .workReqInput_put(bsvTopCore_rdmaTransportLayer_workReqInput_put),
						 .EN_recvReqInput_put(bsvTopCore_rdmaTransportLayer_EN_recvReqInput_put),
						 .EN_workReqInput_put(bsvTopCore_rdmaTransportLayer_EN_workReqInput_put),
						 .EN_rdmaDataStreamInput_put(bsvTopCore_rdmaTransportLayer_EN_rdmaDataStreamInput_put),
						 .EN_rdmaDataStreamPipeOut_deq(bsvTopCore_rdmaTransportLayer_EN_rdmaDataStreamPipeOut_deq),
						 .EN_workCompPipeOutRQ_deq(bsvTopCore_rdmaTransportLayer_EN_workCompPipeOutRQ_deq),
						 .EN_workCompPipeOutSQ_deq(bsvTopCore_rdmaTransportLayer_EN_workCompPipeOutSQ_deq),
						 .EN_srvPortMetaData_request_put(bsvTopCore_rdmaTransportLayer_EN_srvPortMetaData_request_put),
						 .EN_srvPortMetaData_response_get(bsvTopCore_rdmaTransportLayer_EN_srvPortMetaData_response_get),
						 .EN_dmaReadClt_request_get(bsvTopCore_rdmaTransportLayer_EN_dmaReadClt_request_get),
						 .EN_dmaReadClt_response_put(bsvTopCore_rdmaTransportLayer_EN_dmaReadClt_response_put),
						 .EN_dmaWriteClt_request_get(bsvTopCore_rdmaTransportLayer_EN_dmaWriteClt_request_get),
						 .EN_dmaWriteClt_response_put(bsvTopCore_rdmaTransportLayer_EN_dmaWriteClt_response_put),
						 .RDY_recvReqInput_put(bsvTopCore_rdmaTransportLayer_RDY_recvReqInput_put),
						 .RDY_workReqInput_put(bsvTopCore_rdmaTransportLayer_RDY_workReqInput_put),
						 .RDY_rdmaDataStreamInput_put(bsvTopCore_rdmaTransportLayer_RDY_rdmaDataStreamInput_put),
						 .rdmaDataStreamPipeOut_first(bsvTopCore_rdmaTransportLayer_rdmaDataStreamPipeOut_first),
						 .RDY_rdmaDataStreamPipeOut_first(bsvTopCore_rdmaTransportLayer_RDY_rdmaDataStreamPipeOut_first),
						 .RDY_rdmaDataStreamPipeOut_deq(bsvTopCore_rdmaTransportLayer_RDY_rdmaDataStreamPipeOut_deq),
						 .rdmaDataStreamPipeOut_notEmpty(bsvTopCore_rdmaTransportLayer_rdmaDataStreamPipeOut_notEmpty),
						 .RDY_rdmaDataStreamPipeOut_notEmpty(),
						 .workCompPipeOutRQ_first(bsvTopCore_rdmaTransportLayer_workCompPipeOutRQ_first),
						 .RDY_workCompPipeOutRQ_first(bsvTopCore_rdmaTransportLayer_RDY_workCompPipeOutRQ_first),
						 .RDY_workCompPipeOutRQ_deq(bsvTopCore_rdmaTransportLayer_RDY_workCompPipeOutRQ_deq),
						 .workCompPipeOutRQ_notEmpty(),
						 .RDY_workCompPipeOutRQ_notEmpty(),
						 .workCompPipeOutSQ_first(bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first),
						 .RDY_workCompPipeOutSQ_first(bsvTopCore_rdmaTransportLayer_RDY_workCompPipeOutSQ_first),
						 .RDY_workCompPipeOutSQ_deq(bsvTopCore_rdmaTransportLayer_RDY_workCompPipeOutSQ_deq),
						 .workCompPipeOutSQ_notEmpty(),
						 .RDY_workCompPipeOutSQ_notEmpty(),
						 .RDY_srvPortMetaData_request_put(bsvTopCore_rdmaTransportLayer_RDY_srvPortMetaData_request_put),
						 .srvPortMetaData_response_get(bsvTopCore_rdmaTransportLayer_srvPortMetaData_response_get),
						 .RDY_srvPortMetaData_response_get(bsvTopCore_rdmaTransportLayer_RDY_srvPortMetaData_response_get),
						 .dmaReadClt_request_get(bsvTopCore_rdmaTransportLayer_dmaReadClt_request_get),
						 .RDY_dmaReadClt_request_get(bsvTopCore_rdmaTransportLayer_RDY_dmaReadClt_request_get),
						 .RDY_dmaReadClt_response_put(bsvTopCore_rdmaTransportLayer_RDY_dmaReadClt_response_put),
						 .dmaWriteClt_request_get(bsvTopCore_rdmaTransportLayer_dmaWriteClt_request_get),
						 .RDY_dmaWriteClt_request_get(bsvTopCore_rdmaTransportLayer_RDY_dmaWriteClt_request_get),
						 .RDY_dmaWriteClt_response_put(bsvTopCore_rdmaTransportLayer_RDY_dmaWriteClt_response_put));

  // submodule bsvTopCore_regBlock_readReqQ
  FIFO2 #(.width(32'd12),
	  .guarded(1'd1)) bsvTopCore_regBlock_readReqQ(.RST(RST_N),
						       .CLK(CLK),
						       .D_IN(bsvTopCore_regBlock_readReqQ_D_IN),
						       .ENQ(bsvTopCore_regBlock_readReqQ_ENQ),
						       .DEQ(bsvTopCore_regBlock_readReqQ_DEQ),
						       .CLR(bsvTopCore_regBlock_readReqQ_CLR),
						       .D_OUT(bsvTopCore_regBlock_readReqQ_D_OUT),
						       .FULL_N(bsvTopCore_regBlock_readReqQ_FULL_N),
						       .EMPTY_N(bsvTopCore_regBlock_readReqQ_EMPTY_N));

  // submodule bsvTopCore_regBlock_readRespQ
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) bsvTopCore_regBlock_readRespQ(.RST(RST_N),
							.CLK(CLK),
							.D_IN(bsvTopCore_regBlock_readRespQ_D_IN),
							.ENQ(bsvTopCore_regBlock_readRespQ_ENQ),
							.DEQ(bsvTopCore_regBlock_readRespQ_DEQ),
							.CLR(bsvTopCore_regBlock_readRespQ_CLR),
							.D_OUT(bsvTopCore_regBlock_readRespQ_D_OUT),
							.FULL_N(bsvTopCore_regBlock_readRespQ_FULL_N),
							.EMPTY_N(bsvTopCore_regBlock_readRespQ_EMPTY_N));

  // submodule bsvTopCore_regBlock_writeReqQ
  FIFO2 #(.width(32'd44),
	  .guarded(1'd1)) bsvTopCore_regBlock_writeReqQ(.RST(RST_N),
							.CLK(CLK),
							.D_IN(bsvTopCore_regBlock_writeReqQ_D_IN),
							.ENQ(bsvTopCore_regBlock_writeReqQ_ENQ),
							.DEQ(bsvTopCore_regBlock_writeReqQ_DEQ),
							.CLR(bsvTopCore_regBlock_writeReqQ_CLR),
							.D_OUT(bsvTopCore_regBlock_writeReqQ_D_OUT),
							.FULL_N(bsvTopCore_regBlock_writeReqQ_FULL_N),
							.EMPTY_N(bsvTopCore_regBlock_writeReqQ_EMPTY_N));

  // submodule bsvTopCore_regBlock_writeRespQ
  FIFO20 #(.guarded(1'd1)) bsvTopCore_regBlock_writeRespQ(.RST(RST_N),
							  .CLK(CLK),
							  .ENQ(bsvTopCore_regBlock_writeRespQ_ENQ),
							  .DEQ(bsvTopCore_regBlock_writeRespQ_DEQ),
							  .CLR(bsvTopCore_regBlock_writeRespQ_CLR),
							  .FULL_N(bsvTopCore_regBlock_writeRespQ_FULL_N),
							  .EMPTY_N(bsvTopCore_regBlock_writeRespQ_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ
  FIFO2 #(.width(32'd376),
	  .guarded(1'd1)) bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ(.RST(RST_N),
														     .CLK(CLK),
														     .D_IN(bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_D_IN),
														     .ENQ(bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_ENQ),
														     .DEQ(bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_DEQ),
														     .CLR(bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_CLR),
														     .D_OUT(bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_D_OUT),
														     .FULL_N(bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_FULL_N),
														     .EMPTY_N(bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0
  FIFO2 #(.width(32'd376),
	  .guarded(1'd1)) bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0(.RST(RST_N),
											  .CLK(CLK),
											  .D_IN(bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0_D_IN),
											  .ENQ(bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0_ENQ),
											  .DEQ(bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0_DEQ),
											  .CLR(bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0_CLR),
											  .D_OUT(bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0_D_OUT),
											  .FULL_N(bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0_FULL_N),
											  .EMPTY_N(bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1
  FIFO2 #(.width(32'd376),
	  .guarded(1'd1)) bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1(.RST(RST_N),
											  .CLK(CLK),
											  .D_IN(bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1_D_IN),
											  .ENQ(bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1_ENQ),
											  .DEQ(bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1_DEQ),
											  .CLR(bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1_CLR),
											  .D_OUT(bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1_D_OUT),
											  .FULL_N(bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1_FULL_N),
											  .EMPTY_N(bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2
  FIFO2 #(.width(32'd376),
	  .guarded(1'd1)) bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2(.RST(RST_N),
											  .CLK(CLK),
											  .D_IN(bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2_D_IN),
											  .ENQ(bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2_ENQ),
											  .DEQ(bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2_DEQ),
											  .CLR(bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2_CLR),
											  .D_OUT(bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2_D_OUT),
											  .FULL_N(bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2_FULL_N),
											  .EMPTY_N(bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3
  FIFO2 #(.width(32'd376),
	  .guarded(1'd1)) bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3(.RST(RST_N),
											  .CLK(CLK),
											  .D_IN(bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3_D_IN),
											  .ENQ(bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3_ENQ),
											  .DEQ(bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3_DEQ),
											  .CLR(bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3_CLR),
											  .D_OUT(bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3_D_OUT),
											  .FULL_N(bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3_FULL_N),
											  .EMPTY_N(bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_pipeOutQ
  FIFO2 #(.width(32'd376),
	  .guarded(1'd1)) bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_pipeOutQ(.RST(RST_N),
													     .CLK(CLK),
													     .D_IN(bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_IN),
													     .ENQ(bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_ENQ),
													     .DEQ(bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_DEQ),
													     .CLR(bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_CLR),
													     .D_OUT(bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_OUT),
													     .FULL_N(bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_FULL_N),
													     .EMPTY_N(bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ
  FIFO2 #(.width(32'd376),
	  .guarded(1'd1)) bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ(.RST(RST_N),
													     .CLK(CLK),
													     .D_IN(bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_D_IN),
													     .ENQ(bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_ENQ),
													     .DEQ(bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_DEQ),
													     .CLR(bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_CLR),
													     .D_OUT(bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_D_OUT),
													     .FULL_N(bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_FULL_N),
													     .EMPTY_N(bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_arbitratedC2hClient_preGrantIdxQ
  FIFO2 #(.width(32'd2),
	  .guarded(1'd1)) bsvTopCore_ringbufPool_arbitratedC2hClient_preGrantIdxQ(.RST(RST_N),
										  .CLK(CLK),
										  .D_IN(bsvTopCore_ringbufPool_arbitratedC2hClient_preGrantIdxQ_D_IN),
										  .ENQ(bsvTopCore_ringbufPool_arbitratedC2hClient_preGrantIdxQ_ENQ),
										  .DEQ(bsvTopCore_ringbufPool_arbitratedC2hClient_preGrantIdxQ_DEQ),
										  .CLR(bsvTopCore_ringbufPool_arbitratedC2hClient_preGrantIdxQ_CLR),
										  .D_OUT(bsvTopCore_ringbufPool_arbitratedC2hClient_preGrantIdxQ_D_OUT),
										  .FULL_N(bsvTopCore_ringbufPool_arbitratedC2hClient_preGrantIdxQ_FULL_N),
										  .EMPTY_N(bsvTopCore_ringbufPool_arbitratedC2hClient_preGrantIdxQ_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_arbitratedC2hClient_reqQ
  FIFO2 #(.width(32'd374),
	  .guarded(1'd1)) bsvTopCore_ringbufPool_arbitratedC2hClient_reqQ(.RST(RST_N),
									  .CLK(CLK),
									  .D_IN(bsvTopCore_ringbufPool_arbitratedC2hClient_reqQ_D_IN),
									  .ENQ(bsvTopCore_ringbufPool_arbitratedC2hClient_reqQ_ENQ),
									  .DEQ(bsvTopCore_ringbufPool_arbitratedC2hClient_reqQ_DEQ),
									  .CLR(bsvTopCore_ringbufPool_arbitratedC2hClient_reqQ_CLR),
									  .D_OUT(bsvTopCore_ringbufPool_arbitratedC2hClient_reqQ_D_OUT),
									  .FULL_N(bsvTopCore_ringbufPool_arbitratedC2hClient_reqQ_FULL_N),
									  .EMPTY_N(bsvTopCore_ringbufPool_arbitratedC2hClient_reqQ_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_arbitratedC2hClient_respQ
  FIFO20 #(.guarded(1'd1)) bsvTopCore_ringbufPool_arbitratedC2hClient_respQ(.RST(RST_N),
									    .CLK(CLK),
									    .ENQ(bsvTopCore_ringbufPool_arbitratedC2hClient_respQ_ENQ),
									    .DEQ(bsvTopCore_ringbufPool_arbitratedC2hClient_respQ_DEQ),
									    .CLR(bsvTopCore_ringbufPool_arbitratedC2hClient_respQ_CLR),
									    .FULL_N(bsvTopCore_ringbufPool_arbitratedC2hClient_respQ_FULL_N),
									    .EMPTY_N(bsvTopCore_ringbufPool_arbitratedC2hClient_respQ_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ
  FIFO2 #(.width(32'd86),
	  .guarded(1'd1)) bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ(.RST(RST_N),
														     .CLK(CLK),
														     .D_IN(bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_D_IN),
														     .ENQ(bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_ENQ),
														     .DEQ(bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_DEQ),
														     .CLR(bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_CLR),
														     .D_OUT(bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_D_OUT),
														     .FULL_N(bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_FULL_N),
														     .EMPTY_N(bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_0
  FIFO2 #(.width(32'd86),
	  .guarded(1'd1)) bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_0(.RST(RST_N),
											  .CLK(CLK),
											  .D_IN(bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_0_D_IN),
											  .ENQ(bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_0_ENQ),
											  .DEQ(bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_0_DEQ),
											  .CLR(bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_0_CLR),
											  .D_OUT(bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_0_D_OUT),
											  .FULL_N(bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_0_FULL_N),
											  .EMPTY_N(bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_0_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_1
  FIFO2 #(.width(32'd86),
	  .guarded(1'd1)) bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_1(.RST(RST_N),
											  .CLK(CLK),
											  .D_IN(bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_1_D_IN),
											  .ENQ(bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_1_ENQ),
											  .DEQ(bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_1_DEQ),
											  .CLR(bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_1_CLR),
											  .D_OUT(bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_1_D_OUT),
											  .FULL_N(bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_1_FULL_N),
											  .EMPTY_N(bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_1_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_2
  FIFO2 #(.width(32'd86),
	  .guarded(1'd1)) bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_2(.RST(RST_N),
											  .CLK(CLK),
											  .D_IN(bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_2_D_IN),
											  .ENQ(bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_2_ENQ),
											  .DEQ(bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_2_DEQ),
											  .CLR(bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_2_CLR),
											  .D_OUT(bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_2_D_OUT),
											  .FULL_N(bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_2_FULL_N),
											  .EMPTY_N(bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_2_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_3
  FIFO2 #(.width(32'd86),
	  .guarded(1'd1)) bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_3(.RST(RST_N),
											  .CLK(CLK),
											  .D_IN(bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_3_D_IN),
											  .ENQ(bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_3_ENQ),
											  .DEQ(bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_3_DEQ),
											  .CLR(bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_3_CLR),
											  .D_OUT(bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_3_D_OUT),
											  .FULL_N(bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_3_FULL_N),
											  .EMPTY_N(bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_3_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_pipeOutQ
  FIFO2 #(.width(32'd86),
	  .guarded(1'd1)) bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_pipeOutQ(.RST(RST_N),
													     .CLK(CLK),
													     .D_IN(bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_IN),
													     .ENQ(bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_ENQ),
													     .DEQ(bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_DEQ),
													     .CLR(bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_CLR),
													     .D_OUT(bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_OUT),
													     .FULL_N(bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_FULL_N),
													     .EMPTY_N(bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_pipeOutQ
  FIFO2 #(.width(32'd86),
	  .guarded(1'd1)) bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_pipeOutQ(.RST(RST_N),
													     .CLK(CLK),
													     .D_IN(bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_D_IN),
													     .ENQ(bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_ENQ),
													     .DEQ(bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_DEQ),
													     .CLR(bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_CLR),
													     .D_OUT(bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_D_OUT),
													     .FULL_N(bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_FULL_N),
													     .EMPTY_N(bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_arbitratedH2cClient_preGrantIdxQ
  FIFO2 #(.width(32'd2),
	  .guarded(1'd1)) bsvTopCore_ringbufPool_arbitratedH2cClient_preGrantIdxQ(.RST(RST_N),
										  .CLK(CLK),
										  .D_IN(bsvTopCore_ringbufPool_arbitratedH2cClient_preGrantIdxQ_D_IN),
										  .ENQ(bsvTopCore_ringbufPool_arbitratedH2cClient_preGrantIdxQ_ENQ),
										  .DEQ(bsvTopCore_ringbufPool_arbitratedH2cClient_preGrantIdxQ_DEQ),
										  .CLR(bsvTopCore_ringbufPool_arbitratedH2cClient_preGrantIdxQ_CLR),
										  .D_OUT(bsvTopCore_ringbufPool_arbitratedH2cClient_preGrantIdxQ_D_OUT),
										  .FULL_N(bsvTopCore_ringbufPool_arbitratedH2cClient_preGrantIdxQ_FULL_N),
										  .EMPTY_N(bsvTopCore_ringbufPool_arbitratedH2cClient_preGrantIdxQ_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_arbitratedH2cClient_reqQ
  FIFO2 #(.width(32'd84),
	  .guarded(1'd1)) bsvTopCore_ringbufPool_arbitratedH2cClient_reqQ(.RST(RST_N),
									  .CLK(CLK),
									  .D_IN(bsvTopCore_ringbufPool_arbitratedH2cClient_reqQ_D_IN),
									  .ENQ(bsvTopCore_ringbufPool_arbitratedH2cClient_reqQ_ENQ),
									  .DEQ(bsvTopCore_ringbufPool_arbitratedH2cClient_reqQ_DEQ),
									  .CLR(bsvTopCore_ringbufPool_arbitratedH2cClient_reqQ_CLR),
									  .D_OUT(bsvTopCore_ringbufPool_arbitratedH2cClient_reqQ_D_OUT),
									  .FULL_N(bsvTopCore_ringbufPool_arbitratedH2cClient_reqQ_FULL_N),
									  .EMPTY_N(bsvTopCore_ringbufPool_arbitratedH2cClient_reqQ_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_arbitratedH2cClient_respQ
  FIFO2 #(.width(32'd290),
	  .guarded(1'd1)) bsvTopCore_ringbufPool_arbitratedH2cClient_respQ(.RST(RST_N),
									   .CLK(CLK),
									   .D_IN(bsvTopCore_ringbufPool_arbitratedH2cClient_respQ_D_IN),
									   .ENQ(bsvTopCore_ringbufPool_arbitratedH2cClient_respQ_ENQ),
									   .DEQ(bsvTopCore_ringbufPool_arbitratedH2cClient_respQ_DEQ),
									   .CLR(bsvTopCore_ringbufPool_arbitratedH2cClient_respQ_CLR),
									   .D_OUT(bsvTopCore_ringbufPool_arbitratedH2cClient_respQ_D_OUT),
									   .FULL_N(bsvTopCore_ringbufPool_arbitratedH2cClient_respQ_FULL_N),
									   .EMPTY_N(bsvTopCore_ringbufPool_arbitratedH2cClient_respQ_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_controller_0_dmaReqQ
  FIFO2 #(.width(32'd84),
	  .guarded(1'd1)) bsvTopCore_ringbufPool_controller_0_dmaReqQ(.RST(RST_N),
								      .CLK(CLK),
								      .D_IN(bsvTopCore_ringbufPool_controller_0_dmaReqQ_D_IN),
								      .ENQ(bsvTopCore_ringbufPool_controller_0_dmaReqQ_ENQ),
								      .DEQ(bsvTopCore_ringbufPool_controller_0_dmaReqQ_DEQ),
								      .CLR(bsvTopCore_ringbufPool_controller_0_dmaReqQ_CLR),
								      .D_OUT(bsvTopCore_ringbufPool_controller_0_dmaReqQ_D_OUT),
								      .FULL_N(bsvTopCore_ringbufPool_controller_0_dmaReqQ_FULL_N),
								      .EMPTY_N(bsvTopCore_ringbufPool_controller_0_dmaReqQ_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_controller_0_dmaReqQ_1
  FIFO2 #(.width(32'd374),
	  .guarded(1'd1)) bsvTopCore_ringbufPool_controller_0_dmaReqQ_1(.RST(RST_N),
									.CLK(CLK),
									.D_IN(bsvTopCore_ringbufPool_controller_0_dmaReqQ_1_D_IN),
									.ENQ(bsvTopCore_ringbufPool_controller_0_dmaReqQ_1_ENQ),
									.DEQ(bsvTopCore_ringbufPool_controller_0_dmaReqQ_1_DEQ),
									.CLR(bsvTopCore_ringbufPool_controller_0_dmaReqQ_1_CLR),
									.D_OUT(bsvTopCore_ringbufPool_controller_0_dmaReqQ_1_D_OUT),
									.FULL_N(bsvTopCore_ringbufPool_controller_0_dmaReqQ_1_FULL_N),
									.EMPTY_N(bsvTopCore_ringbufPool_controller_0_dmaReqQ_1_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_controller_0_dmaRespQ
  FIFO2 #(.width(32'd290),
	  .guarded(1'd1)) bsvTopCore_ringbufPool_controller_0_dmaRespQ(.RST(RST_N),
								       .CLK(CLK),
								       .D_IN(bsvTopCore_ringbufPool_controller_0_dmaRespQ_D_IN),
								       .ENQ(bsvTopCore_ringbufPool_controller_0_dmaRespQ_ENQ),
								       .DEQ(bsvTopCore_ringbufPool_controller_0_dmaRespQ_DEQ),
								       .CLR(bsvTopCore_ringbufPool_controller_0_dmaRespQ_CLR),
								       .D_OUT(bsvTopCore_ringbufPool_controller_0_dmaRespQ_D_OUT),
								       .FULL_N(bsvTopCore_ringbufPool_controller_0_dmaRespQ_FULL_N),
								       .EMPTY_N(bsvTopCore_ringbufPool_controller_0_dmaRespQ_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_controller_0_dmaRespQ_1
  FIFO20 #(.guarded(1'd1)) bsvTopCore_ringbufPool_controller_0_dmaRespQ_1(.RST(RST_N),
									  .CLK(CLK),
									  .ENQ(bsvTopCore_ringbufPool_controller_0_dmaRespQ_1_ENQ),
									  .DEQ(bsvTopCore_ringbufPool_controller_0_dmaRespQ_1_DEQ),
									  .CLR(bsvTopCore_ringbufPool_controller_0_dmaRespQ_1_CLR),
									  .FULL_N(bsvTopCore_ringbufPool_controller_0_dmaRespQ_1_FULL_N),
									  .EMPTY_N(bsvTopCore_ringbufPool_controller_0_dmaRespQ_1_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_controller_1_dmaReqQ
  FIFO2 #(.width(32'd84),
	  .guarded(1'd1)) bsvTopCore_ringbufPool_controller_1_dmaReqQ(.RST(RST_N),
								      .CLK(CLK),
								      .D_IN(bsvTopCore_ringbufPool_controller_1_dmaReqQ_D_IN),
								      .ENQ(bsvTopCore_ringbufPool_controller_1_dmaReqQ_ENQ),
								      .DEQ(bsvTopCore_ringbufPool_controller_1_dmaReqQ_DEQ),
								      .CLR(bsvTopCore_ringbufPool_controller_1_dmaReqQ_CLR),
								      .D_OUT(bsvTopCore_ringbufPool_controller_1_dmaReqQ_D_OUT),
								      .FULL_N(bsvTopCore_ringbufPool_controller_1_dmaReqQ_FULL_N),
								      .EMPTY_N(bsvTopCore_ringbufPool_controller_1_dmaReqQ_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_controller_1_dmaReqQ_1
  FIFO2 #(.width(32'd374),
	  .guarded(1'd1)) bsvTopCore_ringbufPool_controller_1_dmaReqQ_1(.RST(RST_N),
									.CLK(CLK),
									.D_IN(bsvTopCore_ringbufPool_controller_1_dmaReqQ_1_D_IN),
									.ENQ(bsvTopCore_ringbufPool_controller_1_dmaReqQ_1_ENQ),
									.DEQ(bsvTopCore_ringbufPool_controller_1_dmaReqQ_1_DEQ),
									.CLR(bsvTopCore_ringbufPool_controller_1_dmaReqQ_1_CLR),
									.D_OUT(bsvTopCore_ringbufPool_controller_1_dmaReqQ_1_D_OUT),
									.FULL_N(bsvTopCore_ringbufPool_controller_1_dmaReqQ_1_FULL_N),
									.EMPTY_N(bsvTopCore_ringbufPool_controller_1_dmaReqQ_1_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_controller_1_dmaRespQ
  FIFO2 #(.width(32'd290),
	  .guarded(1'd1)) bsvTopCore_ringbufPool_controller_1_dmaRespQ(.RST(RST_N),
								       .CLK(CLK),
								       .D_IN(bsvTopCore_ringbufPool_controller_1_dmaRespQ_D_IN),
								       .ENQ(bsvTopCore_ringbufPool_controller_1_dmaRespQ_ENQ),
								       .DEQ(bsvTopCore_ringbufPool_controller_1_dmaRespQ_DEQ),
								       .CLR(bsvTopCore_ringbufPool_controller_1_dmaRespQ_CLR),
								       .D_OUT(bsvTopCore_ringbufPool_controller_1_dmaRespQ_D_OUT),
								       .FULL_N(bsvTopCore_ringbufPool_controller_1_dmaRespQ_FULL_N),
								       .EMPTY_N(bsvTopCore_ringbufPool_controller_1_dmaRespQ_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_controller_1_dmaRespQ_1
  FIFO20 #(.guarded(1'd1)) bsvTopCore_ringbufPool_controller_1_dmaRespQ_1(.RST(RST_N),
									  .CLK(CLK),
									  .ENQ(bsvTopCore_ringbufPool_controller_1_dmaRespQ_1_ENQ),
									  .DEQ(bsvTopCore_ringbufPool_controller_1_dmaRespQ_1_DEQ),
									  .CLR(bsvTopCore_ringbufPool_controller_1_dmaRespQ_1_CLR),
									  .FULL_N(bsvTopCore_ringbufPool_controller_1_dmaRespQ_1_FULL_N),
									  .EMPTY_N(bsvTopCore_ringbufPool_controller_1_dmaRespQ_1_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_controller_2_dmaReqQ
  FIFO2 #(.width(32'd84),
	  .guarded(1'd1)) bsvTopCore_ringbufPool_controller_2_dmaReqQ(.RST(RST_N),
								      .CLK(CLK),
								      .D_IN(bsvTopCore_ringbufPool_controller_2_dmaReqQ_D_IN),
								      .ENQ(bsvTopCore_ringbufPool_controller_2_dmaReqQ_ENQ),
								      .DEQ(bsvTopCore_ringbufPool_controller_2_dmaReqQ_DEQ),
								      .CLR(bsvTopCore_ringbufPool_controller_2_dmaReqQ_CLR),
								      .D_OUT(bsvTopCore_ringbufPool_controller_2_dmaReqQ_D_OUT),
								      .FULL_N(bsvTopCore_ringbufPool_controller_2_dmaReqQ_FULL_N),
								      .EMPTY_N(bsvTopCore_ringbufPool_controller_2_dmaReqQ_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_controller_2_dmaReqQ_1
  FIFO2 #(.width(32'd374),
	  .guarded(1'd1)) bsvTopCore_ringbufPool_controller_2_dmaReqQ_1(.RST(RST_N),
									.CLK(CLK),
									.D_IN(bsvTopCore_ringbufPool_controller_2_dmaReqQ_1_D_IN),
									.ENQ(bsvTopCore_ringbufPool_controller_2_dmaReqQ_1_ENQ),
									.DEQ(bsvTopCore_ringbufPool_controller_2_dmaReqQ_1_DEQ),
									.CLR(bsvTopCore_ringbufPool_controller_2_dmaReqQ_1_CLR),
									.D_OUT(bsvTopCore_ringbufPool_controller_2_dmaReqQ_1_D_OUT),
									.FULL_N(bsvTopCore_ringbufPool_controller_2_dmaReqQ_1_FULL_N),
									.EMPTY_N(bsvTopCore_ringbufPool_controller_2_dmaReqQ_1_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_controller_2_dmaRespQ
  FIFO2 #(.width(32'd290),
	  .guarded(1'd1)) bsvTopCore_ringbufPool_controller_2_dmaRespQ(.RST(RST_N),
								       .CLK(CLK),
								       .D_IN(bsvTopCore_ringbufPool_controller_2_dmaRespQ_D_IN),
								       .ENQ(bsvTopCore_ringbufPool_controller_2_dmaRespQ_ENQ),
								       .DEQ(bsvTopCore_ringbufPool_controller_2_dmaRespQ_DEQ),
								       .CLR(bsvTopCore_ringbufPool_controller_2_dmaRespQ_CLR),
								       .D_OUT(bsvTopCore_ringbufPool_controller_2_dmaRespQ_D_OUT),
								       .FULL_N(bsvTopCore_ringbufPool_controller_2_dmaRespQ_FULL_N),
								       .EMPTY_N(bsvTopCore_ringbufPool_controller_2_dmaRespQ_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_controller_2_dmaRespQ_1
  FIFO20 #(.guarded(1'd1)) bsvTopCore_ringbufPool_controller_2_dmaRespQ_1(.RST(RST_N),
									  .CLK(CLK),
									  .ENQ(bsvTopCore_ringbufPool_controller_2_dmaRespQ_1_ENQ),
									  .DEQ(bsvTopCore_ringbufPool_controller_2_dmaRespQ_1_DEQ),
									  .CLR(bsvTopCore_ringbufPool_controller_2_dmaRespQ_1_CLR),
									  .FULL_N(bsvTopCore_ringbufPool_controller_2_dmaRespQ_1_FULL_N),
									  .EMPTY_N(bsvTopCore_ringbufPool_controller_2_dmaRespQ_1_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_controller_3_dmaReqQ
  FIFO2 #(.width(32'd84),
	  .guarded(1'd1)) bsvTopCore_ringbufPool_controller_3_dmaReqQ(.RST(RST_N),
								      .CLK(CLK),
								      .D_IN(bsvTopCore_ringbufPool_controller_3_dmaReqQ_D_IN),
								      .ENQ(bsvTopCore_ringbufPool_controller_3_dmaReqQ_ENQ),
								      .DEQ(bsvTopCore_ringbufPool_controller_3_dmaReqQ_DEQ),
								      .CLR(bsvTopCore_ringbufPool_controller_3_dmaReqQ_CLR),
								      .D_OUT(bsvTopCore_ringbufPool_controller_3_dmaReqQ_D_OUT),
								      .FULL_N(bsvTopCore_ringbufPool_controller_3_dmaReqQ_FULL_N),
								      .EMPTY_N(bsvTopCore_ringbufPool_controller_3_dmaReqQ_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_controller_3_dmaReqQ_1
  FIFO2 #(.width(32'd374),
	  .guarded(1'd1)) bsvTopCore_ringbufPool_controller_3_dmaReqQ_1(.RST(RST_N),
									.CLK(CLK),
									.D_IN(bsvTopCore_ringbufPool_controller_3_dmaReqQ_1_D_IN),
									.ENQ(bsvTopCore_ringbufPool_controller_3_dmaReqQ_1_ENQ),
									.DEQ(bsvTopCore_ringbufPool_controller_3_dmaReqQ_1_DEQ),
									.CLR(bsvTopCore_ringbufPool_controller_3_dmaReqQ_1_CLR),
									.D_OUT(bsvTopCore_ringbufPool_controller_3_dmaReqQ_1_D_OUT),
									.FULL_N(bsvTopCore_ringbufPool_controller_3_dmaReqQ_1_FULL_N),
									.EMPTY_N(bsvTopCore_ringbufPool_controller_3_dmaReqQ_1_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_controller_3_dmaRespQ
  FIFO2 #(.width(32'd290),
	  .guarded(1'd1)) bsvTopCore_ringbufPool_controller_3_dmaRespQ(.RST(RST_N),
								       .CLK(CLK),
								       .D_IN(bsvTopCore_ringbufPool_controller_3_dmaRespQ_D_IN),
								       .ENQ(bsvTopCore_ringbufPool_controller_3_dmaRespQ_ENQ),
								       .DEQ(bsvTopCore_ringbufPool_controller_3_dmaRespQ_DEQ),
								       .CLR(bsvTopCore_ringbufPool_controller_3_dmaRespQ_CLR),
								       .D_OUT(bsvTopCore_ringbufPool_controller_3_dmaRespQ_D_OUT),
								       .FULL_N(bsvTopCore_ringbufPool_controller_3_dmaRespQ_FULL_N),
								       .EMPTY_N(bsvTopCore_ringbufPool_controller_3_dmaRespQ_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_controller_3_dmaRespQ_1
  FIFO20 #(.guarded(1'd1)) bsvTopCore_ringbufPool_controller_3_dmaRespQ_1(.RST(RST_N),
									  .CLK(CLK),
									  .ENQ(bsvTopCore_ringbufPool_controller_3_dmaRespQ_1_ENQ),
									  .DEQ(bsvTopCore_ringbufPool_controller_3_dmaRespQ_1_DEQ),
									  .CLR(bsvTopCore_ringbufPool_controller_3_dmaRespQ_1_CLR),
									  .FULL_N(bsvTopCore_ringbufPool_controller_3_dmaRespQ_1_FULL_N),
									  .EMPTY_N(bsvTopCore_ringbufPool_controller_3_dmaRespQ_1_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_t_0_bufQ
  SizedFIFO #(.p1width(32'd256),
	      .p2depth(32'd8),
	      .p3cntr_width(32'd3),
	      .guarded(1'd1)) bsvTopCore_ringbufPool_t_0_bufQ(.RST(RST_N),
							      .CLK(CLK),
							      .D_IN(bsvTopCore_ringbufPool_t_0_bufQ_D_IN),
							      .ENQ(bsvTopCore_ringbufPool_t_0_bufQ_ENQ),
							      .DEQ(bsvTopCore_ringbufPool_t_0_bufQ_DEQ),
							      .CLR(bsvTopCore_ringbufPool_t_0_bufQ_CLR),
							      .D_OUT(bsvTopCore_ringbufPool_t_0_bufQ_D_OUT),
							      .FULL_N(bsvTopCore_ringbufPool_t_0_bufQ_FULL_N),
							      .EMPTY_N(bsvTopCore_ringbufPool_t_0_bufQ_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_t_0_bufQ_1
  SizedFIFO #(.p1width(32'd256),
	      .p2depth(32'd8),
	      .p3cntr_width(32'd3),
	      .guarded(1'd1)) bsvTopCore_ringbufPool_t_0_bufQ_1(.RST(RST_N),
								.CLK(CLK),
								.D_IN(bsvTopCore_ringbufPool_t_0_bufQ_1_D_IN),
								.ENQ(bsvTopCore_ringbufPool_t_0_bufQ_1_ENQ),
								.DEQ(bsvTopCore_ringbufPool_t_0_bufQ_1_DEQ),
								.CLR(bsvTopCore_ringbufPool_t_0_bufQ_1_CLR),
								.D_OUT(bsvTopCore_ringbufPool_t_0_bufQ_1_D_OUT),
								.FULL_N(bsvTopCore_ringbufPool_t_0_bufQ_1_FULL_N),
								.EMPTY_N(bsvTopCore_ringbufPool_t_0_bufQ_1_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_t_1_bufQ
  SizedFIFO #(.p1width(32'd256),
	      .p2depth(32'd8),
	      .p3cntr_width(32'd3),
	      .guarded(1'd1)) bsvTopCore_ringbufPool_t_1_bufQ(.RST(RST_N),
							      .CLK(CLK),
							      .D_IN(bsvTopCore_ringbufPool_t_1_bufQ_D_IN),
							      .ENQ(bsvTopCore_ringbufPool_t_1_bufQ_ENQ),
							      .DEQ(bsvTopCore_ringbufPool_t_1_bufQ_DEQ),
							      .CLR(bsvTopCore_ringbufPool_t_1_bufQ_CLR),
							      .D_OUT(bsvTopCore_ringbufPool_t_1_bufQ_D_OUT),
							      .FULL_N(bsvTopCore_ringbufPool_t_1_bufQ_FULL_N),
							      .EMPTY_N(bsvTopCore_ringbufPool_t_1_bufQ_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_t_1_bufQ_1
  SizedFIFO #(.p1width(32'd256),
	      .p2depth(32'd8),
	      .p3cntr_width(32'd3),
	      .guarded(1'd1)) bsvTopCore_ringbufPool_t_1_bufQ_1(.RST(RST_N),
								.CLK(CLK),
								.D_IN(bsvTopCore_ringbufPool_t_1_bufQ_1_D_IN),
								.ENQ(bsvTopCore_ringbufPool_t_1_bufQ_1_ENQ),
								.DEQ(bsvTopCore_ringbufPool_t_1_bufQ_1_DEQ),
								.CLR(bsvTopCore_ringbufPool_t_1_bufQ_1_CLR),
								.D_OUT(bsvTopCore_ringbufPool_t_1_bufQ_1_D_OUT),
								.FULL_N(bsvTopCore_ringbufPool_t_1_bufQ_1_FULL_N),
								.EMPTY_N(bsvTopCore_ringbufPool_t_1_bufQ_1_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_t_2_bufQ
  SizedFIFO #(.p1width(32'd256),
	      .p2depth(32'd8),
	      .p3cntr_width(32'd3),
	      .guarded(1'd1)) bsvTopCore_ringbufPool_t_2_bufQ(.RST(RST_N),
							      .CLK(CLK),
							      .D_IN(bsvTopCore_ringbufPool_t_2_bufQ_D_IN),
							      .ENQ(bsvTopCore_ringbufPool_t_2_bufQ_ENQ),
							      .DEQ(bsvTopCore_ringbufPool_t_2_bufQ_DEQ),
							      .CLR(bsvTopCore_ringbufPool_t_2_bufQ_CLR),
							      .D_OUT(bsvTopCore_ringbufPool_t_2_bufQ_D_OUT),
							      .FULL_N(bsvTopCore_ringbufPool_t_2_bufQ_FULL_N),
							      .EMPTY_N(bsvTopCore_ringbufPool_t_2_bufQ_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_t_2_bufQ_1
  SizedFIFO #(.p1width(32'd256),
	      .p2depth(32'd8),
	      .p3cntr_width(32'd3),
	      .guarded(1'd1)) bsvTopCore_ringbufPool_t_2_bufQ_1(.RST(RST_N),
								.CLK(CLK),
								.D_IN(bsvTopCore_ringbufPool_t_2_bufQ_1_D_IN),
								.ENQ(bsvTopCore_ringbufPool_t_2_bufQ_1_ENQ),
								.DEQ(bsvTopCore_ringbufPool_t_2_bufQ_1_DEQ),
								.CLR(bsvTopCore_ringbufPool_t_2_bufQ_1_CLR),
								.D_OUT(bsvTopCore_ringbufPool_t_2_bufQ_1_D_OUT),
								.FULL_N(bsvTopCore_ringbufPool_t_2_bufQ_1_FULL_N),
								.EMPTY_N(bsvTopCore_ringbufPool_t_2_bufQ_1_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_t_3_bufQ
  SizedFIFO #(.p1width(32'd256),
	      .p2depth(32'd8),
	      .p3cntr_width(32'd3),
	      .guarded(1'd1)) bsvTopCore_ringbufPool_t_3_bufQ(.RST(RST_N),
							      .CLK(CLK),
							      .D_IN(bsvTopCore_ringbufPool_t_3_bufQ_D_IN),
							      .ENQ(bsvTopCore_ringbufPool_t_3_bufQ_ENQ),
							      .DEQ(bsvTopCore_ringbufPool_t_3_bufQ_DEQ),
							      .CLR(bsvTopCore_ringbufPool_t_3_bufQ_CLR),
							      .D_OUT(),
							      .FULL_N(bsvTopCore_ringbufPool_t_3_bufQ_FULL_N),
							      .EMPTY_N(bsvTopCore_ringbufPool_t_3_bufQ_EMPTY_N));

  // submodule bsvTopCore_ringbufPool_t_3_bufQ_1
  SizedFIFO #(.p1width(32'd256),
	      .p2depth(32'd8),
	      .p3cntr_width(32'd3),
	      .guarded(1'd1)) bsvTopCore_ringbufPool_t_3_bufQ_1(.RST(RST_N),
								.CLK(CLK),
								.D_IN(bsvTopCore_ringbufPool_t_3_bufQ_1_D_IN),
								.ENQ(bsvTopCore_ringbufPool_t_3_bufQ_1_ENQ),
								.DEQ(bsvTopCore_ringbufPool_t_3_bufQ_1_DEQ),
								.CLR(bsvTopCore_ringbufPool_t_3_bufQ_1_CLR),
								.D_OUT(bsvTopCore_ringbufPool_t_3_bufQ_1_D_OUT),
								.FULL_N(),
								.EMPTY_N(bsvTopCore_ringbufPool_t_3_bufQ_1_EMPTY_N));

  // submodule bsvTopCore_tlb_findReqQ
  FIFO2 #(.width(32'd74), .guarded(1'd1)) bsvTopCore_tlb_findReqQ(.RST(RST_N),
								  .CLK(CLK),
								  .D_IN(bsvTopCore_tlb_findReqQ_D_IN),
								  .ENQ(bsvTopCore_tlb_findReqQ_ENQ),
								  .DEQ(bsvTopCore_tlb_findReqQ_DEQ),
								  .CLR(bsvTopCore_tlb_findReqQ_CLR),
								  .D_OUT(bsvTopCore_tlb_findReqQ_D_OUT),
								  .FULL_N(),
								  .EMPTY_N(bsvTopCore_tlb_findReqQ_EMPTY_N));

  // submodule bsvTopCore_tlb_findRespQ
  FIFO2 #(.width(32'd65),
	  .guarded(1'd1)) bsvTopCore_tlb_findRespQ(.RST(RST_N),
						   .CLK(CLK),
						   .D_IN(bsvTopCore_tlb_findRespQ_D_IN),
						   .ENQ(bsvTopCore_tlb_findRespQ_ENQ),
						   .DEQ(bsvTopCore_tlb_findRespQ_DEQ),
						   .CLR(bsvTopCore_tlb_findRespQ_CLR),
						   .D_OUT(),
						   .FULL_N(bsvTopCore_tlb_findRespQ_FULL_N),
						   .EMPTY_N());

  // submodule bsvTopCore_tlb_firstStageCache_bram2Port_memory
  BRAM2 #(.PIPELINED(1'd1),
	  .ADDR_WIDTH(32'd10),
	  .DATA_WIDTH(32'd98),
	  .MEMSIZE(11'd1024)) bsvTopCore_tlb_firstStageCache_bram2Port_memory(.CLKA(CLK),
									      .CLKB(CLK),
									      .ADDRA(bsvTopCore_tlb_firstStageCache_bram2Port_memory_ADDRA),
									      .ADDRB(bsvTopCore_tlb_firstStageCache_bram2Port_memory_ADDRB),
									      .DIA(bsvTopCore_tlb_firstStageCache_bram2Port_memory_DIA),
									      .DIB(bsvTopCore_tlb_firstStageCache_bram2Port_memory_DIB),
									      .WEA(bsvTopCore_tlb_firstStageCache_bram2Port_memory_WEA),
									      .WEB(bsvTopCore_tlb_firstStageCache_bram2Port_memory_WEB),
									      .ENA(bsvTopCore_tlb_firstStageCache_bram2Port_memory_ENA),
									      .ENB(bsvTopCore_tlb_firstStageCache_bram2Port_memory_ENB),
									      .DOA(bsvTopCore_tlb_firstStageCache_bram2Port_memory_DOA),
									      .DOB(bsvTopCore_tlb_firstStageCache_bram2Port_memory_DOB));

  // submodule bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_beforeDeq
  RevertReg #(.width(32'd1),
	      .init(1'd1)) bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_beforeDeq(.CLK(CLK),
												     .D_IN(bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_beforeDeq_D_IN),
												     .EN(bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_beforeDeq_EN),
												     .Q_OUT(bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_beforeDeq_Q_OUT));

  // submodule bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_beforeEnq
  RevertReg #(.width(32'd1),
	      .init(1'd1)) bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_beforeEnq(.CLK(CLK),
												     .D_IN(bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_beforeEnq_D_IN),
												     .EN(bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_beforeEnq_EN),
												     .Q_OUT(bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_beforeEnq_Q_OUT));

  // submodule bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_ff
  SizedFIFO #(.p1width(32'd98),
	      .p2depth(32'd4),
	      .p3cntr_width(32'd2),
	      .guarded(1'd0)) bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_ff(.RST(RST_N),
												 .CLK(CLK),
												 .D_IN(bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_ff_D_IN),
												 .ENQ(bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_ff_ENQ),
												 .DEQ(bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_ff_DEQ),
												 .CLR(bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_ff_CLR),
												 .D_OUT(bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_ff_D_OUT),
												 .FULL_N(bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_ff_FULL_N),
												 .EMPTY_N(bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_ff_EMPTY_N));

  // submodule bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_beforeDeq
  RevertReg #(.width(32'd1),
	      .init(1'd1)) bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_beforeDeq(.CLK(CLK),
												     .D_IN(bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_beforeDeq_D_IN),
												     .EN(bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_beforeDeq_EN),
												     .Q_OUT(bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_beforeDeq_Q_OUT));

  // submodule bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_beforeEnq
  RevertReg #(.width(32'd1),
	      .init(1'd1)) bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_beforeEnq(.CLK(CLK),
												     .D_IN(bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_beforeEnq_D_IN),
												     .EN(bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_beforeEnq_EN),
												     .Q_OUT(bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_beforeEnq_Q_OUT));

  // submodule bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_ff
  SizedFIFO #(.p1width(32'd98),
	      .p2depth(32'd4),
	      .p3cntr_width(32'd2),
	      .guarded(1'd0)) bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_ff(.RST(RST_N),
												 .CLK(CLK),
												 .D_IN(bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_ff_D_IN),
												 .ENQ(bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_ff_ENQ),
												 .DEQ(bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_ff_DEQ),
												 .CLR(bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_ff_CLR),
												 .D_OUT(),
												 .FULL_N(bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_ff_FULL_N),
												 .EMPTY_N());

  // submodule bsvTopCore_tlb_firstStageCache_bramReadReqQ
  FIFO2 #(.width(32'd10),
	  .guarded(1'd1)) bsvTopCore_tlb_firstStageCache_bramReadReqQ(.RST(RST_N),
								      .CLK(CLK),
								      .D_IN(bsvTopCore_tlb_firstStageCache_bramReadReqQ_D_IN),
								      .ENQ(bsvTopCore_tlb_firstStageCache_bramReadReqQ_ENQ),
								      .DEQ(bsvTopCore_tlb_firstStageCache_bramReadReqQ_DEQ),
								      .CLR(bsvTopCore_tlb_firstStageCache_bramReadReqQ_CLR),
								      .D_OUT(bsvTopCore_tlb_firstStageCache_bramReadReqQ_D_OUT),
								      .FULL_N(bsvTopCore_tlb_firstStageCache_bramReadReqQ_FULL_N),
								      .EMPTY_N(bsvTopCore_tlb_firstStageCache_bramReadReqQ_EMPTY_N));

  // submodule bsvTopCore_tlb_firstStageCache_bramReadRespQ
  FIFO2 #(.width(32'd98),
	  .guarded(1'd1)) bsvTopCore_tlb_firstStageCache_bramReadRespQ(.RST(RST_N),
								       .CLK(CLK),
								       .D_IN(bsvTopCore_tlb_firstStageCache_bramReadRespQ_D_IN),
								       .ENQ(bsvTopCore_tlb_firstStageCache_bramReadRespQ_ENQ),
								       .DEQ(bsvTopCore_tlb_firstStageCache_bramReadRespQ_DEQ),
								       .CLR(bsvTopCore_tlb_firstStageCache_bramReadRespQ_CLR),
								       .D_OUT(bsvTopCore_tlb_firstStageCache_bramReadRespQ_D_OUT),
								       .FULL_N(bsvTopCore_tlb_firstStageCache_bramReadRespQ_FULL_N),
								       .EMPTY_N(bsvTopCore_tlb_firstStageCache_bramReadRespQ_EMPTY_N));

  // submodule bsvTopCore_tlb_offsetInputQ
  FIFO2 #(.width(32'd22),
	  .guarded(1'd1)) bsvTopCore_tlb_offsetInputQ(.RST(RST_N),
						      .CLK(CLK),
						      .D_IN(bsvTopCore_tlb_offsetInputQ_D_IN),
						      .ENQ(bsvTopCore_tlb_offsetInputQ_ENQ),
						      .DEQ(bsvTopCore_tlb_offsetInputQ_DEQ),
						      .CLR(bsvTopCore_tlb_offsetInputQ_CLR),
						      .D_OUT(bsvTopCore_tlb_offsetInputQ_D_OUT),
						      .FULL_N(bsvTopCore_tlb_offsetInputQ_FULL_N),
						      .EMPTY_N(bsvTopCore_tlb_offsetInputQ_EMPTY_N));

  // submodule bsvTopCore_tlb_secondStageCache_bram2Port_memory
  BRAM2 #(.PIPELINED(1'd1),
	  .ADDR_WIDTH(32'd17),
	  .DATA_WIDTH(32'd27),
	  .MEMSIZE(18'd131072)) bsvTopCore_tlb_secondStageCache_bram2Port_memory(.CLKA(CLK),
										 .CLKB(CLK),
										 .ADDRA(bsvTopCore_tlb_secondStageCache_bram2Port_memory_ADDRA),
										 .ADDRB(bsvTopCore_tlb_secondStageCache_bram2Port_memory_ADDRB),
										 .DIA(bsvTopCore_tlb_secondStageCache_bram2Port_memory_DIA),
										 .DIB(bsvTopCore_tlb_secondStageCache_bram2Port_memory_DIB),
										 .WEA(bsvTopCore_tlb_secondStageCache_bram2Port_memory_WEA),
										 .WEB(bsvTopCore_tlb_secondStageCache_bram2Port_memory_WEB),
										 .ENA(bsvTopCore_tlb_secondStageCache_bram2Port_memory_ENA),
										 .ENB(bsvTopCore_tlb_secondStageCache_bram2Port_memory_ENB),
										 .DOA(bsvTopCore_tlb_secondStageCache_bram2Port_memory_DOA),
										 .DOB(bsvTopCore_tlb_secondStageCache_bram2Port_memory_DOB));

  // submodule bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_beforeDeq
  RevertReg #(.width(32'd1),
	      .init(1'd1)) bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_beforeDeq(.CLK(CLK),
												      .D_IN(bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_beforeDeq_D_IN),
												      .EN(bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_beforeDeq_EN),
												      .Q_OUT(bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_beforeDeq_Q_OUT));

  // submodule bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_beforeEnq
  RevertReg #(.width(32'd1),
	      .init(1'd1)) bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_beforeEnq(.CLK(CLK),
												      .D_IN(bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_beforeEnq_D_IN),
												      .EN(bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_beforeEnq_EN),
												      .Q_OUT(bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_beforeEnq_Q_OUT));

  // submodule bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_ff
  SizedFIFO #(.p1width(32'd27),
	      .p2depth(32'd4),
	      .p3cntr_width(32'd2),
	      .guarded(1'd0)) bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_ff(.RST(RST_N),
												  .CLK(CLK),
												  .D_IN(bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_ff_D_IN),
												  .ENQ(bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_ff_ENQ),
												  .DEQ(bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_ff_DEQ),
												  .CLR(bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_ff_CLR),
												  .D_OUT(bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_ff_D_OUT),
												  .FULL_N(bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_ff_FULL_N),
												  .EMPTY_N(bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_ff_EMPTY_N));

  // submodule bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_beforeDeq
  RevertReg #(.width(32'd1),
	      .init(1'd1)) bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_beforeDeq(.CLK(CLK),
												      .D_IN(bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_beforeDeq_D_IN),
												      .EN(bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_beforeDeq_EN),
												      .Q_OUT(bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_beforeDeq_Q_OUT));

  // submodule bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_beforeEnq
  RevertReg #(.width(32'd1),
	      .init(1'd1)) bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_beforeEnq(.CLK(CLK),
												      .D_IN(bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_beforeEnq_D_IN),
												      .EN(bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_beforeEnq_EN),
												      .Q_OUT(bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_beforeEnq_Q_OUT));

  // submodule bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_ff
  SizedFIFO #(.p1width(32'd27),
	      .p2depth(32'd4),
	      .p3cntr_width(32'd2),
	      .guarded(1'd0)) bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_ff(.RST(RST_N),
												  .CLK(CLK),
												  .D_IN(bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_ff_D_IN),
												  .ENQ(bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_ff_ENQ),
												  .DEQ(bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_ff_DEQ),
												  .CLR(bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_ff_CLR),
												  .D_OUT(),
												  .FULL_N(bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_ff_FULL_N),
												  .EMPTY_N());

  // submodule bsvTopCore_tlb_secondStageCache_bramReadReqQ
  FIFO2 #(.width(32'd17),
	  .guarded(1'd1)) bsvTopCore_tlb_secondStageCache_bramReadReqQ(.RST(RST_N),
								       .CLK(CLK),
								       .D_IN(bsvTopCore_tlb_secondStageCache_bramReadReqQ_D_IN),
								       .ENQ(bsvTopCore_tlb_secondStageCache_bramReadReqQ_ENQ),
								       .DEQ(bsvTopCore_tlb_secondStageCache_bramReadReqQ_DEQ),
								       .CLR(bsvTopCore_tlb_secondStageCache_bramReadReqQ_CLR),
								       .D_OUT(bsvTopCore_tlb_secondStageCache_bramReadReqQ_D_OUT),
								       .FULL_N(bsvTopCore_tlb_secondStageCache_bramReadReqQ_FULL_N),
								       .EMPTY_N(bsvTopCore_tlb_secondStageCache_bramReadReqQ_EMPTY_N));

  // submodule bsvTopCore_tlb_secondStageCache_bramReadRespQ
  FIFO2 #(.width(32'd27),
	  .guarded(1'd1)) bsvTopCore_tlb_secondStageCache_bramReadRespQ(.RST(RST_N),
									.CLK(CLK),
									.D_IN(bsvTopCore_tlb_secondStageCache_bramReadRespQ_D_IN),
									.ENQ(bsvTopCore_tlb_secondStageCache_bramReadRespQ_ENQ),
									.DEQ(bsvTopCore_tlb_secondStageCache_bramReadRespQ_DEQ),
									.CLR(bsvTopCore_tlb_secondStageCache_bramReadRespQ_CLR),
									.D_OUT(bsvTopCore_tlb_secondStageCache_bramReadRespQ_D_OUT),
									.FULL_N(bsvTopCore_tlb_secondStageCache_bramReadRespQ_FULL_N),
									.EMPTY_N(bsvTopCore_tlb_secondStageCache_bramReadRespQ_EMPTY_N));

  // submodule bsvTopCore_tlb_vaInputQ
  FIFO2 #(.width(32'd64), .guarded(1'd1)) bsvTopCore_tlb_vaInputQ(.RST(RST_N),
								  .CLK(CLK),
								  .D_IN(bsvTopCore_tlb_vaInputQ_D_IN),
								  .ENQ(bsvTopCore_tlb_vaInputQ_ENQ),
								  .DEQ(bsvTopCore_tlb_vaInputQ_DEQ),
								  .CLR(bsvTopCore_tlb_vaInputQ_CLR),
								  .D_OUT(bsvTopCore_tlb_vaInputQ_D_OUT),
								  .FULL_N(bsvTopCore_tlb_vaInputQ_FULL_N),
								  .EMPTY_N(bsvTopCore_tlb_vaInputQ_EMPTY_N));

  // submodule bsvTopCore_workAndCompleteQController_rcqRingBufQ
  FIFO2 #(.width(32'd256),
	  .guarded(1'd1)) bsvTopCore_workAndCompleteQController_rcqRingBufQ(.RST(RST_N),
									    .CLK(CLK),
									    .D_IN(bsvTopCore_workAndCompleteQController_rcqRingBufQ_D_IN),
									    .ENQ(bsvTopCore_workAndCompleteQController_rcqRingBufQ_ENQ),
									    .DEQ(bsvTopCore_workAndCompleteQController_rcqRingBufQ_DEQ),
									    .CLR(bsvTopCore_workAndCompleteQController_rcqRingBufQ_CLR),
									    .D_OUT(bsvTopCore_workAndCompleteQController_rcqRingBufQ_D_OUT),
									    .FULL_N(bsvTopCore_workAndCompleteQController_rcqRingBufQ_FULL_N),
									    .EMPTY_N(bsvTopCore_workAndCompleteQController_rcqRingBufQ_EMPTY_N));

  // submodule bsvTopCore_workAndCompleteQController_recvReqQ
  FIFO2 #(.width(32'd216),
	  .guarded(1'd1)) bsvTopCore_workAndCompleteQController_recvReqQ(.RST(RST_N),
									 .CLK(CLK),
									 .D_IN(bsvTopCore_workAndCompleteQController_recvReqQ_D_IN),
									 .ENQ(bsvTopCore_workAndCompleteQController_recvReqQ_ENQ),
									 .DEQ(bsvTopCore_workAndCompleteQController_recvReqQ_DEQ),
									 .CLR(bsvTopCore_workAndCompleteQController_recvReqQ_CLR),
									 .D_OUT(bsvTopCore_workAndCompleteQController_recvReqQ_D_OUT),
									 .FULL_N(bsvTopCore_workAndCompleteQController_recvReqQ_FULL_N),
									 .EMPTY_N(bsvTopCore_workAndCompleteQController_recvReqQ_EMPTY_N));

  // submodule bsvTopCore_workAndCompleteQController_rqRingBufQ
  FIFO2 #(.width(32'd256),
	  .guarded(1'd1)) bsvTopCore_workAndCompleteQController_rqRingBufQ(.RST(RST_N),
									   .CLK(CLK),
									   .D_IN(bsvTopCore_workAndCompleteQController_rqRingBufQ_D_IN),
									   .ENQ(bsvTopCore_workAndCompleteQController_rqRingBufQ_ENQ),
									   .DEQ(bsvTopCore_workAndCompleteQController_rqRingBufQ_DEQ),
									   .CLR(bsvTopCore_workAndCompleteQController_rqRingBufQ_CLR),
									   .D_OUT(bsvTopCore_workAndCompleteQController_rqRingBufQ_D_OUT),
									   .FULL_N(bsvTopCore_workAndCompleteQController_rqRingBufQ_FULL_N),
									   .EMPTY_N(bsvTopCore_workAndCompleteQController_rqRingBufQ_EMPTY_N));

  // submodule bsvTopCore_workAndCompleteQController_scqRingBufQ
  FIFO2 #(.width(32'd256),
	  .guarded(1'd1)) bsvTopCore_workAndCompleteQController_scqRingBufQ(.RST(RST_N),
									    .CLK(CLK),
									    .D_IN(bsvTopCore_workAndCompleteQController_scqRingBufQ_D_IN),
									    .ENQ(bsvTopCore_workAndCompleteQController_scqRingBufQ_ENQ),
									    .DEQ(bsvTopCore_workAndCompleteQController_scqRingBufQ_DEQ),
									    .CLR(bsvTopCore_workAndCompleteQController_scqRingBufQ_CLR),
									    .D_OUT(bsvTopCore_workAndCompleteQController_scqRingBufQ_D_OUT),
									    .FULL_N(bsvTopCore_workAndCompleteQController_scqRingBufQ_FULL_N),
									    .EMPTY_N(bsvTopCore_workAndCompleteQController_scqRingBufQ_EMPTY_N));

  // submodule bsvTopCore_workAndCompleteQController_sqDescReadProxy_ringbufQ
  FIFO2 #(.width(32'd256),
	  .guarded(1'd1)) bsvTopCore_workAndCompleteQController_sqDescReadProxy_ringbufQ(.RST(RST_N),
											 .CLK(CLK),
											 .D_IN(bsvTopCore_workAndCompleteQController_sqDescReadProxy_ringbufQ_D_IN),
											 .ENQ(bsvTopCore_workAndCompleteQController_sqDescReadProxy_ringbufQ_ENQ),
											 .DEQ(bsvTopCore_workAndCompleteQController_sqDescReadProxy_ringbufQ_DEQ),
											 .CLR(bsvTopCore_workAndCompleteQController_sqDescReadProxy_ringbufQ_CLR),
											 .D_OUT(bsvTopCore_workAndCompleteQController_sqDescReadProxy_ringbufQ_D_OUT),
											 .FULL_N(bsvTopCore_workAndCompleteQController_sqDescReadProxy_ringbufQ_FULL_N),
											 .EMPTY_N(bsvTopCore_workAndCompleteQController_sqDescReadProxy_ringbufQ_EMPTY_N));

  // submodule bsvTopCore_workAndCompleteQController_sqRingBufQ
  FIFO2 #(.width(32'd256),
	  .guarded(1'd1)) bsvTopCore_workAndCompleteQController_sqRingBufQ(.RST(RST_N),
									   .CLK(CLK),
									   .D_IN(bsvTopCore_workAndCompleteQController_sqRingBufQ_D_IN),
									   .ENQ(bsvTopCore_workAndCompleteQController_sqRingBufQ_ENQ),
									   .DEQ(bsvTopCore_workAndCompleteQController_sqRingBufQ_DEQ),
									   .CLR(bsvTopCore_workAndCompleteQController_sqRingBufQ_CLR),
									   .D_OUT(bsvTopCore_workAndCompleteQController_sqRingBufQ_D_OUT),
									   .FULL_N(bsvTopCore_workAndCompleteQController_sqRingBufQ_FULL_N),
									   .EMPTY_N(bsvTopCore_workAndCompleteQController_sqRingBufQ_EMPTY_N));

  // submodule bsvTopCore_workAndCompleteQController_workCompRqQ
  FIFO2 #(.width(32'd222),
	  .guarded(1'd1)) bsvTopCore_workAndCompleteQController_workCompRqQ(.RST(RST_N),
									    .CLK(CLK),
									    .D_IN(bsvTopCore_workAndCompleteQController_workCompRqQ_D_IN),
									    .ENQ(bsvTopCore_workAndCompleteQController_workCompRqQ_ENQ),
									    .DEQ(bsvTopCore_workAndCompleteQController_workCompRqQ_DEQ),
									    .CLR(bsvTopCore_workAndCompleteQController_workCompRqQ_CLR),
									    .D_OUT(bsvTopCore_workAndCompleteQController_workCompRqQ_D_OUT),
									    .FULL_N(bsvTopCore_workAndCompleteQController_workCompRqQ_FULL_N),
									    .EMPTY_N(bsvTopCore_workAndCompleteQController_workCompRqQ_EMPTY_N));

  // submodule bsvTopCore_workAndCompleteQController_workCompSqQ
  FIFO2 #(.width(32'd222),
	  .guarded(1'd1)) bsvTopCore_workAndCompleteQController_workCompSqQ(.RST(RST_N),
									    .CLK(CLK),
									    .D_IN(bsvTopCore_workAndCompleteQController_workCompSqQ_D_IN),
									    .ENQ(bsvTopCore_workAndCompleteQController_workCompSqQ_ENQ),
									    .DEQ(bsvTopCore_workAndCompleteQController_workCompSqQ_DEQ),
									    .CLR(bsvTopCore_workAndCompleteQController_workCompSqQ_CLR),
									    .D_OUT(bsvTopCore_workAndCompleteQController_workCompSqQ_D_OUT),
									    .FULL_N(bsvTopCore_workAndCompleteQController_workCompSqQ_FULL_N),
									    .EMPTY_N(bsvTopCore_workAndCompleteQController_workCompSqQ_EMPTY_N));

  // submodule bsvTopCore_workAndCompleteQController_workReqQ
  FIFO2 #(.width(32'd601),
	  .guarded(1'd1)) bsvTopCore_workAndCompleteQController_workReqQ(.RST(RST_N),
									 .CLK(CLK),
									 .D_IN(bsvTopCore_workAndCompleteQController_workReqQ_D_IN),
									 .ENQ(bsvTopCore_workAndCompleteQController_workReqQ_ENQ),
									 .DEQ(bsvTopCore_workAndCompleteQController_workReqQ_DEQ),
									 .CLR(bsvTopCore_workAndCompleteQController_workReqQ_CLR),
									 .D_OUT(bsvTopCore_workAndCompleteQController_workReqQ_D_OUT),
									 .FULL_N(bsvTopCore_workAndCompleteQController_workReqQ_FULL_N),
									 .EMPTY_N(bsvTopCore_workAndCompleteQController_workReqQ_EMPTY_N));

  // submodule bsvTopCore_xdmaGearbox_c2hReqGearbox_dCombinedReset
  ResetEither bsvTopCore_xdmaGearbox_c2hReqGearbox_dCombinedReset(.A_RST(RST_N_slowReset),
								  .B_RST(bsvTopCore_xdmaGearbox_c2hReqGearbox_dCrossedsReset_OUT_RST),
								  .RST_OUT(bsvTopCore_xdmaGearbox_c2hReqGearbox_dCombinedReset_RST_OUT));

  // submodule bsvTopCore_xdmaGearbox_c2hReqGearbox_dCrossedsReset
  SyncReset0 bsvTopCore_xdmaGearbox_c2hReqGearbox_dCrossedsReset(.IN_RST(RST_N),
								 .OUT_RST(bsvTopCore_xdmaGearbox_c2hReqGearbox_dCrossedsReset_OUT_RST));

  // submodule bsvTopCore_xdmaGearbox_c2hReqGearbox_sCombinedReset
  ResetEither bsvTopCore_xdmaGearbox_c2hReqGearbox_sCombinedReset(.A_RST(RST_N),
								  .B_RST(bsvTopCore_xdmaGearbox_c2hReqGearbox_sCrosseddReset_OUT_RST),
								  .RST_OUT(bsvTopCore_xdmaGearbox_c2hReqGearbox_sCombinedReset_RST_OUT));

  // submodule bsvTopCore_xdmaGearbox_c2hReqGearbox_sCrosseddReset
  SyncReset0 bsvTopCore_xdmaGearbox_c2hReqGearbox_sCrosseddReset(.IN_RST(RST_N_slowReset),
								 .OUT_RST(bsvTopCore_xdmaGearbox_c2hReqGearbox_sCrosseddReset_OUT_RST));

  // submodule bsvTopCore_xdmaGearbox_c2hReqQ
  FIFO2 #(.width(32'd374),
	  .guarded(1'd1)) bsvTopCore_xdmaGearbox_c2hReqQ(.RST(RST_N),
							 .CLK(CLK),
							 .D_IN(bsvTopCore_xdmaGearbox_c2hReqQ_D_IN),
							 .ENQ(bsvTopCore_xdmaGearbox_c2hReqQ_ENQ),
							 .DEQ(bsvTopCore_xdmaGearbox_c2hReqQ_DEQ),
							 .CLR(bsvTopCore_xdmaGearbox_c2hReqQ_CLR),
							 .D_OUT(bsvTopCore_xdmaGearbox_c2hReqQ_D_OUT),
							 .FULL_N(bsvTopCore_xdmaGearbox_c2hReqQ_FULL_N),
							 .EMPTY_N(bsvTopCore_xdmaGearbox_c2hReqQ_EMPTY_N));

  // submodule bsvTopCore_xdmaGearbox_c2hStreamRespQ_dCombinedReset
  ResetEither bsvTopCore_xdmaGearbox_c2hStreamRespQ_dCombinedReset(.A_RST(RST_N),
								   .B_RST(bsvTopCore_xdmaGearbox_c2hStreamRespQ_dCrossedsReset_OUT_RST),
								   .RST_OUT(bsvTopCore_xdmaGearbox_c2hStreamRespQ_dCombinedReset_RST_OUT));

  // submodule bsvTopCore_xdmaGearbox_c2hStreamRespQ_dCrossedsReset
  SyncReset0 bsvTopCore_xdmaGearbox_c2hStreamRespQ_dCrossedsReset(.IN_RST(RST_N_slowReset),
								  .OUT_RST(bsvTopCore_xdmaGearbox_c2hStreamRespQ_dCrossedsReset_OUT_RST));

  // submodule bsvTopCore_xdmaGearbox_c2hStreamRespQ_dInReset
  ResetToBool bsvTopCore_xdmaGearbox_c2hStreamRespQ_dInReset(.RST(bsvTopCore_xdmaGearbox_c2hStreamRespQ_dCombinedReset_RST_OUT),
							     .VAL(bsvTopCore_xdmaGearbox_c2hStreamRespQ_dInReset_VAL));

  // submodule bsvTopCore_xdmaGearbox_c2hStreamRespQ_sCombinedReset
  ResetEither bsvTopCore_xdmaGearbox_c2hStreamRespQ_sCombinedReset(.A_RST(RST_N_slowReset),
								   .B_RST(bsvTopCore_xdmaGearbox_c2hStreamRespQ_sCrosseddReset_OUT_RST),
								   .RST_OUT(bsvTopCore_xdmaGearbox_c2hStreamRespQ_sCombinedReset_RST_OUT));

  // submodule bsvTopCore_xdmaGearbox_c2hStreamRespQ_sCrosseddReset
  SyncReset0 bsvTopCore_xdmaGearbox_c2hStreamRespQ_sCrosseddReset(.IN_RST(RST_N),
								  .OUT_RST(bsvTopCore_xdmaGearbox_c2hStreamRespQ_sCrosseddReset_OUT_RST));

  // submodule bsvTopCore_xdmaGearbox_c2hStreamRespQ_sInReset
  ResetToBool bsvTopCore_xdmaGearbox_c2hStreamRespQ_sInReset(.RST(bsvTopCore_xdmaGearbox_c2hStreamRespQ_sCombinedReset_RST_OUT),
							     .VAL(bsvTopCore_xdmaGearbox_c2hStreamRespQ_sInReset_VAL));

  // submodule bsvTopCore_xdmaGearbox_divClk
  ClockDiv #(.width(32'd1),
	     .lower(32'd0),
	     .upper(32'd1),
	     .offset(32'd0)) bsvTopCore_xdmaGearbox_divClk(.CLK_IN(CLK),
							   .RST(RST_N),
							   .PREEDGE(bsvTopCore_xdmaGearbox_divClk_PREEDGE),
							   .CLK_OUT());

  // submodule bsvTopCore_xdmaGearbox_h2cRespGearbox_dCombinedReset
  ResetEither bsvTopCore_xdmaGearbox_h2cRespGearbox_dCombinedReset(.A_RST(RST_N),
								   .B_RST(bsvTopCore_xdmaGearbox_h2cRespGearbox_dCrossedsReset_OUT_RST),
								   .RST_OUT(bsvTopCore_xdmaGearbox_h2cRespGearbox_dCombinedReset_RST_OUT));

  // submodule bsvTopCore_xdmaGearbox_h2cRespGearbox_dCrossedsReset
  SyncReset0 bsvTopCore_xdmaGearbox_h2cRespGearbox_dCrossedsReset(.IN_RST(RST_N_slowReset),
								  .OUT_RST(bsvTopCore_xdmaGearbox_h2cRespGearbox_dCrossedsReset_OUT_RST));

  // submodule bsvTopCore_xdmaGearbox_h2cRespGearbox_sCombinedReset
  ResetEither bsvTopCore_xdmaGearbox_h2cRespGearbox_sCombinedReset(.A_RST(RST_N_slowReset),
								   .B_RST(bsvTopCore_xdmaGearbox_h2cRespGearbox_sCrosseddReset_OUT_RST),
								   .RST_OUT(bsvTopCore_xdmaGearbox_h2cRespGearbox_sCombinedReset_RST_OUT));

  // submodule bsvTopCore_xdmaGearbox_h2cRespGearbox_sCrosseddReset
  SyncReset0 bsvTopCore_xdmaGearbox_h2cRespGearbox_sCrosseddReset(.IN_RST(RST_N),
								  .OUT_RST(bsvTopCore_xdmaGearbox_h2cRespGearbox_sCrosseddReset_OUT_RST));

  // submodule bsvTopCore_xdmaGearbox_h2cRespQ
  FIFO2 #(.width(32'd290),
	  .guarded(1'd1)) bsvTopCore_xdmaGearbox_h2cRespQ(.RST(RST_N),
							  .CLK(CLK),
							  .D_IN(bsvTopCore_xdmaGearbox_h2cRespQ_D_IN),
							  .ENQ(bsvTopCore_xdmaGearbox_h2cRespQ_ENQ),
							  .DEQ(bsvTopCore_xdmaGearbox_h2cRespQ_DEQ),
							  .CLR(bsvTopCore_xdmaGearbox_h2cRespQ_CLR),
							  .D_OUT(bsvTopCore_xdmaGearbox_h2cRespQ_D_OUT),
							  .FULL_N(bsvTopCore_xdmaGearbox_h2cRespQ_FULL_N),
							  .EMPTY_N(bsvTopCore_xdmaGearbox_h2cRespQ_EMPTY_N));

  // submodule bsvTopCore_xdmaGearbox_h2cStreamReqQ_dCombinedReset
  ResetEither bsvTopCore_xdmaGearbox_h2cStreamReqQ_dCombinedReset(.A_RST(RST_N_slowReset),
								  .B_RST(bsvTopCore_xdmaGearbox_h2cStreamReqQ_dCrossedsReset_OUT_RST),
								  .RST_OUT(bsvTopCore_xdmaGearbox_h2cStreamReqQ_dCombinedReset_RST_OUT));

  // submodule bsvTopCore_xdmaGearbox_h2cStreamReqQ_dCrossedsReset
  SyncReset0 bsvTopCore_xdmaGearbox_h2cStreamReqQ_dCrossedsReset(.IN_RST(RST_N),
								 .OUT_RST(bsvTopCore_xdmaGearbox_h2cStreamReqQ_dCrossedsReset_OUT_RST));

  // submodule bsvTopCore_xdmaGearbox_h2cStreamReqQ_dInReset
  ResetToBool bsvTopCore_xdmaGearbox_h2cStreamReqQ_dInReset(.RST(bsvTopCore_xdmaGearbox_h2cStreamReqQ_dCombinedReset_RST_OUT),
							    .VAL(bsvTopCore_xdmaGearbox_h2cStreamReqQ_dInReset_VAL));

  // submodule bsvTopCore_xdmaGearbox_h2cStreamReqQ_sCombinedReset
  ResetEither bsvTopCore_xdmaGearbox_h2cStreamReqQ_sCombinedReset(.A_RST(RST_N),
								  .B_RST(bsvTopCore_xdmaGearbox_h2cStreamReqQ_sCrosseddReset_OUT_RST),
								  .RST_OUT(bsvTopCore_xdmaGearbox_h2cStreamReqQ_sCombinedReset_RST_OUT));

  // submodule bsvTopCore_xdmaGearbox_h2cStreamReqQ_sCrosseddReset
  SyncReset0 bsvTopCore_xdmaGearbox_h2cStreamReqQ_sCrosseddReset(.IN_RST(RST_N_slowReset),
								 .OUT_RST(bsvTopCore_xdmaGearbox_h2cStreamReqQ_sCrosseddReset_OUT_RST));

  // submodule bsvTopCore_xdmaGearbox_h2cStreamReqQ_sInReset
  ResetToBool bsvTopCore_xdmaGearbox_h2cStreamReqQ_sInReset(.RST(bsvTopCore_xdmaGearbox_h2cStreamReqQ_sCombinedReset_RST_OUT),
							    .VAL(bsvTopCore_xdmaGearbox_h2cStreamReqQ_sInReset_VAL));

  // submodule bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ
  FIFO2 #(.width(32'd86),
	  .guarded(1'd1)) bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ(.RST(RST_N),
												 .CLK(CLK),
												 .D_IN(bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_D_IN),
												 .ENQ(bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_ENQ),
												 .DEQ(bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_DEQ),
												 .CLR(bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_CLR),
												 .D_OUT(bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_D_OUT),
												 .FULL_N(bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_FULL_N),
												 .EMPTY_N(bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_EMPTY_N));

  // submodule bsvTopCore_xdmaReadClt_inputReqWithIdxVec_0
  FIFO2 #(.width(32'd86),
	  .guarded(1'd1)) bsvTopCore_xdmaReadClt_inputReqWithIdxVec_0(.RST(RST_N),
								      .CLK(CLK),
								      .D_IN(bsvTopCore_xdmaReadClt_inputReqWithIdxVec_0_D_IN),
								      .ENQ(bsvTopCore_xdmaReadClt_inputReqWithIdxVec_0_ENQ),
								      .DEQ(bsvTopCore_xdmaReadClt_inputReqWithIdxVec_0_DEQ),
								      .CLR(bsvTopCore_xdmaReadClt_inputReqWithIdxVec_0_CLR),
								      .D_OUT(bsvTopCore_xdmaReadClt_inputReqWithIdxVec_0_D_OUT),
								      .FULL_N(bsvTopCore_xdmaReadClt_inputReqWithIdxVec_0_FULL_N),
								      .EMPTY_N(bsvTopCore_xdmaReadClt_inputReqWithIdxVec_0_EMPTY_N));

  // submodule bsvTopCore_xdmaReadClt_inputReqWithIdxVec_1
  FIFO2 #(.width(32'd86),
	  .guarded(1'd1)) bsvTopCore_xdmaReadClt_inputReqWithIdxVec_1(.RST(RST_N),
								      .CLK(CLK),
								      .D_IN(bsvTopCore_xdmaReadClt_inputReqWithIdxVec_1_D_IN),
								      .ENQ(bsvTopCore_xdmaReadClt_inputReqWithIdxVec_1_ENQ),
								      .DEQ(bsvTopCore_xdmaReadClt_inputReqWithIdxVec_1_DEQ),
								      .CLR(bsvTopCore_xdmaReadClt_inputReqWithIdxVec_1_CLR),
								      .D_OUT(bsvTopCore_xdmaReadClt_inputReqWithIdxVec_1_D_OUT),
								      .FULL_N(bsvTopCore_xdmaReadClt_inputReqWithIdxVec_1_FULL_N),
								      .EMPTY_N(bsvTopCore_xdmaReadClt_inputReqWithIdxVec_1_EMPTY_N));

  // submodule bsvTopCore_xdmaReadClt_inputReqWithIdxVec_2
  FIFO2 #(.width(32'd86),
	  .guarded(1'd1)) bsvTopCore_xdmaReadClt_inputReqWithIdxVec_2(.RST(RST_N),
								      .CLK(CLK),
								      .D_IN(bsvTopCore_xdmaReadClt_inputReqWithIdxVec_2_D_IN),
								      .ENQ(bsvTopCore_xdmaReadClt_inputReqWithIdxVec_2_ENQ),
								      .DEQ(bsvTopCore_xdmaReadClt_inputReqWithIdxVec_2_DEQ),
								      .CLR(bsvTopCore_xdmaReadClt_inputReqWithIdxVec_2_CLR),
								      .D_OUT(bsvTopCore_xdmaReadClt_inputReqWithIdxVec_2_D_OUT),
								      .FULL_N(bsvTopCore_xdmaReadClt_inputReqWithIdxVec_2_FULL_N),
								      .EMPTY_N(bsvTopCore_xdmaReadClt_inputReqWithIdxVec_2_EMPTY_N));

  // submodule bsvTopCore_xdmaReadClt_inputReqWithIdxVec_3
  FIFO2 #(.width(32'd86),
	  .guarded(1'd1)) bsvTopCore_xdmaReadClt_inputReqWithIdxVec_3(.RST(RST_N),
								      .CLK(CLK),
								      .D_IN(bsvTopCore_xdmaReadClt_inputReqWithIdxVec_3_D_IN),
								      .ENQ(bsvTopCore_xdmaReadClt_inputReqWithIdxVec_3_ENQ),
								      .DEQ(bsvTopCore_xdmaReadClt_inputReqWithIdxVec_3_DEQ),
								      .CLR(bsvTopCore_xdmaReadClt_inputReqWithIdxVec_3_CLR),
								      .D_OUT(bsvTopCore_xdmaReadClt_inputReqWithIdxVec_3_D_OUT),
								      .FULL_N(bsvTopCore_xdmaReadClt_inputReqWithIdxVec_3_FULL_N),
								      .EMPTY_N(bsvTopCore_xdmaReadClt_inputReqWithIdxVec_3_EMPTY_N));

  // submodule bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_pipeOutQ
  FIFO2 #(.width(32'd86),
	  .guarded(1'd1)) bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_pipeOutQ(.RST(RST_N),
											 .CLK(CLK),
											 .D_IN(bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_IN),
											 .ENQ(bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_ENQ),
											 .DEQ(bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_DEQ),
											 .CLR(bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_CLR),
											 .D_OUT(bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_OUT),
											 .FULL_N(bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_FULL_N),
											 .EMPTY_N(bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_EMPTY_N));

  // submodule bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_pipeOutQ
  FIFO2 #(.width(32'd86),
	  .guarded(1'd1)) bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_pipeOutQ(.RST(RST_N),
											 .CLK(CLK),
											 .D_IN(bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_pipeOutQ_D_IN),
											 .ENQ(bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_pipeOutQ_ENQ),
											 .DEQ(bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_pipeOutQ_DEQ),
											 .CLR(bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_pipeOutQ_CLR),
											 .D_OUT(bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_pipeOutQ_D_OUT),
											 .FULL_N(bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_pipeOutQ_FULL_N),
											 .EMPTY_N(bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_pipeOutQ_EMPTY_N));

  // submodule bsvTopCore_xdmaReadClt_preGrantIdxQ
  FIFO2 #(.width(32'd2),
	  .guarded(1'd1)) bsvTopCore_xdmaReadClt_preGrantIdxQ(.RST(RST_N),
							      .CLK(CLK),
							      .D_IN(bsvTopCore_xdmaReadClt_preGrantIdxQ_D_IN),
							      .ENQ(bsvTopCore_xdmaReadClt_preGrantIdxQ_ENQ),
							      .DEQ(bsvTopCore_xdmaReadClt_preGrantIdxQ_DEQ),
							      .CLR(bsvTopCore_xdmaReadClt_preGrantIdxQ_CLR),
							      .D_OUT(bsvTopCore_xdmaReadClt_preGrantIdxQ_D_OUT),
							      .FULL_N(bsvTopCore_xdmaReadClt_preGrantIdxQ_FULL_N),
							      .EMPTY_N(bsvTopCore_xdmaReadClt_preGrantIdxQ_EMPTY_N));

  // submodule bsvTopCore_xdmaReadClt_reqQ
  FIFO2 #(.width(32'd84),
	  .guarded(1'd1)) bsvTopCore_xdmaReadClt_reqQ(.RST(RST_N),
						      .CLK(CLK),
						      .D_IN(bsvTopCore_xdmaReadClt_reqQ_D_IN),
						      .ENQ(bsvTopCore_xdmaReadClt_reqQ_ENQ),
						      .DEQ(bsvTopCore_xdmaReadClt_reqQ_DEQ),
						      .CLR(bsvTopCore_xdmaReadClt_reqQ_CLR),
						      .D_OUT(bsvTopCore_xdmaReadClt_reqQ_D_OUT),
						      .FULL_N(bsvTopCore_xdmaReadClt_reqQ_FULL_N),
						      .EMPTY_N(bsvTopCore_xdmaReadClt_reqQ_EMPTY_N));

  // submodule bsvTopCore_xdmaReadClt_respQ
  FIFO2 #(.width(32'd290),
	  .guarded(1'd1)) bsvTopCore_xdmaReadClt_respQ(.RST(RST_N),
						       .CLK(CLK),
						       .D_IN(bsvTopCore_xdmaReadClt_respQ_D_IN),
						       .ENQ(bsvTopCore_xdmaReadClt_respQ_ENQ),
						       .DEQ(bsvTopCore_xdmaReadClt_respQ_DEQ),
						       .CLR(bsvTopCore_xdmaReadClt_respQ_CLR),
						       .D_OUT(bsvTopCore_xdmaReadClt_respQ_D_OUT),
						       .FULL_N(bsvTopCore_xdmaReadClt_respQ_FULL_N),
						       .EMPTY_N(bsvTopCore_xdmaReadClt_respQ_EMPTY_N));

  // submodule bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0
  FIFO2 #(.width(32'd375),
	  .guarded(1'd1)) bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0(.RST(RST_N),
								       .CLK(CLK),
								       .D_IN(bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0_D_IN),
								       .ENQ(bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0_ENQ),
								       .DEQ(bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0_DEQ),
								       .CLR(bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0_CLR),
								       .D_OUT(bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0_D_OUT),
								       .FULL_N(bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0_FULL_N),
								       .EMPTY_N(bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0_EMPTY_N));

  // submodule bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1
  FIFO2 #(.width(32'd375),
	  .guarded(1'd1)) bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1(.RST(RST_N),
								       .CLK(CLK),
								       .D_IN(bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1_D_IN),
								       .ENQ(bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1_ENQ),
								       .DEQ(bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1_DEQ),
								       .CLR(bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1_CLR),
								       .D_OUT(bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1_D_OUT),
								       .FULL_N(bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1_FULL_N),
								       .EMPTY_N(bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1_EMPTY_N));

  // submodule bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_pipeOutQ
  FIFO2 #(.width(32'd375),
	  .guarded(1'd1)) bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_pipeOutQ(.RST(RST_N),
											  .CLK(CLK),
											  .D_IN(bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_IN),
											  .ENQ(bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_ENQ),
											  .DEQ(bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_DEQ),
											  .CLR(bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_CLR),
											  .D_OUT(bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_OUT),
											  .FULL_N(bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_FULL_N),
											  .EMPTY_N(bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_EMPTY_N));

  // submodule bsvTopCore_xdmaWriteClt_preGrantIdxQ
  FIFO2 #(.width(32'd1),
	  .guarded(1'd1)) bsvTopCore_xdmaWriteClt_preGrantIdxQ(.RST(RST_N),
							       .CLK(CLK),
							       .D_IN(bsvTopCore_xdmaWriteClt_preGrantIdxQ_D_IN),
							       .ENQ(bsvTopCore_xdmaWriteClt_preGrantIdxQ_ENQ),
							       .DEQ(bsvTopCore_xdmaWriteClt_preGrantIdxQ_DEQ),
							       .CLR(bsvTopCore_xdmaWriteClt_preGrantIdxQ_CLR),
							       .D_OUT(bsvTopCore_xdmaWriteClt_preGrantIdxQ_D_OUT),
							       .FULL_N(bsvTopCore_xdmaWriteClt_preGrantIdxQ_FULL_N),
							       .EMPTY_N(bsvTopCore_xdmaWriteClt_preGrantIdxQ_EMPTY_N));

  // submodule bsvTopCore_xdmaWriteClt_reqQ
  FIFO2 #(.width(32'd374),
	  .guarded(1'd1)) bsvTopCore_xdmaWriteClt_reqQ(.RST(RST_N),
						       .CLK(CLK),
						       .D_IN(bsvTopCore_xdmaWriteClt_reqQ_D_IN),
						       .ENQ(bsvTopCore_xdmaWriteClt_reqQ_ENQ),
						       .DEQ(bsvTopCore_xdmaWriteClt_reqQ_DEQ),
						       .CLR(bsvTopCore_xdmaWriteClt_reqQ_CLR),
						       .D_OUT(bsvTopCore_xdmaWriteClt_reqQ_D_OUT),
						       .FULL_N(bsvTopCore_xdmaWriteClt_reqQ_FULL_N),
						       .EMPTY_N(bsvTopCore_xdmaWriteClt_reqQ_EMPTY_N));

  // submodule bsvTopCore_xdmaWriteClt_respQ
  FIFO20 #(.guarded(1'd1)) bsvTopCore_xdmaWriteClt_respQ(.RST(RST_N),
							 .CLK(CLK),
							 .ENQ(bsvTopCore_xdmaWriteClt_respQ_ENQ),
							 .DEQ(bsvTopCore_xdmaWriteClt_respQ_DEQ),
							 .CLR(bsvTopCore_xdmaWriteClt_respQ_CLR),
							 .FULL_N(bsvTopCore_xdmaWriteClt_respQ_FULL_N),
							 .EMPTY_N(bsvTopCore_xdmaWriteClt_respQ_EMPTY_N));

  // submodule xdmaAxiLiteWrap_cntrlRdAddrFifo
  SyncFIFO #(.dataWidth(32'd15),
	     .depth(32'd2),
	     .indxWidth(32'd1)) xdmaAxiLiteWrap_cntrlRdAddrFifo(.sCLK(CLK_slowClock),
								.dCLK(CLK),
								.sRST(RST_N_slowReset),
								.sD_IN(xdmaAxiLiteWrap_cntrlRdAddrFifo_sD_IN),
								.sENQ(xdmaAxiLiteWrap_cntrlRdAddrFifo_sENQ),
								.dDEQ(xdmaAxiLiteWrap_cntrlRdAddrFifo_dDEQ),
								.sFULL_N(xdmaAxiLiteWrap_cntrlRdAddrFifo_sFULL_N),
								.dEMPTY_N(xdmaAxiLiteWrap_cntrlRdAddrFifo_dEMPTY_N),
								.dD_OUT(xdmaAxiLiteWrap_cntrlRdAddrFifo_dD_OUT));

  // submodule xdmaAxiLiteWrap_cntrlRdDataFifo
  SyncFIFO #(.dataWidth(32'd34),
	     .depth(32'd2),
	     .indxWidth(32'd1)) xdmaAxiLiteWrap_cntrlRdDataFifo(.sCLK(CLK),
								.dCLK(CLK_slowClock),
								.sRST(RST_N),
								.sD_IN(xdmaAxiLiteWrap_cntrlRdDataFifo_sD_IN),
								.sENQ(xdmaAxiLiteWrap_cntrlRdDataFifo_sENQ),
								.dDEQ(xdmaAxiLiteWrap_cntrlRdDataFifo_dDEQ),
								.sFULL_N(xdmaAxiLiteWrap_cntrlRdDataFifo_sFULL_N),
								.dEMPTY_N(xdmaAxiLiteWrap_cntrlRdDataFifo_dEMPTY_N),
								.dD_OUT(xdmaAxiLiteWrap_cntrlRdDataFifo_dD_OUT));

  // submodule xdmaAxiLiteWrap_cntrlWrAddrFifo
  SyncFIFO #(.dataWidth(32'd15),
	     .depth(32'd2),
	     .indxWidth(32'd1)) xdmaAxiLiteWrap_cntrlWrAddrFifo(.sCLK(CLK_slowClock),
								.dCLK(CLK),
								.sRST(RST_N_slowReset),
								.sD_IN(xdmaAxiLiteWrap_cntrlWrAddrFifo_sD_IN),
								.sENQ(xdmaAxiLiteWrap_cntrlWrAddrFifo_sENQ),
								.dDEQ(xdmaAxiLiteWrap_cntrlWrAddrFifo_dDEQ),
								.sFULL_N(xdmaAxiLiteWrap_cntrlWrAddrFifo_sFULL_N),
								.dEMPTY_N(xdmaAxiLiteWrap_cntrlWrAddrFifo_dEMPTY_N),
								.dD_OUT(xdmaAxiLiteWrap_cntrlWrAddrFifo_dD_OUT));

  // submodule xdmaAxiLiteWrap_cntrlWrDataFifo
  SyncFIFO #(.dataWidth(32'd36),
	     .depth(32'd2),
	     .indxWidth(32'd1)) xdmaAxiLiteWrap_cntrlWrDataFifo(.sCLK(CLK_slowClock),
								.dCLK(CLK),
								.sRST(RST_N_slowReset),
								.sD_IN(xdmaAxiLiteWrap_cntrlWrDataFifo_sD_IN),
								.sENQ(xdmaAxiLiteWrap_cntrlWrDataFifo_sENQ),
								.dDEQ(xdmaAxiLiteWrap_cntrlWrDataFifo_dDEQ),
								.sFULL_N(xdmaAxiLiteWrap_cntrlWrDataFifo_sFULL_N),
								.dEMPTY_N(xdmaAxiLiteWrap_cntrlWrDataFifo_dEMPTY_N),
								.dD_OUT(xdmaAxiLiteWrap_cntrlWrDataFifo_dD_OUT));

  // submodule xdmaAxiLiteWrap_cntrlWrRespFifo
  SyncFIFO #(.dataWidth(32'd2),
	     .depth(32'd2),
	     .indxWidth(32'd1)) xdmaAxiLiteWrap_cntrlWrRespFifo(.sCLK(CLK),
								.dCLK(CLK_slowClock),
								.sRST(RST_N),
								.sD_IN(xdmaAxiLiteWrap_cntrlWrRespFifo_sD_IN),
								.sENQ(xdmaAxiLiteWrap_cntrlWrRespFifo_sENQ),
								.dDEQ(xdmaAxiLiteWrap_cntrlWrRespFifo_dDEQ),
								.sFULL_N(xdmaAxiLiteWrap_cntrlWrRespFifo_sFULL_N),
								.dEMPTY_N(xdmaAxiLiteWrap_cntrlWrRespFifo_dEMPTY_N),
								.dD_OUT(xdmaAxiLiteWrap_cntrlWrRespFifo_dD_OUT));

  // submodule xdmaAxiLiteWrap_readReqQ
  FIFO2 #(.width(32'd12),
	  .guarded(1'd1)) xdmaAxiLiteWrap_readReqQ(.RST(RST_N),
						   .CLK(CLK),
						   .D_IN(xdmaAxiLiteWrap_readReqQ_D_IN),
						   .ENQ(xdmaAxiLiteWrap_readReqQ_ENQ),
						   .DEQ(xdmaAxiLiteWrap_readReqQ_DEQ),
						   .CLR(xdmaAxiLiteWrap_readReqQ_CLR),
						   .D_OUT(xdmaAxiLiteWrap_readReqQ_D_OUT),
						   .FULL_N(xdmaAxiLiteWrap_readReqQ_FULL_N),
						   .EMPTY_N(xdmaAxiLiteWrap_readReqQ_EMPTY_N));

  // submodule xdmaAxiLiteWrap_readRespQ
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) xdmaAxiLiteWrap_readRespQ(.RST(RST_N),
						    .CLK(CLK),
						    .D_IN(xdmaAxiLiteWrap_readRespQ_D_IN),
						    .ENQ(xdmaAxiLiteWrap_readRespQ_ENQ),
						    .DEQ(xdmaAxiLiteWrap_readRespQ_DEQ),
						    .CLR(xdmaAxiLiteWrap_readRespQ_CLR),
						    .D_OUT(xdmaAxiLiteWrap_readRespQ_D_OUT),
						    .FULL_N(xdmaAxiLiteWrap_readRespQ_FULL_N),
						    .EMPTY_N(xdmaAxiLiteWrap_readRespQ_EMPTY_N));

  // submodule xdmaAxiLiteWrap_writeReqQ
  FIFO2 #(.width(32'd44),
	  .guarded(1'd1)) xdmaAxiLiteWrap_writeReqQ(.RST(RST_N),
						    .CLK(CLK),
						    .D_IN(xdmaAxiLiteWrap_writeReqQ_D_IN),
						    .ENQ(xdmaAxiLiteWrap_writeReqQ_ENQ),
						    .DEQ(xdmaAxiLiteWrap_writeReqQ_DEQ),
						    .CLR(xdmaAxiLiteWrap_writeReqQ_CLR),
						    .D_OUT(xdmaAxiLiteWrap_writeReqQ_D_OUT),
						    .FULL_N(xdmaAxiLiteWrap_writeReqQ_FULL_N),
						    .EMPTY_N(xdmaAxiLiteWrap_writeReqQ_EMPTY_N));

  // submodule xdmaAxiLiteWrap_writeRespQ
  FIFO20 #(.guarded(1'd1)) xdmaAxiLiteWrap_writeRespQ(.RST(RST_N),
						      .CLK(CLK),
						      .ENQ(xdmaAxiLiteWrap_writeRespQ_ENQ),
						      .DEQ(xdmaAxiLiteWrap_writeRespQ_DEQ),
						      .CLR(xdmaAxiLiteWrap_writeRespQ_CLR),
						      .FULL_N(xdmaAxiLiteWrap_writeRespQ_FULL_N),
						      .EMPTY_N(xdmaAxiLiteWrap_writeRespQ_EMPTY_N));

  // submodule xdmaWrap_dmaReadReqQ
  FIFO2 #(.width(32'd84),
	  .guarded(1'd1)) xdmaWrap_dmaReadReqQ(.RST(RST_N_slowReset),
					       .CLK(CLK_slowClock),
					       .D_IN(xdmaWrap_dmaReadReqQ_D_IN),
					       .ENQ(xdmaWrap_dmaReadReqQ_ENQ),
					       .DEQ(xdmaWrap_dmaReadReqQ_DEQ),
					       .CLR(xdmaWrap_dmaReadReqQ_CLR),
					       .D_OUT(xdmaWrap_dmaReadReqQ_D_OUT),
					       .FULL_N(xdmaWrap_dmaReadReqQ_FULL_N),
					       .EMPTY_N(xdmaWrap_dmaReadReqQ_EMPTY_N));

  // submodule xdmaWrap_dmaReadRespQ
  FIFO2 #(.width(32'd578),
	  .guarded(1'd1)) xdmaWrap_dmaReadRespQ(.RST(RST_N_slowReset),
						.CLK(CLK_slowClock),
						.D_IN(xdmaWrap_dmaReadRespQ_D_IN),
						.ENQ(xdmaWrap_dmaReadRespQ_ENQ),
						.DEQ(xdmaWrap_dmaReadRespQ_DEQ),
						.CLR(xdmaWrap_dmaReadRespQ_CLR),
						.D_OUT(xdmaWrap_dmaReadRespQ_D_OUT),
						.FULL_N(xdmaWrap_dmaReadRespQ_FULL_N),
						.EMPTY_N(xdmaWrap_dmaReadRespQ_EMPTY_N));

  // submodule xdmaWrap_dmaWriteReqQ
  FIFO2 #(.width(32'd662),
	  .guarded(1'd1)) xdmaWrap_dmaWriteReqQ(.RST(RST_N_slowReset),
						.CLK(CLK_slowClock),
						.D_IN(xdmaWrap_dmaWriteReqQ_D_IN),
						.ENQ(xdmaWrap_dmaWriteReqQ_ENQ),
						.DEQ(xdmaWrap_dmaWriteReqQ_DEQ),
						.CLR(xdmaWrap_dmaWriteReqQ_CLR),
						.D_OUT(xdmaWrap_dmaWriteReqQ_D_OUT),
						.FULL_N(xdmaWrap_dmaWriteReqQ_FULL_N),
						.EMPTY_N(xdmaWrap_dmaWriteReqQ_EMPTY_N));

  // submodule xdmaWrap_dmaWriteRespQ
  FIFO20 #(.guarded(1'd1)) xdmaWrap_dmaWriteRespQ(.RST(RST_N_slowReset),
						  .CLK(CLK_slowClock),
						  .ENQ(xdmaWrap_dmaWriteRespQ_ENQ),
						  .DEQ(xdmaWrap_dmaWriteRespQ_DEQ),
						  .CLR(xdmaWrap_dmaWriteRespQ_CLR),
						  .FULL_N(xdmaWrap_dmaWriteRespQ_FULL_N),
						  .EMPTY_N(xdmaWrap_dmaWriteRespQ_EMPTY_N));

  // submodule xdmaWrap_readReqProcessingQ
  FIFO2 #(.width(32'd84),
	  .guarded(1'd1)) xdmaWrap_readReqProcessingQ(.RST(RST_N_slowReset),
						      .CLK(CLK_slowClock),
						      .D_IN(xdmaWrap_readReqProcessingQ_D_IN),
						      .ENQ(xdmaWrap_readReqProcessingQ_ENQ),
						      .DEQ(xdmaWrap_readReqProcessingQ_DEQ),
						      .CLR(xdmaWrap_readReqProcessingQ_CLR),
						      .D_OUT(),
						      .FULL_N(xdmaWrap_readReqProcessingQ_FULL_N),
						      .EMPTY_N(xdmaWrap_readReqProcessingQ_EMPTY_N));

  // submodule xdmaWrap_writeReqProcessingQ
  FIFO2 #(.width(32'd662),
	  .guarded(1'd1)) xdmaWrap_writeReqProcessingQ(.RST(RST_N_slowReset),
						       .CLK(CLK_slowClock),
						       .D_IN(xdmaWrap_writeReqProcessingQ_D_IN),
						       .ENQ(xdmaWrap_writeReqProcessingQ_ENQ),
						       .DEQ(xdmaWrap_writeReqProcessingQ_DEQ),
						       .CLR(xdmaWrap_writeReqProcessingQ_CLR),
						       .D_OUT(),
						       .FULL_N(xdmaWrap_writeReqProcessingQ_FULL_N),
						       .EMPTY_N(xdmaWrap_writeReqProcessingQ_EMPTY_N));

  // submodule xdmaWrap_xdmaC2hStFifo
  FIFO2 #(.width(32'd577),
	  .guarded(1'd1)) xdmaWrap_xdmaC2hStFifo(.RST(RST_N_slowReset),
						 .CLK(CLK_slowClock),
						 .D_IN(xdmaWrap_xdmaC2hStFifo_D_IN),
						 .ENQ(xdmaWrap_xdmaC2hStFifo_ENQ),
						 .DEQ(xdmaWrap_xdmaC2hStFifo_DEQ),
						 .CLR(xdmaWrap_xdmaC2hStFifo_CLR),
						 .D_OUT(xdmaWrap_xdmaC2hStFifo_D_OUT),
						 .FULL_N(xdmaWrap_xdmaC2hStFifo_FULL_N),
						 .EMPTY_N(xdmaWrap_xdmaC2hStFifo_EMPTY_N));

  // submodule xdmaWrap_xdmaH2cStFifo
  FIFO2 #(.width(32'd577),
	  .guarded(1'd1)) xdmaWrap_xdmaH2cStFifo(.RST(RST_N_slowReset),
						 .CLK(CLK_slowClock),
						 .D_IN(xdmaWrap_xdmaH2cStFifo_D_IN),
						 .ENQ(xdmaWrap_xdmaH2cStFifo_ENQ),
						 .DEQ(xdmaWrap_xdmaH2cStFifo_DEQ),
						 .CLR(xdmaWrap_xdmaH2cStFifo_CLR),
						 .D_OUT(xdmaWrap_xdmaH2cStFifo_D_OUT),
						 .FULL_N(xdmaWrap_xdmaH2cStFifo_FULL_N),
						 .EMPTY_N(xdmaWrap_xdmaH2cStFifo_EMPTY_N));

  // rule RL_xdmaWrap_forwardH2cDesc
  assign WILL_FIRE_RL_xdmaWrap_forwardH2cDesc =
	     !xdmaChannel_h2cDescByp_ready || !xdmaWrap_dmaReadReqQ_EMPTY_N ||
	     xdmaWrap_readReqProcessingQ_FULL_N ;

  // rule RL_xdmaWrap_forwardC2hDescAndData
  assign WILL_FIRE_RL_xdmaWrap_forwardC2hDescAndData =
	     !xdmaChannel_c2hDescByp_ready ||
	     xdmaWrap_dmaWriteReqQ_EMPTY_N && xdmaWrap_xdmaC2hStFifo_FULL_N &&
	     (!xdmaWrap_dmaWriteReqQ_D_OUT[1] ||
	      xdmaWrap_writeReqProcessingQ_FULL_N) ;

  // rule RL_bsvTopCore_debugWorkCompSQ
  assign WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ =
	     bsvTopCore_rdmaTransportLayer_RDY_workCompPipeOutSQ_first &&
	     bsvTopCore_rdmaTransportLayer_RDY_workCompPipeOutSQ_deq &&
	     bsvTopCore_workAndCompleteQController_workCompSqQ_FULL_N ;

  // rule RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp
  assign WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp =
	     bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_EMPTY_N &&
	     bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_EMPTY_N &&
	     bsvTopCore_bluerdmaDmaProxy_h2cProxy_inRespQ_FULL_N ;

  // rule RL_bsvTopCore_bluerdmaDmaProxy_c2hProxy_forwardResp
  assign WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_c2hProxy_forwardResp =
	     bsvTopCore_bluerdmaDmaProxy_c2hProxy_outRespQ_EMPTY_N &&
	     bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_EMPTY_N &&
	     bsvTopCore_bluerdmaDmaProxy_c2hProxy_inRespQ_FULL_N ;

  // rule RL_bsvTopCore_ringbufPool_controller_0_sendDmaReq
  assign WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_0_sendDmaReq =
	     (bsvTopCore_ringbufPool_controller_0_headReg_re_ETC___d435 &&
	      bsvTopCore_ringbufPool_controller_0_headReg_re_ETC___d438 ||
	      bsvTopCore_ringbufPool_t_0_bufQ_EMPTY_N ||
	      bsvTopCore_ringbufPool_controller_0_dmaReqQ_FULL_N) &&
	     !bsvTopCore_ringbufPool_controller_0_ruleState ;

  // rule RL_bsvTopCore_ringbufPool_controller_1_sendDmaReq
  assign WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_1_sendDmaReq =
	     (bsvTopCore_ringbufPool_controller_1_headReg_re_ETC___d509 &&
	      bsvTopCore_ringbufPool_controller_1_headReg_re_ETC___d512 ||
	      bsvTopCore_ringbufPool_t_1_bufQ_EMPTY_N ||
	      bsvTopCore_ringbufPool_controller_1_dmaReqQ_FULL_N) &&
	     !bsvTopCore_ringbufPool_controller_1_ruleState ;

  // rule RL_bsvTopCore_ringbufPool_controller_2_sendDmaReq
  assign WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_2_sendDmaReq =
	     (bsvTopCore_ringbufPool_controller_2_headReg_re_ETC___d583 &&
	      bsvTopCore_ringbufPool_controller_2_headReg_re_ETC___d586 ||
	      bsvTopCore_ringbufPool_t_2_bufQ_EMPTY_N ||
	      bsvTopCore_ringbufPool_controller_2_dmaReqQ_FULL_N) &&
	     !bsvTopCore_ringbufPool_controller_2_ruleState ;

  // rule RL_bsvTopCore_ringbufPool_controller_3_sendDmaReq
  assign WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_3_sendDmaReq =
	     (bsvTopCore_ringbufPool_controller_3_headReg_re_ETC___d657 &&
	      bsvTopCore_ringbufPool_controller_3_headReg_re_ETC___d660 ||
	      bsvTopCore_ringbufPool_t_3_bufQ_EMPTY_N ||
	      bsvTopCore_ringbufPool_controller_3_dmaReqQ_FULL_N) &&
	     !bsvTopCore_ringbufPool_controller_3_ruleState ;

  // rule RL_bsvTopCore_ringbufPool_controller_0_sendDmaReq_1
  assign WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_0_sendDmaReq_1 =
	     bsvTopCore_ringbufPool_controller_0_headShadow_ETC___d731 &&
	     !bsvTopCore_ringbufPool_controller_0_headShadow_ETC___d734 ||
	     !bsvTopCore_ringbufPool_t_0_bufQ_1_EMPTY_N ||
	     bsvTopCore_ringbufPool_controller_0_dmaReqQ_1_FULL_N ;

  // rule RL_bsvTopCore_ringbufPool_controller_1_sendDmaReq_1
  assign WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_1_sendDmaReq_1 =
	     bsvTopCore_ringbufPool_controller_1_headShadow_ETC___d761 &&
	     !bsvTopCore_ringbufPool_controller_1_headShadow_ETC___d764 ||
	     !bsvTopCore_ringbufPool_t_1_bufQ_1_EMPTY_N ||
	     bsvTopCore_ringbufPool_controller_1_dmaReqQ_1_FULL_N ;

  // rule RL_bsvTopCore_ringbufPool_controller_2_sendDmaReq_1
  assign WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_2_sendDmaReq_1 =
	     bsvTopCore_ringbufPool_controller_2_headShadow_ETC___d791 &&
	     !bsvTopCore_ringbufPool_controller_2_headShadow_ETC___d794 ||
	     !bsvTopCore_ringbufPool_t_2_bufQ_1_EMPTY_N ||
	     bsvTopCore_ringbufPool_controller_2_dmaReqQ_1_FULL_N ;

  // rule RL_bsvTopCore_ringbufPool_controller_3_sendDmaReq_1
  assign WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_3_sendDmaReq_1 =
	     bsvTopCore_ringbufPool_controller_3_headShadow_ETC___d821 &&
	     !bsvTopCore_ringbufPool_controller_3_headShadow_ETC___d824 ||
	     !bsvTopCore_ringbufPool_t_3_bufQ_1_EMPTY_N ||
	     bsvTopCore_ringbufPool_controller_3_dmaReqQ_1_FULL_N ;

  // rule RL_bsvTopCore_ringbufPool_arbitratedH2cClient_dispatchResponse
  assign WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedH2cClient_dispatchResponse =
	     bsvTopCore_ringbufPool_arbitratedH2cClient_respQ_EMPTY_N &&
	     bsvTopCore_ringbufPool_arbitratedH2cClient_preGrantIdxQ_EMPTY_N &&
	     CASE_bsvTopCore_ringbufPool_arbitratedH2cClien_ETC___d996 ;

  // rule RL_bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_binaryArbitrate
  assign WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_binaryArbitrate =
	     bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_FULL_N &&
	     CASE_v5257_0_bsvTopCore_ringbufPool_arbitrated_ETC__q24 ;

  // rule RL_bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_binaryArbitrate
  assign WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_binaryArbitrate =
	     bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_FULL_N &&
	     CASE_v3019_0_bsvTopCore_ringbufPool_arbitrated_ETC__q23 ;

  // rule RL_bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_binaryArbitrate
  assign WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_binaryArbitrate =
	     bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_FULL_N &&
	     CASE_v4241_0_bsvTopCore_ringbufPool_arbitrated_ETC__q22 ;

  // rule RL_bsvTopCore_ringbufPool_arbitratedC2hClient_dispatchResponse
  assign WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedC2hClient_dispatchResponse =
	     bsvTopCore_ringbufPool_arbitratedC2hClient_respQ_EMPTY_N &&
	     bsvTopCore_ringbufPool_arbitratedC2hClient_preGrantIdxQ_EMPTY_N &&
	     CASE_bsvTopCore_ringbufPool_arbitratedC2hClien_ETC___d1208 ;

  // rule RL_bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_binaryArbitrate
  assign WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_binaryArbitrate =
	     bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_FULL_N &&
	     CASE_v9988_0_bsvTopCore_ringbufPool_arbitrated_ETC__q27 ;

  // rule RL_bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_binaryArbitrate
  assign WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_binaryArbitrate =
	     bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_FULL_N &&
	     CASE_v7620_0_bsvTopCore_ringbufPool_arbitrated_ETC__q25 ;

  // rule RL_bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_binaryArbitrate
  assign WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_binaryArbitrate =
	     bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_FULL_N &&
	     CASE_v8907_0_bsvTopCore_ringbufPool_arbitrated_ETC__q26 ;

  // rule RL_bsvTopCore_ringbufPool_controller_0_recvDmaResp
  assign CAN_FIRE_RL_bsvTopCore_ringbufPool_controller_0_recvDmaResp =
	     bsvTopCore_ringbufPool_controller_0_dmaRespQ_EMPTY_N &&
	     (bsvTopCore_ringbufPool_controller_0_tailPosInReadBlockReg !=
	      3'd0 ||
	      bsvTopCore_ringbufPool_controller_0_tailReg_re_ETC___d473 &&
	      bsvTopCore_ringbufPool_controller_0_tailReg_re_ETC___d475 ||
	      bsvTopCore_ringbufPool_t_0_bufQ_FULL_N) &&
	     bsvTopCore_ringbufPool_controller_0_ruleState ;
  assign WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_0_recvDmaResp =
	     CAN_FIRE_RL_bsvTopCore_ringbufPool_controller_0_recvDmaResp &&
	     !WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite ;

  // rule RL_bsvTopCore_ringbufPool_controller_1_recvDmaResp
  assign CAN_FIRE_RL_bsvTopCore_ringbufPool_controller_1_recvDmaResp =
	     bsvTopCore_ringbufPool_controller_1_dmaRespQ_EMPTY_N &&
	     (bsvTopCore_ringbufPool_controller_1_tailPosInReadBlockReg !=
	      3'd0 ||
	      bsvTopCore_ringbufPool_controller_1_tailReg_re_ETC___d547 &&
	      bsvTopCore_ringbufPool_controller_1_tailReg_re_ETC___d549 ||
	      bsvTopCore_ringbufPool_t_1_bufQ_FULL_N) &&
	     bsvTopCore_ringbufPool_controller_1_ruleState ;
  assign WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_1_recvDmaResp =
	     CAN_FIRE_RL_bsvTopCore_ringbufPool_controller_1_recvDmaResp &&
	     !WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite ;

  // rule RL_bsvTopCore_ringbufPool_controller_2_recvDmaResp
  assign CAN_FIRE_RL_bsvTopCore_ringbufPool_controller_2_recvDmaResp =
	     bsvTopCore_ringbufPool_controller_2_dmaRespQ_EMPTY_N &&
	     (bsvTopCore_ringbufPool_controller_2_tailPosInReadBlockReg !=
	      3'd0 ||
	      bsvTopCore_ringbufPool_controller_2_tailReg_re_ETC___d621 &&
	      bsvTopCore_ringbufPool_controller_2_tailReg_re_ETC___d623 ||
	      bsvTopCore_ringbufPool_t_2_bufQ_FULL_N) &&
	     bsvTopCore_ringbufPool_controller_2_ruleState ;
  assign WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_2_recvDmaResp =
	     CAN_FIRE_RL_bsvTopCore_ringbufPool_controller_2_recvDmaResp &&
	     !WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite ;

  // rule RL_bsvTopCore_ringbufPool_controller_3_recvDmaResp
  assign CAN_FIRE_RL_bsvTopCore_ringbufPool_controller_3_recvDmaResp =
	     bsvTopCore_ringbufPool_controller_3_dmaRespQ_EMPTY_N &&
	     (bsvTopCore_ringbufPool_controller_3_tailPosInReadBlockReg !=
	      3'd0 ||
	      bsvTopCore_ringbufPool_controller_3_tailReg_re_ETC___d695 &&
	      bsvTopCore_ringbufPool_controller_3_tailReg_re_ETC___d697 ||
	      bsvTopCore_ringbufPool_t_3_bufQ_FULL_N) &&
	     bsvTopCore_ringbufPool_controller_3_ruleState ;
  assign WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_3_recvDmaResp =
	     CAN_FIRE_RL_bsvTopCore_ringbufPool_controller_3_recvDmaResp &&
	     !WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite ;

  // rule RL_bsvTopCore_regBlock_ruleHandleWrite
  assign WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite =
	     bsvTopCore_regBlock_writeReqQ_EMPTY_N &&
	     bsvTopCore_regBlock_writeRespQ_FULL_N ;

  // rule RL_bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_stageReadResponseAlways
  assign WILL_FIRE_RL_bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_stageReadResponseAlways =
	     bsvTopCore_tlb_firstStageCache_bramReadReqQ_EMPTY_N &&
	     (bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_cnt ^
	      4'h8) <
	     4'd12 ;

  // rule RL_bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_stageReadResponseAlways
  assign WILL_FIRE_RL_bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_stageReadResponseAlways =
	     bsvTopCore_tlb_secondStageCache_bramReadReqQ_EMPTY_N &&
	     (bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_cnt ^
	      4'h8) <
	     4'd12 ;

  // rule RL_bsvTopCore_pgtManager_updatePgtStateIdle
  assign WILL_FIRE_RL_bsvTopCore_pgtManager_updatePgtStateIdle =
	     bsvTopCore_pgtManager_reqQ_EMPTY_N &&
	     IF_bsvTopCore_pgtManager_reqQ_first__608_BITS__ETC___d1618 &&
	     bsvTopCore_pgtManager_state == 2'd0 ;

  // rule RL_bsvTopCore_pgtManager_updatePgtStateHandleSecondStageUpdate
  assign WILL_FIRE_RL_bsvTopCore_pgtManager_updatePgtStateHandleSecondStageUpdate =
	     IF_bsvTopCore_pgtManager_curBeatOfDataReg_632__ETC___d1638 &&
	     bsvTopCore_pgtManager_state == 2'd2 ;

  // rule RL_bsvTopCore_xdmaReadClt_dispatchResponse
  assign WILL_FIRE_RL_bsvTopCore_xdmaReadClt_dispatchResponse =
	     bsvTopCore_xdmaReadClt_respQ_EMPTY_N &&
	     bsvTopCore_xdmaReadClt_preGrantIdxQ_EMPTY_N &&
	     CASE_bsvTopCore_xdmaReadClt_preGrantIdxQ_first_ETC___d1804 ;

  // rule RL_bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_binaryArbitrate
  assign WILL_FIRE_RL_bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_binaryArbitrate =
	     bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_FULL_N &&
	     CASE_v8078_0_bsvTopCore_xdmaReadClt_leafArbite_ETC__q29 ;

  // rule RL_bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_binaryArbitrate
  assign WILL_FIRE_RL_bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_binaryArbitrate =
	     bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_FULL_N &&
	     CASE_v5840_0_bsvTopCore_xdmaReadClt_inputReqWi_ETC__q28 ;

  // rule RL_bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_binaryArbitrate
  assign WILL_FIRE_RL_bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_binaryArbitrate =
	     bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_pipeOutQ_FULL_N &&
	     CASE_v7062_0_bsvTopCore_xdmaReadClt_inputReqWi_ETC__q30 ;

  // rule RL_bsvTopCore_xdmaWriteClt_dispatchResponse
  assign WILL_FIRE_RL_bsvTopCore_xdmaWriteClt_dispatchResponse =
	     bsvTopCore_xdmaWriteClt_respQ_EMPTY_N &&
	     bsvTopCore_xdmaWriteClt_preGrantIdxQ_EMPTY_N &&
	     CASE_bsvTopCore_xdmaWriteClt_preGrantIdxQD_OU_ETC__q32 ;

  // rule RL_bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_binaryArbitrate
  assign WILL_FIRE_RL_bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_binaryArbitrate =
	     bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_FULL_N &&
	     CASE_v0211_0_bsvTopCore_xdmaWriteClt_inputReqW_ETC__q31 ;

  // rule RL_bsvTopCore_xdmaGearbox_h2cStreamReqQ_enq_update_tail
  assign WILL_FIRE_RL_bsvTopCore_xdmaGearbox_h2cStreamReqQ_enq_update_tail =
	     !bsvTopCore_xdmaGearbox_h2cStreamReqQ_sInReset_VAL &&
	     bsvTopCore_xdmaGearbox_h2cStreamReqQ_enq_pw_whas ;

  // rule RL_bsvTopCore_xdmaGearbox_h2cStreamReqQ_deq_update_head
  assign WILL_FIRE_RL_bsvTopCore_xdmaGearbox_h2cStreamReqQ_deq_update_head =
	     !bsvTopCore_xdmaGearbox_h2cStreamReqQ_dInReset_VAL &&
	     bsvTopCore_xdmaGearbox_h2cStreamReqQ_deq_pw_whas ;

  // rule RL_ClientServerResponse_2
  assign WILL_FIRE_RL_ClientServerResponse_2 =
	     NOT_bsvTopCore_xdmaGearbox_h2cRespGearbox_writ_ETC___d2760 &&
	     xdmaWrap_dmaReadRespQ_EMPTY_N ;

  // rule RL_bsvTopCore_xdmaGearbox_forwardH2cResp
  assign WILL_FIRE_RL_bsvTopCore_xdmaGearbox_forwardH2cResp =
	     NOT_bsvTopCore_xdmaGearbox_h2cRespGearbox_read_ETC___d1970 &&
	     (IF_bsvTopCore_xdmaGearbox_h2cRespGearbox_read__ETC___d1989 ||
	      bsvTopCore_xdmaGearbox_h2cRespQ_FULL_N) ;

  // rule RL_bsvTopCore_xdmaGearbox_forwardC2hReq
  assign WILL_FIRE_RL_bsvTopCore_xdmaGearbox_forwardC2hReq =
	     NOT_bsvTopCore_xdmaGearbox_c2hReqGearbox_write_ETC___d2039 &&
	     (bsvTopCore_xdmaGearbox_isCurrentC2hReqAnEvenBeat ||
	      bsvTopCore_xdmaGearbox_c2hReqQ_EMPTY_N) ;

  // rule RL_ClientServerRequest_3
  assign WILL_FIRE_RL_ClientServerRequest_3 =
	     NOT_bsvTopCore_xdmaGearbox_c2hReqGearbox_read__ETC___d2879 &&
	     xdmaWrap_dmaWriteReqQ_FULL_N ;

  // rule RL_bsvTopCore_xdmaGearbox_c2hStreamRespQ_enq_update_tail
  assign WILL_FIRE_RL_bsvTopCore_xdmaGearbox_c2hStreamRespQ_enq_update_tail =
	     !bsvTopCore_xdmaGearbox_c2hStreamRespQ_sInReset_VAL &&
	     bsvTopCore_xdmaGearbox_c2hStreamRespQ_enq_pw_whas ;

  // rule RL_bsvTopCore_xdmaGearbox_c2hStreamRespQ_deq_update_head
  assign WILL_FIRE_RL_bsvTopCore_xdmaGearbox_c2hStreamRespQ_deq_update_head =
	     !bsvTopCore_xdmaGearbox_c2hStreamRespQ_dInReset_VAL &&
	     bsvTopCore_xdmaGearbox_c2hStreamRespQ_deq_pw_whas ;

  // rule RL_bsvTopCore_cmdQController_dispatchRingbufRequestDescriptors
  assign WILL_FIRE_RL_bsvTopCore_cmdQController_dispatchRingbufRequestDescriptors =
	     !bsvTopCore_cmdQController_descReadProxy_isFillingReqSegmentsReg &&
	     IF_SEL_ARR_bsvTopCore_cmdQController_descReadP_ETC___d2177 ;

  // rule RL_bsvTopCore_cmdQController_gatherResponse
  assign WILL_FIRE_RL_bsvTopCore_cmdQController_gatherResponse =
	     IF_bsvTopCore_cmdQController_pgtRespQ_notEmpty_ETC___d2266 &&
	     !bsvTopCore_cmdQController_descWriteProxy_isSendingDescReg ;

  // rule RL_bsvTopCore_cmdQController_descReadProxy_fillAllReqSegments
  assign WILL_FIRE_RL_bsvTopCore_cmdQController_descReadProxy_fillAllReqSegments =
	     bsvTopCore_cmdQController_descReadProxy_ringbufQ_EMPTY_N &&
	     bsvTopCore_cmdQController_descReadProxy_isFillingReqSegmentsReg ;

  // rule RL_bsvTopCore_cmdQController_descWriteProxy_sendRespDesc
  assign WILL_FIRE_RL_bsvTopCore_cmdQController_descWriteProxy_sendRespDesc =
	     bsvTopCore_cmdQController_descWriteProxy_ringbufQ_FULL_N &&
	     bsvTopCore_cmdQController_descWriteProxy_isSendingDescReg ;

  // rule RL_bsvTopCore_workAndCompleteQController_forwardSQ
  assign WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ =
	     !bsvTopCore_workAndCompleteQController_sqDescReadProxy_isFillingReqSegmentsReg &&
	     bsvTopCore_workAndCompleteQController_workReqQ_FULL_N ;

  // rule RL_bsvTopCore_workAndCompleteQController_sqDescReadProxy_fillAllReqSegments
  assign WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_sqDescReadProxy_fillAllReqSegments =
	     bsvTopCore_workAndCompleteQController_sqDescReadProxy_ringbufQ_EMPTY_N &&
	     bsvTopCore_workAndCompleteQController_sqDescReadProxy_isFillingReqSegmentsReg ;

  // inputs to muxes for submodule ports
  assign MUX_bsvTopCore_cmdQController_descWriteProxy_isSendingDescReg_write_1__SEL_1 =
	     WILL_FIRE_RL_bsvTopCore_cmdQController_descWriteProxy_sendRespDesc &&
	     bsvTopCore_cmdQController_descWriteProxy_segCntReg == 4'd0 ;
  assign MUX_bsvTopCore_cmdQController_descWriteProxy_isSendingDescReg_write_1__SEL_2 =
	     WILL_FIRE_RL_bsvTopCore_cmdQController_gatherResponse &&
	     bsvTopCore_cmdQController_pgtRespQ_notEmpty__2_ETC___d2271 ;
  assign MUX_bsvTopCore_pgtManager_curSecondStagePgtWriteIdxReg_write_1__SEL_1 =
	     WILL_FIRE_RL_bsvTopCore_pgtManager_updatePgtStateIdle &&
	     bsvTopCore_pgtManager_reqQ_D_OUT[3:1] == 3'd1 ;
  assign MUX_bsvTopCore_pgtManager_curSecondStagePgtWriteIdxReg_write_1__SEL_2 =
	     WILL_FIRE_RL_bsvTopCore_pgtManager_updatePgtStateHandleSecondStageUpdate &&
	     bsvTopCore_pgtManager_curBeatOfDataReg[2] ;
  assign MUX_bsvTopCore_pgtManager_respQ_enq_1__SEL_1 =
	     WILL_FIRE_RL_bsvTopCore_pgtManager_updatePgtStateIdle &&
	     bsvTopCore_pgtManager_reqQ_D_OUT[3:1] == 3'd0 ;
  assign MUX_bsvTopCore_pgtManager_state_write_1__SEL_1 =
	     WILL_FIRE_RL_bsvTopCore_pgtManager_updatePgtStateIdle &&
	     (bsvTopCore_pgtManager_reqQ_D_OUT[3:1] == 3'd0 ||
	      bsvTopCore_pgtManager_reqQ_D_OUT[3:1] == 3'd1) ;
  assign MUX_bsvTopCore_ringbufPool_controller_0_headReg_1_write_1__SEL_1 =
	     WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[38:36] == 3'd0 &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd2 &&
	     !bsvTopCore_regBlock_writeReqQ_D_OUT[39] ;
  assign MUX_bsvTopCore_ringbufPool_controller_0_headReg_1_write_1__SEL_2 =
	     bsvTopCore_ringbufPool_controller_0_dmaRespQ_1_EMPTY_N &&
	     !WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite ;
  assign MUX_bsvTopCore_ringbufPool_controller_0_ruleState_write_1__SEL_1 =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_0_sendDmaReq &&
	     (!bsvTopCore_ringbufPool_controller_0_headReg_re_ETC___d435 ||
	      !bsvTopCore_ringbufPool_controller_0_headReg_re_ETC___d438) &&
	     !bsvTopCore_ringbufPool_t_0_bufQ_EMPTY_N ;
  assign MUX_bsvTopCore_ringbufPool_controller_0_tailPosInReadBlockReg_write_1__SEL_1 =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_0_recvDmaResp &&
	     bsvTopCore_ringbufPool_controller_0_tailPosInReadBlockReg !=
	     3'd0 ;
  assign MUX_bsvTopCore_ringbufPool_controller_0_tailReg_write_1__SEL_1 =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_0_recvDmaResp &&
	     bsvTopCore_ringbufPool_controller_0_tailPosInReadBlockReg ==
	     3'd0 &&
	     (!bsvTopCore_ringbufPool_controller_0_tailReg_re_ETC___d473 ||
	      !bsvTopCore_ringbufPool_controller_0_tailReg_re_ETC___d475) ;
  assign MUX_bsvTopCore_ringbufPool_controller_1_headReg_1_write_1__SEL_1 =
	     WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[38:36] == 3'd1 &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd2 &&
	     !bsvTopCore_regBlock_writeReqQ_D_OUT[39] ;
  assign MUX_bsvTopCore_ringbufPool_controller_1_headReg_1_write_1__SEL_2 =
	     bsvTopCore_ringbufPool_controller_1_dmaRespQ_1_EMPTY_N &&
	     !WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite ;
  assign MUX_bsvTopCore_ringbufPool_controller_1_ruleState_write_1__SEL_1 =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_1_sendDmaReq &&
	     (!bsvTopCore_ringbufPool_controller_1_headReg_re_ETC___d509 ||
	      !bsvTopCore_ringbufPool_controller_1_headReg_re_ETC___d512) &&
	     !bsvTopCore_ringbufPool_t_1_bufQ_EMPTY_N ;
  assign MUX_bsvTopCore_ringbufPool_controller_1_tailPosInReadBlockReg_write_1__SEL_1 =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_1_recvDmaResp &&
	     bsvTopCore_ringbufPool_controller_1_tailPosInReadBlockReg !=
	     3'd0 ;
  assign MUX_bsvTopCore_ringbufPool_controller_1_tailReg_write_1__SEL_1 =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_1_recvDmaResp &&
	     bsvTopCore_ringbufPool_controller_1_tailPosInReadBlockReg ==
	     3'd0 &&
	     (!bsvTopCore_ringbufPool_controller_1_tailReg_re_ETC___d547 ||
	      !bsvTopCore_ringbufPool_controller_1_tailReg_re_ETC___d549) ;
  assign MUX_bsvTopCore_ringbufPool_controller_2_headReg_1_write_1__SEL_1 =
	     WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[38:36] == 3'd2 &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd2 &&
	     !bsvTopCore_regBlock_writeReqQ_D_OUT[39] ;
  assign MUX_bsvTopCore_ringbufPool_controller_2_headReg_1_write_1__SEL_2 =
	     bsvTopCore_ringbufPool_controller_2_dmaRespQ_1_EMPTY_N &&
	     !WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite ;
  assign MUX_bsvTopCore_ringbufPool_controller_2_ruleState_write_1__SEL_1 =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_2_sendDmaReq &&
	     (!bsvTopCore_ringbufPool_controller_2_headReg_re_ETC___d583 ||
	      !bsvTopCore_ringbufPool_controller_2_headReg_re_ETC___d586) &&
	     !bsvTopCore_ringbufPool_t_2_bufQ_EMPTY_N ;
  assign MUX_bsvTopCore_ringbufPool_controller_2_tailPosInReadBlockReg_write_1__SEL_1 =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_2_recvDmaResp &&
	     bsvTopCore_ringbufPool_controller_2_tailPosInReadBlockReg !=
	     3'd0 ;
  assign MUX_bsvTopCore_ringbufPool_controller_2_tailReg_write_1__SEL_1 =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_2_recvDmaResp &&
	     bsvTopCore_ringbufPool_controller_2_tailPosInReadBlockReg ==
	     3'd0 &&
	     (!bsvTopCore_ringbufPool_controller_2_tailReg_re_ETC___d621 ||
	      !bsvTopCore_ringbufPool_controller_2_tailReg_re_ETC___d623) ;
  assign MUX_bsvTopCore_ringbufPool_controller_3_headReg_1_write_1__SEL_1 =
	     WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[38:36] == 3'd3 &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd2 &&
	     !bsvTopCore_regBlock_writeReqQ_D_OUT[39] ;
  assign MUX_bsvTopCore_ringbufPool_controller_3_headReg_1_write_1__SEL_2 =
	     bsvTopCore_ringbufPool_controller_3_dmaRespQ_1_EMPTY_N &&
	     !WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite ;
  assign MUX_bsvTopCore_ringbufPool_controller_3_ruleState_write_1__SEL_1 =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_3_sendDmaReq &&
	     (!bsvTopCore_ringbufPool_controller_3_headReg_re_ETC___d657 ||
	      !bsvTopCore_ringbufPool_controller_3_headReg_re_ETC___d660) &&
	     !bsvTopCore_ringbufPool_t_3_bufQ_EMPTY_N ;
  assign MUX_bsvTopCore_ringbufPool_controller_3_tailPosInReadBlockReg_write_1__SEL_1 =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_3_recvDmaResp &&
	     bsvTopCore_ringbufPool_controller_3_tailPosInReadBlockReg !=
	     3'd0 ;
  assign MUX_bsvTopCore_ringbufPool_controller_3_tailReg_write_1__SEL_1 =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_3_recvDmaResp &&
	     bsvTopCore_ringbufPool_controller_3_tailPosInReadBlockReg ==
	     3'd0 &&
	     (!bsvTopCore_ringbufPool_controller_3_tailReg_re_ETC___d695 ||
	      !bsvTopCore_ringbufPool_controller_3_tailReg_re_ETC___d697) ;
  assign MUX_bsvTopCore_cmdQController_descReadProxy_isFillingReqSegmentsReg_write_1__VAL_1 =
	     totalSegCnt__h91144 != curSegCnt__h91145 ;
  assign MUX_bsvTopCore_cmdQController_descWriteProxy_segBuf_0_write_1__VAL_1 =
	     bsvTopCore_cmdQController_pgtRespQ_EMPTY_N ?
	       din__h93228 :
	       CASE_bsvTopCore_cmdQController_metaDataRespQD_ETC__q33 ;
  assign MUX_bsvTopCore_cmdQController_descWriteProxy_segCntReg_write_1__VAL_1 =
	     (bsvTopCore_cmdQController_pgtRespQ_EMPTY_N ||
	      bsvTopCore_cmdQController_metaDataRespQ_D_OUT[275:274] ==
	      2'd0 ||
	      bsvTopCore_cmdQController_metaDataRespQ_D_OUT[275:274] ==
	      2'd1) ?
	       4'd0 :
	       4'd1 ;
  assign MUX_bsvTopCore_cmdQController_descWriteProxy_segCntReg_write_1__VAL_2 =
	     bsvTopCore_cmdQController_descWriteProxy_segCntReg - 4'd1 ;
  assign MUX_bsvTopCore_pgtManager_curSecondStagePgtWriteIdxReg_write_1__VAL_2 =
	     bsvTopCore_pgtManager_curSecondStagePgtWriteIdxReg + 17'd1 ;
  assign MUX_bsvTopCore_pgtManager_state_write_1__VAL_1 =
	     (bsvTopCore_pgtManager_reqQ_D_OUT[3:1] == 3'd0) ? 2'd0 : 2'd2 ;
  assign MUX_bsvTopCore_ringbufPool_controller_0_headReg_1_write_1__VAL_2 =
	     bsvTopCore_ringbufPool_controller_0_headReg_1 + 8'd1 ;
  assign MUX_bsvTopCore_ringbufPool_controller_0_tailPosInReadBlockReg_write_1__VAL_1 =
	     bsvTopCore_ringbufPool_controller_0_tailPosInReadBlockReg -
	     3'd1 ;
  assign MUX_bsvTopCore_ringbufPool_controller_1_headReg_1_write_1__VAL_2 =
	     bsvTopCore_ringbufPool_controller_1_headReg_1 + 8'd1 ;
  assign MUX_bsvTopCore_ringbufPool_controller_1_tailPosInReadBlockReg_write_1__VAL_1 =
	     bsvTopCore_ringbufPool_controller_1_tailPosInReadBlockReg -
	     3'd1 ;
  assign MUX_bsvTopCore_ringbufPool_controller_2_headReg_1_write_1__VAL_2 =
	     bsvTopCore_ringbufPool_controller_2_headReg_1 + 8'd1 ;
  assign MUX_bsvTopCore_ringbufPool_controller_2_tailPosInReadBlockReg_write_1__VAL_1 =
	     bsvTopCore_ringbufPool_controller_2_tailPosInReadBlockReg -
	     3'd1 ;
  assign MUX_bsvTopCore_ringbufPool_controller_3_headReg_1_write_1__VAL_2 =
	     bsvTopCore_ringbufPool_controller_3_headReg_1 + 8'd1 ;
  assign MUX_bsvTopCore_ringbufPool_controller_3_tailPosInReadBlockReg_write_1__VAL_1 =
	     bsvTopCore_ringbufPool_controller_3_tailPosInReadBlockReg -
	     3'd1 ;
  assign MUX_bsvTopCore_workAndCompleteQController_sqDescReadProxy_isFillingReqSegmentsReg_write_1__VAL_1 =
	     totalSegCnt__h104415 != curSegCnt__h104416 ;

  // inlined wires
  assign bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_enqw_whas =
	     (!bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_s2[0] ||
	      bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_ff_FULL_N) &&
	     bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_s2[1] &&
	     bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_s2[0] ;
  assign bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_enqw_whas =
	     (!bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_s2[0] ||
	      bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_ff_FULL_N) &&
	     bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_s2[1] &&
	     bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_s2[0] ;
  assign bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_enqw_whas =
	     (!bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_s2[0] ||
	      bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_ff_FULL_N) &&
	     bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_s2[1] &&
	     bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_s2[0] ;
  assign bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_enqw_whas =
	     (!bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_s2[0] ||
	      bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_ff_FULL_N) &&
	     bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_s2[1] &&
	     bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_s2[0] ;
  assign bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_dequeueing_whas =
	     bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_beforeDeq_Q_OUT &&
	     (bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_ff_EMPTY_N ||
	      bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_enqw_whas) &&
	     bsvTopCore_tlb_firstStageCache_bramReadRespQ_FULL_N ;
  assign bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_dequeueing_whas =
	     bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_beforeDeq_Q_OUT &&
	     (bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_ff_EMPTY_N ||
	      bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_enqw_whas) &&
	     bsvTopCore_tlb_secondStageCache_bramReadRespQ_FULL_N ;
  assign bsvTopCore_xdmaGearbox_h2cStreamReqQ_enq_pw_whas =
	     bsvTopCore_xdmaGearbox_h2cStreamReqQ_head_wrapped ==
	     bsvTopCore_xdmaGearbox_h2cStreamReqQ_tail_wrapped &&
	     !bsvTopCore_xdmaGearbox_h2cStreamReqQ_sInReset_VAL &&
	     bsvTopCore_xdmaGearbox_divClk_PREEDGE &&
	     bsvTopCore_xdmaReadClt_reqQ_EMPTY_N ;
  assign bsvTopCore_xdmaGearbox_h2cStreamReqQ_deq_pw_whas =
	     bsvTopCore_xdmaGearbox_h2cStreamReqQ_head_wrapped !=
	     bsvTopCore_xdmaGearbox_h2cStreamReqQ_tail_wrapped &&
	     !bsvTopCore_xdmaGearbox_h2cStreamReqQ_dInReset_VAL &&
	     xdmaWrap_dmaReadReqQ_FULL_N ;
  assign bsvTopCore_xdmaGearbox_c2hStreamRespQ_enq_pw_whas =
	     bsvTopCore_xdmaGearbox_c2hStreamRespQ_head_wrapped ==
	     bsvTopCore_xdmaGearbox_c2hStreamRespQ_tail_wrapped &&
	     !bsvTopCore_xdmaGearbox_c2hStreamRespQ_sInReset_VAL &&
	     xdmaWrap_dmaWriteRespQ_EMPTY_N ;
  assign bsvTopCore_xdmaGearbox_c2hStreamRespQ_deq_pw_whas =
	     bsvTopCore_xdmaGearbox_c2hStreamRespQ_head_wrapped !=
	     bsvTopCore_xdmaGearbox_c2hStreamRespQ_tail_wrapped &&
	     !bsvTopCore_xdmaGearbox_c2hStreamRespQ_dInReset_VAL &&
	     bsvTopCore_xdmaGearbox_divClk_PREEDGE &&
	     bsvTopCore_xdmaWriteClt_respQ_FULL_N ;
  assign xdmaWrap_rawH2cSt_rawBus_dataW_wget =
	     { xdmaChannel_rawH2cAxiStream_tdata,
	       xdmaChannel_rawH2cAxiStream_tkeep,
	       xdmaChannel_rawH2cAxiStream_tlast } ;
  assign xdmaAxiLiteWrap_cntrlAxilSlave_rawWrAddrBus_dataW_wget =
	     { axilRegBlock_awaddr, axilRegBlock_awprot } ;
  assign xdmaAxiLiteWrap_cntrlAxilSlave_rawWrDataBus_dataW_wget =
	     { axilRegBlock_wdata, axilRegBlock_wstrb } ;
  assign xdmaAxiLiteWrap_cntrlAxilSlave_rawRdAddrBus_dataW_wget =
	     { axilRegBlock_araddr, axilRegBlock_arprot } ;

  // register bsvTopCore_cmdQController_descReadProxy_curSegCntReg
  assign bsvTopCore_cmdQController_descReadProxy_curSegCntReg_D_IN =
	     curSegCnt__h91145 + 4'd1 ;
  assign bsvTopCore_cmdQController_descReadProxy_curSegCntReg_EN =
	     WILL_FIRE_RL_bsvTopCore_cmdQController_descReadProxy_fillAllReqSegments ;

  // register bsvTopCore_cmdQController_descReadProxy_isFillingReqSegmentsReg
  assign bsvTopCore_cmdQController_descReadProxy_isFillingReqSegmentsReg_D_IN =
	     !WILL_FIRE_RL_bsvTopCore_cmdQController_descReadProxy_fillAllReqSegments ||
	     MUX_bsvTopCore_cmdQController_descReadProxy_isFillingReqSegmentsReg_write_1__VAL_1 ;
  assign bsvTopCore_cmdQController_descReadProxy_isFillingReqSegmentsReg_EN =
	     WILL_FIRE_RL_bsvTopCore_cmdQController_descReadProxy_fillAllReqSegments ||
	     WILL_FIRE_RL_bsvTopCore_cmdQController_dispatchRingbufRequestDescriptors ;

  // register bsvTopCore_cmdQController_descReadProxy_isFirstReqSegmentsReg
  assign bsvTopCore_cmdQController_descReadProxy_isFirstReqSegmentsReg_D_IN =
	     totalSegCnt__h91144 == curSegCnt__h91145 ;
  assign bsvTopCore_cmdQController_descReadProxy_isFirstReqSegmentsReg_EN =
	     WILL_FIRE_RL_bsvTopCore_cmdQController_descReadProxy_fillAllReqSegments ;

  // register bsvTopCore_cmdQController_descReadProxy_segBuf_0
  assign bsvTopCore_cmdQController_descReadProxy_segBuf_0_D_IN =
	     bsvTopCore_cmdQController_descReadProxy_ringbufQ_D_OUT ;
  assign bsvTopCore_cmdQController_descReadProxy_segBuf_0_EN =
	     WILL_FIRE_RL_bsvTopCore_cmdQController_descReadProxy_fillAllReqSegments ;

  // register bsvTopCore_cmdQController_descReadProxy_segBuf_1
  assign bsvTopCore_cmdQController_descReadProxy_segBuf_1_D_IN =
	     bsvTopCore_cmdQController_descReadProxy_segBuf_0 ;
  assign bsvTopCore_cmdQController_descReadProxy_segBuf_1_EN =
	     WILL_FIRE_RL_bsvTopCore_cmdQController_descReadProxy_fillAllReqSegments ;

  // register bsvTopCore_cmdQController_descReadProxy_totalSegCntReg
  assign bsvTopCore_cmdQController_descReadProxy_totalSegCntReg_D_IN =
	     totalSegCnt__h91144 ;
  assign bsvTopCore_cmdQController_descReadProxy_totalSegCntReg_EN =
	     WILL_FIRE_RL_bsvTopCore_cmdQController_descReadProxy_fillAllReqSegments ;

  // register bsvTopCore_cmdQController_descWriteProxy_isSendingDescReg
  assign bsvTopCore_cmdQController_descWriteProxy_isSendingDescReg_D_IN =
	     !MUX_bsvTopCore_cmdQController_descWriteProxy_isSendingDescReg_write_1__SEL_1 ;
  assign bsvTopCore_cmdQController_descWriteProxy_isSendingDescReg_EN =
	     WILL_FIRE_RL_bsvTopCore_cmdQController_descWriteProxy_sendRespDesc &&
	     bsvTopCore_cmdQController_descWriteProxy_segCntReg == 4'd0 ||
	     WILL_FIRE_RL_bsvTopCore_cmdQController_gatherResponse &&
	     bsvTopCore_cmdQController_pgtRespQ_notEmpty__2_ETC___d2271 ;

  // register bsvTopCore_cmdQController_descWriteProxy_segBuf_0
  assign bsvTopCore_cmdQController_descWriteProxy_segBuf_0_D_IN =
	     MUX_bsvTopCore_cmdQController_descWriteProxy_isSendingDescReg_write_1__SEL_2 ?
	       MUX_bsvTopCore_cmdQController_descWriteProxy_segBuf_0_write_1__VAL_1 :
	       bsvTopCore_cmdQController_descWriteProxy_segBuf_1 ;
  assign bsvTopCore_cmdQController_descWriteProxy_segBuf_0_EN =
	     WILL_FIRE_RL_bsvTopCore_cmdQController_gatherResponse &&
	     bsvTopCore_cmdQController_pgtRespQ_notEmpty__2_ETC___d2271 ||
	     WILL_FIRE_RL_bsvTopCore_cmdQController_descWriteProxy_sendRespDesc ;

  // register bsvTopCore_cmdQController_descWriteProxy_segBuf_1
  assign bsvTopCore_cmdQController_descWriteProxy_segBuf_1_D_IN =
	     { 16'hAAAA,
	       bsvTopCore_cmdQController_metaDataRespQ_D_OUT[7:5],
	       bsvTopCore_cmdQController_metaDataRespQ_D_OUT[15:8],
	       bsvTopCore_cmdQController_metaDataRespQ_D_OUT[20:16],
	       bsvTopCore_cmdQController_metaDataRespQ_D_OUT[28:21],
	       bsvTopCore_cmdQController_metaDataRespQ_D_OUT[36:29],
	       bsvTopCore_cmdQController_metaDataRespQ_D_OUT[53:38],
	       7'h2A,
	       bsvTopCore_cmdQController_metaDataRespQ_D_OUT[37],
	       bsvTopCore_cmdQController_metaDataRespQ_D_OUT[61:54],
	       bsvTopCore_cmdQController_metaDataRespQ_D_OUT[69:62],
	       bsvTopCore_cmdQController_metaDataRespQ_D_OUT[77:70],
	       bsvTopCore_cmdQController_metaDataRespQ_D_OUT[101:94],
	       bsvTopCore_cmdQController_metaDataRespQ_D_OUT[125:102],
	       bsvTopCore_cmdQController_metaDataRespQ_D_OUT[85:78],
	       bsvTopCore_cmdQController_metaDataRespQ_D_OUT[149:126],
	       bsvTopCore_cmdQController_metaDataRespQ_D_OUT[93:86],
	       bsvTopCore_cmdQController_metaDataRespQ_D_OUT[173:150],
	       bsvTopCore_cmdQController_metaDataRespQ_D_OUT[205:174],
	       21'h0AAAAA,
	       bsvTopCore_cmdQController_metaDataRespQ_D_OUT[208:206],
	       bsvTopCore_cmdQController_metaDataRespQ_D_OUT[212:209],
	       bsvTopCore_cmdQController_metaDataRespQ_D_OUT[216:213] } ;
  assign bsvTopCore_cmdQController_descWriteProxy_segBuf_1_EN =
	     MUX_bsvTopCore_cmdQController_descWriteProxy_isSendingDescReg_write_1__SEL_2 ;

  // register bsvTopCore_cmdQController_descWriteProxy_segCntReg
  assign bsvTopCore_cmdQController_descWriteProxy_segCntReg_D_IN =
	     MUX_bsvTopCore_cmdQController_descWriteProxy_isSendingDescReg_write_1__SEL_2 ?
	       MUX_bsvTopCore_cmdQController_descWriteProxy_segCntReg_write_1__VAL_1 :
	       MUX_bsvTopCore_cmdQController_descWriteProxy_segCntReg_write_1__VAL_2 ;
  assign bsvTopCore_cmdQController_descWriteProxy_segCntReg_EN =
	     WILL_FIRE_RL_bsvTopCore_cmdQController_gatherResponse &&
	     bsvTopCore_cmdQController_pgtRespQ_notEmpty__2_ETC___d2271 ||
	     WILL_FIRE_RL_bsvTopCore_cmdQController_descWriteProxy_sendRespDesc ;

  // register bsvTopCore_dmaAccessH2cCltVec_3_t
  assign bsvTopCore_dmaAccessH2cCltVec_3_t_D_IN = 1'b0 ;
  assign bsvTopCore_dmaAccessH2cCltVec_3_t_EN = 1'b0 ;

  // register bsvTopCore_pgtManager_curBeatOfDataReg
  assign bsvTopCore_pgtManager_curBeatOfDataReg_D_IN =
	     bsvTopCore_pgtManager_curBeatOfDataReg[2] ?
	       { x_data__h64691,
		 x_byteEn__h64692,
		 bsvTopCore_pgtManager_curBeatOfDataReg[1:0] } :
	       (bsvTopCore_pgtManager_curBeatOfDataReg[0] ?
		  290'd0 :
		  bsvTopCore_pgtManager_dmaReadRespQ_D_OUT) ;
  assign bsvTopCore_pgtManager_curBeatOfDataReg_EN =
	     WILL_FIRE_RL_bsvTopCore_pgtManager_updatePgtStateHandleSecondStageUpdate ;

  // register bsvTopCore_pgtManager_curSecondStagePgtWriteIdxReg
  assign bsvTopCore_pgtManager_curSecondStagePgtWriteIdxReg_D_IN =
	     MUX_bsvTopCore_pgtManager_curSecondStagePgtWriteIdxReg_write_1__SEL_1 ?
	       bsvTopCore_pgtManager_reqQ_D_OUT[144:128] :
	       MUX_bsvTopCore_pgtManager_curSecondStagePgtWriteIdxReg_write_1__VAL_2 ;
  assign bsvTopCore_pgtManager_curSecondStagePgtWriteIdxReg_EN =
	     WILL_FIRE_RL_bsvTopCore_pgtManager_updatePgtStateIdle &&
	     bsvTopCore_pgtManager_reqQ_D_OUT[3:1] == 3'd1 ||
	     WILL_FIRE_RL_bsvTopCore_pgtManager_updatePgtStateHandleSecondStageUpdate &&
	     bsvTopCore_pgtManager_curBeatOfDataReg[2] ;

  // register bsvTopCore_pgtManager_state
  assign bsvTopCore_pgtManager_state_D_IN =
	     MUX_bsvTopCore_pgtManager_state_write_1__SEL_1 ?
	       MUX_bsvTopCore_pgtManager_state_write_1__VAL_1 :
	       2'd0 ;
  assign bsvTopCore_pgtManager_state_EN =
	     WILL_FIRE_RL_bsvTopCore_pgtManager_updatePgtStateIdle &&
	     (bsvTopCore_pgtManager_reqQ_D_OUT[3:1] == 3'd0 ||
	      bsvTopCore_pgtManager_reqQ_D_OUT[3:1] == 3'd1) ||
	     WILL_FIRE_RL_bsvTopCore_pgtManager_updatePgtStateHandleSecondStageUpdate &&
	     !bsvTopCore_pgtManager_curBeatOfDataReg[2] &&
	     bsvTopCore_pgtManager_curBeatOfDataReg[0] ;

  // register bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_grantReg
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_grantReg_D_IN =
	     (bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg ||
	      !bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_EMPTY_N) &&
	     bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_EMPTY_N ;
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_grantReg_EN =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_binaryArbitrate &&
	     bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg ;

  // register bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg_D_IN =
	     1'd1 ;
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg_EN =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_binaryArbitrate ;

  // register bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg_D_IN =
	     (!bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg ||
	      !bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_EMPTY_N) &&
	     (bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_EMPTY_N ||
	      !bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_EMPTY_N) ;
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg_EN =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_binaryArbitrate &&
	     bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg ;

  // register bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_grantReg
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_grantReg_D_IN =
	     (bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_priorityReg ||
	      !bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0_EMPTY_N) &&
	     bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2_EMPTY_N ;
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_grantReg_EN =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_binaryArbitrate &&
	     bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_needArbitrationReg ;

  // register bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_needArbitrationReg
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_needArbitrationReg_D_IN =
	     1'd1 ;
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_needArbitrationReg_EN =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_binaryArbitrate ;

  // register bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_priorityReg
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_priorityReg_D_IN =
	     (!bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_priorityReg ||
	      !bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2_EMPTY_N) &&
	     (bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0_EMPTY_N ||
	      !bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2_EMPTY_N) ;
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_priorityReg_EN =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_binaryArbitrate &&
	     bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_needArbitrationReg ;

  // register bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_grantReg
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_grantReg_D_IN =
	     (bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_priorityReg ||
	      !bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1_EMPTY_N) &&
	     bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3_EMPTY_N ;
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_grantReg_EN =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_binaryArbitrate &&
	     bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_needArbitrationReg ;

  // register bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_needArbitrationReg
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_needArbitrationReg_D_IN =
	     1'd1 ;
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_needArbitrationReg_EN =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_binaryArbitrate ;

  // register bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_priorityReg
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_priorityReg_D_IN =
	     (!bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_priorityReg ||
	      !bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3_EMPTY_N) &&
	     (bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1_EMPTY_N ||
	      !bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3_EMPTY_N) ;
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_priorityReg_EN =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_binaryArbitrate &&
	     bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_needArbitrationReg ;

  // register bsvTopCore_ringbufPool_arbitratedC2hClient_shouldSaveGrantIdxReg
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_shouldSaveGrantIdxReg_D_IN =
	     1'd1 ;
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_shouldSaveGrantIdxReg_EN =
	     bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_EMPTY_N &&
	     bsvTopCore_ringbufPool_arbitratedC2hClient_reqQ_FULL_N &&
	     (!bsvTopCore_ringbufPool_arbitratedC2hClient_shouldSaveGrantIdxReg ||
	      bsvTopCore_ringbufPool_arbitratedC2hClient_preGrantIdxQ_FULL_N) ;

  // register bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_grantReg
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_grantReg_D_IN =
	     (bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg ||
	      !bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_EMPTY_N) &&
	     bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_EMPTY_N ;
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_grantReg_EN =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_binaryArbitrate &&
	     bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg ;

  // register bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg_D_IN =
	     1'd1 ;
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg_EN =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_binaryArbitrate ;

  // register bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg_D_IN =
	     (!bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg ||
	      !bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_EMPTY_N) &&
	     (bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_EMPTY_N ||
	      !bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_EMPTY_N) ;
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg_EN =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_binaryArbitrate &&
	     bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg ;

  // register bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_grantReg
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_grantReg_D_IN =
	     (bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_priorityReg ||
	      !bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_0_EMPTY_N) &&
	     bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_2_EMPTY_N ;
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_grantReg_EN =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_binaryArbitrate &&
	     bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_needArbitrationReg ;

  // register bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_needArbitrationReg
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_needArbitrationReg_D_IN =
	     1'd1 ;
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_needArbitrationReg_EN =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_binaryArbitrate ;

  // register bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_priorityReg
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_priorityReg_D_IN =
	     (!bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_priorityReg ||
	      !bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_2_EMPTY_N) &&
	     (bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_0_EMPTY_N ||
	      !bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_2_EMPTY_N) ;
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_priorityReg_EN =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_binaryArbitrate &&
	     bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_needArbitrationReg ;

  // register bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_grantReg
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_grantReg_D_IN =
	     (bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_priorityReg ||
	      !bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_1_EMPTY_N) &&
	     bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_3_EMPTY_N ;
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_grantReg_EN =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_binaryArbitrate &&
	     bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_needArbitrationReg ;

  // register bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_needArbitrationReg
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_needArbitrationReg_D_IN =
	     1'd1 ;
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_needArbitrationReg_EN =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_binaryArbitrate ;

  // register bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_priorityReg
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_priorityReg_D_IN =
	     (!bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_priorityReg ||
	      !bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_3_EMPTY_N) &&
	     (bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_1_EMPTY_N ||
	      !bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_3_EMPTY_N) ;
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_priorityReg_EN =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_binaryArbitrate &&
	     bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_needArbitrationReg ;

  // register bsvTopCore_ringbufPool_arbitratedH2cClient_shouldSaveGrantIdxReg
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_shouldSaveGrantIdxReg_D_IN =
	     1'd1 ;
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_shouldSaveGrantIdxReg_EN =
	     bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_EMPTY_N &&
	     bsvTopCore_ringbufPool_arbitratedH2cClient_reqQ_FULL_N &&
	     (!bsvTopCore_ringbufPool_arbitratedH2cClient_shouldSaveGrantIdxReg ||
	      bsvTopCore_ringbufPool_arbitratedH2cClient_preGrantIdxQ_FULL_N) ;

  // register bsvTopCore_ringbufPool_controller_0_baseAddrReg
  assign bsvTopCore_ringbufPool_controller_0_baseAddrReg_D_IN =
	     (bsvTopCore_regBlock_writeReqQ_D_OUT[38:36] == 3'd0 &&
	      bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd0 &&
	      bsvTopCore_regBlock_writeReqQ_D_OUT[39]) ?
	       x__h52097 :
	       x__h52946 ;
  assign bsvTopCore_ringbufPool_controller_0_baseAddrReg_EN =
	     WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[38:36] == 3'd0 &&
	     (bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd0 ||
	      bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd1) &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[39] ;

  // register bsvTopCore_ringbufPool_controller_0_baseAddrReg_1
  assign bsvTopCore_ringbufPool_controller_0_baseAddrReg_1_D_IN =
	     (bsvTopCore_regBlock_writeReqQ_D_OUT[38:36] == 3'd0 &&
	      bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd0 &&
	      !bsvTopCore_regBlock_writeReqQ_D_OUT[39]) ?
	       x__h52547 :
	       x__h53306 ;
  assign bsvTopCore_ringbufPool_controller_0_baseAddrReg_1_EN =
	     WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[38:36] == 3'd0 &&
	     (bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd0 ||
	      bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd1) &&
	     !bsvTopCore_regBlock_writeReqQ_D_OUT[39] ;

  // register bsvTopCore_ringbufPool_controller_0_headReg
  assign bsvTopCore_ringbufPool_controller_0_headReg_D_IN =
	     bsvTopCore_regBlock_writeReqQ_D_OUT[7:0] ;
  assign bsvTopCore_ringbufPool_controller_0_headReg_EN =
	     WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[38:36] == 3'd0 &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd2 &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[39] ;

  // register bsvTopCore_ringbufPool_controller_0_headReg_1
  assign bsvTopCore_ringbufPool_controller_0_headReg_1_D_IN =
	     MUX_bsvTopCore_ringbufPool_controller_0_headReg_1_write_1__SEL_1 ?
	       bsvTopCore_regBlock_writeReqQ_D_OUT[7:0] :
	       MUX_bsvTopCore_ringbufPool_controller_0_headReg_1_write_1__VAL_2 ;
  assign bsvTopCore_ringbufPool_controller_0_headReg_1_EN =
	     WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[38:36] == 3'd0 &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd2 &&
	     !bsvTopCore_regBlock_writeReqQ_D_OUT[39] ||
	     bsvTopCore_ringbufPool_controller_0_dmaRespQ_1_EMPTY_N &&
	     !WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite ;

  // register bsvTopCore_ringbufPool_controller_0_headShadowReg
  assign bsvTopCore_ringbufPool_controller_0_headShadowReg_D_IN =
	     bsvTopCore_ringbufPool_controller_0_headShadowReg + 8'd1 ;
  assign bsvTopCore_ringbufPool_controller_0_headShadowReg_EN =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_0_sendDmaReq_1 &&
	     (!bsvTopCore_ringbufPool_controller_0_headShadow_ETC___d731 ||
	      bsvTopCore_ringbufPool_controller_0_headShadow_ETC___d734) &&
	     bsvTopCore_ringbufPool_t_0_bufQ_1_EMPTY_N ;

  // register bsvTopCore_ringbufPool_controller_0_ruleState
  assign bsvTopCore_ringbufPool_controller_0_ruleState_D_IN =
	     MUX_bsvTopCore_ringbufPool_controller_0_ruleState_write_1__SEL_1 ;
  assign bsvTopCore_ringbufPool_controller_0_ruleState_EN =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_0_sendDmaReq &&
	     (!bsvTopCore_ringbufPool_controller_0_headReg_re_ETC___d435 ||
	      !bsvTopCore_ringbufPool_controller_0_headReg_re_ETC___d438) &&
	     !bsvTopCore_ringbufPool_t_0_bufQ_EMPTY_N ||
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_0_recvDmaResp &&
	     bsvTopCore_ringbufPool_controller_0_tailPosInReadBlockReg ==
	     3'd0 &&
	     bsvTopCore_ringbufPool_controller_0_dmaRespQ_D_OUT[0] ;

  // register bsvTopCore_ringbufPool_controller_0_tailPosInReadBlockReg
  assign bsvTopCore_ringbufPool_controller_0_tailPosInReadBlockReg_D_IN =
	     MUX_bsvTopCore_ringbufPool_controller_0_tailPosInReadBlockReg_write_1__SEL_1 ?
	       MUX_bsvTopCore_ringbufPool_controller_0_tailPosInReadBlockReg_write_1__VAL_1 :
	       bsvTopCore_ringbufPool_controller_0_tailReg[2:0] ;
  assign bsvTopCore_ringbufPool_controller_0_tailPosInReadBlockReg_EN =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_0_recvDmaResp &&
	     bsvTopCore_ringbufPool_controller_0_tailPosInReadBlockReg !=
	     3'd0 ||
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_0_sendDmaReq &&
	     (!bsvTopCore_ringbufPool_controller_0_headReg_re_ETC___d435 ||
	      !bsvTopCore_ringbufPool_controller_0_headReg_re_ETC___d438) &&
	     !bsvTopCore_ringbufPool_t_0_bufQ_EMPTY_N ;

  // register bsvTopCore_ringbufPool_controller_0_tailReg
  assign bsvTopCore_ringbufPool_controller_0_tailReg_D_IN =
	     MUX_bsvTopCore_ringbufPool_controller_0_tailReg_write_1__SEL_1 ?
	       bsvTopCore_ringbufPool_controller_0_tailReg_re_ETC___d488 :
	       bsvTopCore_regBlock_writeReqQ_D_OUT[7:0] ;
  assign bsvTopCore_ringbufPool_controller_0_tailReg_EN =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_0_recvDmaResp &&
	     bsvTopCore_ringbufPool_controller_0_tailPosInReadBlockReg ==
	     3'd0 &&
	     (!bsvTopCore_ringbufPool_controller_0_tailReg_re_ETC___d473 ||
	      !bsvTopCore_ringbufPool_controller_0_tailReg_re_ETC___d475) ||
	     WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[38:36] == 3'd0 &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd3 &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[39] ;

  // register bsvTopCore_ringbufPool_controller_0_tailReg_1
  assign bsvTopCore_ringbufPool_controller_0_tailReg_1_D_IN =
	     bsvTopCore_regBlock_writeReqQ_D_OUT[7:0] ;
  assign bsvTopCore_ringbufPool_controller_0_tailReg_1_EN =
	     WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[38:36] == 3'd0 &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd3 &&
	     !bsvTopCore_regBlock_writeReqQ_D_OUT[39] ;

  // register bsvTopCore_ringbufPool_controller_0_tailShadowReg
  assign bsvTopCore_ringbufPool_controller_0_tailShadowReg_D_IN =
	     (bsvTopCore_ringbufPool_controller_0_headReg -
	      bsvTopCore_ringbufPool_controller_0_tailShadowReg <=
	      8'd8 -
	      { 5'd0,
		bsvTopCore_ringbufPool_controller_0_tailShadowReg[2:0] }) ?
	       bsvTopCore_ringbufPool_controller_0_headReg :
	       { bsvTopCore_ringbufPool_controller_0_tailShadow_ETC__q43[7:3],
		 3'd0 } ;
  assign bsvTopCore_ringbufPool_controller_0_tailShadowReg_EN =
	     MUX_bsvTopCore_ringbufPool_controller_0_ruleState_write_1__SEL_1 ;

  // register bsvTopCore_ringbufPool_controller_1_baseAddrReg
  assign bsvTopCore_ringbufPool_controller_1_baseAddrReg_D_IN =
	     (bsvTopCore_regBlock_writeReqQ_D_OUT[38:36] == 3'd1 &&
	      bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd0 &&
	      bsvTopCore_regBlock_writeReqQ_D_OUT[39]) ?
	       x__h52097 :
	       x__h52946 ;
  assign bsvTopCore_ringbufPool_controller_1_baseAddrReg_EN =
	     WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[38:36] == 3'd1 &&
	     (bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd0 ||
	      bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd1) &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[39] ;

  // register bsvTopCore_ringbufPool_controller_1_baseAddrReg_1
  assign bsvTopCore_ringbufPool_controller_1_baseAddrReg_1_D_IN =
	     (bsvTopCore_regBlock_writeReqQ_D_OUT[38:36] == 3'd1 &&
	      bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd0 &&
	      !bsvTopCore_regBlock_writeReqQ_D_OUT[39]) ?
	       x__h52547 :
	       x__h53306 ;
  assign bsvTopCore_ringbufPool_controller_1_baseAddrReg_1_EN =
	     WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[38:36] == 3'd1 &&
	     (bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd0 ||
	      bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd1) &&
	     !bsvTopCore_regBlock_writeReqQ_D_OUT[39] ;

  // register bsvTopCore_ringbufPool_controller_1_headReg
  assign bsvTopCore_ringbufPool_controller_1_headReg_D_IN =
	     bsvTopCore_regBlock_writeReqQ_D_OUT[7:0] ;
  assign bsvTopCore_ringbufPool_controller_1_headReg_EN =
	     WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[38:36] == 3'd1 &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd2 &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[39] ;

  // register bsvTopCore_ringbufPool_controller_1_headReg_1
  assign bsvTopCore_ringbufPool_controller_1_headReg_1_D_IN =
	     MUX_bsvTopCore_ringbufPool_controller_1_headReg_1_write_1__SEL_1 ?
	       bsvTopCore_regBlock_writeReqQ_D_OUT[7:0] :
	       MUX_bsvTopCore_ringbufPool_controller_1_headReg_1_write_1__VAL_2 ;
  assign bsvTopCore_ringbufPool_controller_1_headReg_1_EN =
	     WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[38:36] == 3'd1 &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd2 &&
	     !bsvTopCore_regBlock_writeReqQ_D_OUT[39] ||
	     bsvTopCore_ringbufPool_controller_1_dmaRespQ_1_EMPTY_N &&
	     !WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite ;

  // register bsvTopCore_ringbufPool_controller_1_headShadowReg
  assign bsvTopCore_ringbufPool_controller_1_headShadowReg_D_IN =
	     bsvTopCore_ringbufPool_controller_1_headShadowReg + 8'd1 ;
  assign bsvTopCore_ringbufPool_controller_1_headShadowReg_EN =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_1_sendDmaReq_1 &&
	     (!bsvTopCore_ringbufPool_controller_1_headShadow_ETC___d761 ||
	      bsvTopCore_ringbufPool_controller_1_headShadow_ETC___d764) &&
	     bsvTopCore_ringbufPool_t_1_bufQ_1_EMPTY_N ;

  // register bsvTopCore_ringbufPool_controller_1_ruleState
  assign bsvTopCore_ringbufPool_controller_1_ruleState_D_IN =
	     MUX_bsvTopCore_ringbufPool_controller_1_ruleState_write_1__SEL_1 ;
  assign bsvTopCore_ringbufPool_controller_1_ruleState_EN =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_1_sendDmaReq &&
	     (!bsvTopCore_ringbufPool_controller_1_headReg_re_ETC___d509 ||
	      !bsvTopCore_ringbufPool_controller_1_headReg_re_ETC___d512) &&
	     !bsvTopCore_ringbufPool_t_1_bufQ_EMPTY_N ||
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_1_recvDmaResp &&
	     bsvTopCore_ringbufPool_controller_1_tailPosInReadBlockReg ==
	     3'd0 &&
	     bsvTopCore_ringbufPool_controller_1_dmaRespQ_D_OUT[0] ;

  // register bsvTopCore_ringbufPool_controller_1_tailPosInReadBlockReg
  assign bsvTopCore_ringbufPool_controller_1_tailPosInReadBlockReg_D_IN =
	     MUX_bsvTopCore_ringbufPool_controller_1_tailPosInReadBlockReg_write_1__SEL_1 ?
	       MUX_bsvTopCore_ringbufPool_controller_1_tailPosInReadBlockReg_write_1__VAL_1 :
	       bsvTopCore_ringbufPool_controller_1_tailReg[2:0] ;
  assign bsvTopCore_ringbufPool_controller_1_tailPosInReadBlockReg_EN =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_1_recvDmaResp &&
	     bsvTopCore_ringbufPool_controller_1_tailPosInReadBlockReg !=
	     3'd0 ||
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_1_sendDmaReq &&
	     (!bsvTopCore_ringbufPool_controller_1_headReg_re_ETC___d509 ||
	      !bsvTopCore_ringbufPool_controller_1_headReg_re_ETC___d512) &&
	     !bsvTopCore_ringbufPool_t_1_bufQ_EMPTY_N ;

  // register bsvTopCore_ringbufPool_controller_1_tailReg
  assign bsvTopCore_ringbufPool_controller_1_tailReg_D_IN =
	     MUX_bsvTopCore_ringbufPool_controller_1_tailReg_write_1__SEL_1 ?
	       bsvTopCore_ringbufPool_controller_1_tailReg_re_ETC___d562 :
	       bsvTopCore_regBlock_writeReqQ_D_OUT[7:0] ;
  assign bsvTopCore_ringbufPool_controller_1_tailReg_EN =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_1_recvDmaResp &&
	     bsvTopCore_ringbufPool_controller_1_tailPosInReadBlockReg ==
	     3'd0 &&
	     (!bsvTopCore_ringbufPool_controller_1_tailReg_re_ETC___d547 ||
	      !bsvTopCore_ringbufPool_controller_1_tailReg_re_ETC___d549) ||
	     WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[38:36] == 3'd1 &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd3 &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[39] ;

  // register bsvTopCore_ringbufPool_controller_1_tailReg_1
  assign bsvTopCore_ringbufPool_controller_1_tailReg_1_D_IN =
	     bsvTopCore_regBlock_writeReqQ_D_OUT[7:0] ;
  assign bsvTopCore_ringbufPool_controller_1_tailReg_1_EN =
	     WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[38:36] == 3'd1 &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd3 &&
	     !bsvTopCore_regBlock_writeReqQ_D_OUT[39] ;

  // register bsvTopCore_ringbufPool_controller_1_tailShadowReg
  assign bsvTopCore_ringbufPool_controller_1_tailShadowReg_D_IN =
	     (bsvTopCore_ringbufPool_controller_1_headReg -
	      bsvTopCore_ringbufPool_controller_1_tailShadowReg <=
	      8'd8 -
	      { 5'd0,
		bsvTopCore_ringbufPool_controller_1_tailShadowReg[2:0] }) ?
	       bsvTopCore_ringbufPool_controller_1_headReg :
	       { bsvTopCore_ringbufPool_controller_1_tailShadow_ETC__q44[7:3],
		 3'd0 } ;
  assign bsvTopCore_ringbufPool_controller_1_tailShadowReg_EN =
	     MUX_bsvTopCore_ringbufPool_controller_1_ruleState_write_1__SEL_1 ;

  // register bsvTopCore_ringbufPool_controller_2_baseAddrReg
  assign bsvTopCore_ringbufPool_controller_2_baseAddrReg_D_IN =
	     (bsvTopCore_regBlock_writeReqQ_D_OUT[38:36] == 3'd2 &&
	      bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd0 &&
	      bsvTopCore_regBlock_writeReqQ_D_OUT[39]) ?
	       x__h52097 :
	       x__h52946 ;
  assign bsvTopCore_ringbufPool_controller_2_baseAddrReg_EN =
	     WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[38:36] == 3'd2 &&
	     (bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd0 ||
	      bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd1) &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[39] ;

  // register bsvTopCore_ringbufPool_controller_2_baseAddrReg_1
  assign bsvTopCore_ringbufPool_controller_2_baseAddrReg_1_D_IN =
	     (bsvTopCore_regBlock_writeReqQ_D_OUT[38:36] == 3'd2 &&
	      bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd0 &&
	      !bsvTopCore_regBlock_writeReqQ_D_OUT[39]) ?
	       x__h52547 :
	       x__h53306 ;
  assign bsvTopCore_ringbufPool_controller_2_baseAddrReg_1_EN =
	     WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[38:36] == 3'd2 &&
	     (bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd0 ||
	      bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd1) &&
	     !bsvTopCore_regBlock_writeReqQ_D_OUT[39] ;

  // register bsvTopCore_ringbufPool_controller_2_headReg
  assign bsvTopCore_ringbufPool_controller_2_headReg_D_IN =
	     bsvTopCore_regBlock_writeReqQ_D_OUT[7:0] ;
  assign bsvTopCore_ringbufPool_controller_2_headReg_EN =
	     WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[38:36] == 3'd2 &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd2 &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[39] ;

  // register bsvTopCore_ringbufPool_controller_2_headReg_1
  assign bsvTopCore_ringbufPool_controller_2_headReg_1_D_IN =
	     MUX_bsvTopCore_ringbufPool_controller_2_headReg_1_write_1__SEL_1 ?
	       bsvTopCore_regBlock_writeReqQ_D_OUT[7:0] :
	       MUX_bsvTopCore_ringbufPool_controller_2_headReg_1_write_1__VAL_2 ;
  assign bsvTopCore_ringbufPool_controller_2_headReg_1_EN =
	     WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[38:36] == 3'd2 &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd2 &&
	     !bsvTopCore_regBlock_writeReqQ_D_OUT[39] ||
	     bsvTopCore_ringbufPool_controller_2_dmaRespQ_1_EMPTY_N &&
	     !WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite ;

  // register bsvTopCore_ringbufPool_controller_2_headShadowReg
  assign bsvTopCore_ringbufPool_controller_2_headShadowReg_D_IN =
	     bsvTopCore_ringbufPool_controller_2_headShadowReg + 8'd1 ;
  assign bsvTopCore_ringbufPool_controller_2_headShadowReg_EN =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_2_sendDmaReq_1 &&
	     (!bsvTopCore_ringbufPool_controller_2_headShadow_ETC___d791 ||
	      bsvTopCore_ringbufPool_controller_2_headShadow_ETC___d794) &&
	     bsvTopCore_ringbufPool_t_2_bufQ_1_EMPTY_N ;

  // register bsvTopCore_ringbufPool_controller_2_ruleState
  assign bsvTopCore_ringbufPool_controller_2_ruleState_D_IN =
	     MUX_bsvTopCore_ringbufPool_controller_2_ruleState_write_1__SEL_1 ;
  assign bsvTopCore_ringbufPool_controller_2_ruleState_EN =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_2_sendDmaReq &&
	     (!bsvTopCore_ringbufPool_controller_2_headReg_re_ETC___d583 ||
	      !bsvTopCore_ringbufPool_controller_2_headReg_re_ETC___d586) &&
	     !bsvTopCore_ringbufPool_t_2_bufQ_EMPTY_N ||
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_2_recvDmaResp &&
	     bsvTopCore_ringbufPool_controller_2_tailPosInReadBlockReg ==
	     3'd0 &&
	     bsvTopCore_ringbufPool_controller_2_dmaRespQ_D_OUT[0] ;

  // register bsvTopCore_ringbufPool_controller_2_tailPosInReadBlockReg
  assign bsvTopCore_ringbufPool_controller_2_tailPosInReadBlockReg_D_IN =
	     MUX_bsvTopCore_ringbufPool_controller_2_tailPosInReadBlockReg_write_1__SEL_1 ?
	       MUX_bsvTopCore_ringbufPool_controller_2_tailPosInReadBlockReg_write_1__VAL_1 :
	       bsvTopCore_ringbufPool_controller_2_tailReg[2:0] ;
  assign bsvTopCore_ringbufPool_controller_2_tailPosInReadBlockReg_EN =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_2_recvDmaResp &&
	     bsvTopCore_ringbufPool_controller_2_tailPosInReadBlockReg !=
	     3'd0 ||
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_2_sendDmaReq &&
	     (!bsvTopCore_ringbufPool_controller_2_headReg_re_ETC___d583 ||
	      !bsvTopCore_ringbufPool_controller_2_headReg_re_ETC___d586) &&
	     !bsvTopCore_ringbufPool_t_2_bufQ_EMPTY_N ;

  // register bsvTopCore_ringbufPool_controller_2_tailReg
  assign bsvTopCore_ringbufPool_controller_2_tailReg_D_IN =
	     MUX_bsvTopCore_ringbufPool_controller_2_tailReg_write_1__SEL_1 ?
	       bsvTopCore_ringbufPool_controller_2_tailReg_re_ETC___d636 :
	       bsvTopCore_regBlock_writeReqQ_D_OUT[7:0] ;
  assign bsvTopCore_ringbufPool_controller_2_tailReg_EN =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_2_recvDmaResp &&
	     bsvTopCore_ringbufPool_controller_2_tailPosInReadBlockReg ==
	     3'd0 &&
	     (!bsvTopCore_ringbufPool_controller_2_tailReg_re_ETC___d621 ||
	      !bsvTopCore_ringbufPool_controller_2_tailReg_re_ETC___d623) ||
	     WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[38:36] == 3'd2 &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd3 &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[39] ;

  // register bsvTopCore_ringbufPool_controller_2_tailReg_1
  assign bsvTopCore_ringbufPool_controller_2_tailReg_1_D_IN =
	     bsvTopCore_regBlock_writeReqQ_D_OUT[7:0] ;
  assign bsvTopCore_ringbufPool_controller_2_tailReg_1_EN =
	     WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[38:36] == 3'd2 &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd3 &&
	     !bsvTopCore_regBlock_writeReqQ_D_OUT[39] ;

  // register bsvTopCore_ringbufPool_controller_2_tailShadowReg
  assign bsvTopCore_ringbufPool_controller_2_tailShadowReg_D_IN =
	     (bsvTopCore_ringbufPool_controller_2_headReg -
	      bsvTopCore_ringbufPool_controller_2_tailShadowReg <=
	      8'd8 -
	      { 5'd0,
		bsvTopCore_ringbufPool_controller_2_tailShadowReg[2:0] }) ?
	       bsvTopCore_ringbufPool_controller_2_headReg :
	       { bsvTopCore_ringbufPool_controller_2_tailShadow_ETC__q45[7:3],
		 3'd0 } ;
  assign bsvTopCore_ringbufPool_controller_2_tailShadowReg_EN =
	     MUX_bsvTopCore_ringbufPool_controller_2_ruleState_write_1__SEL_1 ;

  // register bsvTopCore_ringbufPool_controller_3_baseAddrReg
  assign bsvTopCore_ringbufPool_controller_3_baseAddrReg_D_IN =
	     (bsvTopCore_regBlock_writeReqQ_D_OUT[38:36] == 3'd3 &&
	      bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd0 &&
	      bsvTopCore_regBlock_writeReqQ_D_OUT[39]) ?
	       x__h52097 :
	       x__h52946 ;
  assign bsvTopCore_ringbufPool_controller_3_baseAddrReg_EN =
	     WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[38:36] == 3'd3 &&
	     (bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd0 ||
	      bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd1) &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[39] ;

  // register bsvTopCore_ringbufPool_controller_3_baseAddrReg_1
  assign bsvTopCore_ringbufPool_controller_3_baseAddrReg_1_D_IN =
	     (bsvTopCore_regBlock_writeReqQ_D_OUT[38:36] == 3'd3 &&
	      bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd0 &&
	      !bsvTopCore_regBlock_writeReqQ_D_OUT[39]) ?
	       x__h52547 :
	       x__h53306 ;
  assign bsvTopCore_ringbufPool_controller_3_baseAddrReg_1_EN =
	     WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[38:36] == 3'd3 &&
	     (bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd0 ||
	      bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd1) &&
	     !bsvTopCore_regBlock_writeReqQ_D_OUT[39] ;

  // register bsvTopCore_ringbufPool_controller_3_headReg
  assign bsvTopCore_ringbufPool_controller_3_headReg_D_IN =
	     bsvTopCore_regBlock_writeReqQ_D_OUT[7:0] ;
  assign bsvTopCore_ringbufPool_controller_3_headReg_EN =
	     WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[38:36] == 3'd3 &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd2 &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[39] ;

  // register bsvTopCore_ringbufPool_controller_3_headReg_1
  assign bsvTopCore_ringbufPool_controller_3_headReg_1_D_IN =
	     MUX_bsvTopCore_ringbufPool_controller_3_headReg_1_write_1__SEL_1 ?
	       bsvTopCore_regBlock_writeReqQ_D_OUT[7:0] :
	       MUX_bsvTopCore_ringbufPool_controller_3_headReg_1_write_1__VAL_2 ;
  assign bsvTopCore_ringbufPool_controller_3_headReg_1_EN =
	     WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[38:36] == 3'd3 &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd2 &&
	     !bsvTopCore_regBlock_writeReqQ_D_OUT[39] ||
	     bsvTopCore_ringbufPool_controller_3_dmaRespQ_1_EMPTY_N &&
	     !WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite ;

  // register bsvTopCore_ringbufPool_controller_3_headShadowReg
  assign bsvTopCore_ringbufPool_controller_3_headShadowReg_D_IN =
	     bsvTopCore_ringbufPool_controller_3_headShadowReg + 8'd1 ;
  assign bsvTopCore_ringbufPool_controller_3_headShadowReg_EN =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_3_sendDmaReq_1 &&
	     (!bsvTopCore_ringbufPool_controller_3_headShadow_ETC___d821 ||
	      bsvTopCore_ringbufPool_controller_3_headShadow_ETC___d824) &&
	     bsvTopCore_ringbufPool_t_3_bufQ_1_EMPTY_N ;

  // register bsvTopCore_ringbufPool_controller_3_ruleState
  assign bsvTopCore_ringbufPool_controller_3_ruleState_D_IN =
	     MUX_bsvTopCore_ringbufPool_controller_3_ruleState_write_1__SEL_1 ;
  assign bsvTopCore_ringbufPool_controller_3_ruleState_EN =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_3_sendDmaReq &&
	     (!bsvTopCore_ringbufPool_controller_3_headReg_re_ETC___d657 ||
	      !bsvTopCore_ringbufPool_controller_3_headReg_re_ETC___d660) &&
	     !bsvTopCore_ringbufPool_t_3_bufQ_EMPTY_N ||
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_3_recvDmaResp &&
	     bsvTopCore_ringbufPool_controller_3_tailPosInReadBlockReg ==
	     3'd0 &&
	     bsvTopCore_ringbufPool_controller_3_dmaRespQ_D_OUT[0] ;

  // register bsvTopCore_ringbufPool_controller_3_tailPosInReadBlockReg
  assign bsvTopCore_ringbufPool_controller_3_tailPosInReadBlockReg_D_IN =
	     MUX_bsvTopCore_ringbufPool_controller_3_tailPosInReadBlockReg_write_1__SEL_1 ?
	       MUX_bsvTopCore_ringbufPool_controller_3_tailPosInReadBlockReg_write_1__VAL_1 :
	       bsvTopCore_ringbufPool_controller_3_tailReg[2:0] ;
  assign bsvTopCore_ringbufPool_controller_3_tailPosInReadBlockReg_EN =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_3_recvDmaResp &&
	     bsvTopCore_ringbufPool_controller_3_tailPosInReadBlockReg !=
	     3'd0 ||
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_3_sendDmaReq &&
	     (!bsvTopCore_ringbufPool_controller_3_headReg_re_ETC___d657 ||
	      !bsvTopCore_ringbufPool_controller_3_headReg_re_ETC___d660) &&
	     !bsvTopCore_ringbufPool_t_3_bufQ_EMPTY_N ;

  // register bsvTopCore_ringbufPool_controller_3_tailReg
  assign bsvTopCore_ringbufPool_controller_3_tailReg_D_IN =
	     MUX_bsvTopCore_ringbufPool_controller_3_tailReg_write_1__SEL_1 ?
	       bsvTopCore_ringbufPool_controller_3_tailReg_re_ETC___d710 :
	       bsvTopCore_regBlock_writeReqQ_D_OUT[7:0] ;
  assign bsvTopCore_ringbufPool_controller_3_tailReg_EN =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_3_recvDmaResp &&
	     bsvTopCore_ringbufPool_controller_3_tailPosInReadBlockReg ==
	     3'd0 &&
	     (!bsvTopCore_ringbufPool_controller_3_tailReg_re_ETC___d695 ||
	      !bsvTopCore_ringbufPool_controller_3_tailReg_re_ETC___d697) ||
	     WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[38:36] == 3'd3 &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd3 &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[39] ;

  // register bsvTopCore_ringbufPool_controller_3_tailReg_1
  assign bsvTopCore_ringbufPool_controller_3_tailReg_1_D_IN =
	     bsvTopCore_regBlock_writeReqQ_D_OUT[7:0] ;
  assign bsvTopCore_ringbufPool_controller_3_tailReg_1_EN =
	     WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[38:36] == 3'd3 &&
	     bsvTopCore_regBlock_writeReqQ_D_OUT[35:34] == 2'd3 &&
	     !bsvTopCore_regBlock_writeReqQ_D_OUT[39] ;

  // register bsvTopCore_ringbufPool_controller_3_tailShadowReg
  assign bsvTopCore_ringbufPool_controller_3_tailShadowReg_D_IN =
	     (bsvTopCore_ringbufPool_controller_3_headReg -
	      bsvTopCore_ringbufPool_controller_3_tailShadowReg <=
	      8'd8 -
	      { 5'd0,
		bsvTopCore_ringbufPool_controller_3_tailShadowReg[2:0] }) ?
	       bsvTopCore_ringbufPool_controller_3_headReg :
	       { bsvTopCore_ringbufPool_controller_3_tailShadow_ETC__q46[7:3],
		 3'd0 } ;
  assign bsvTopCore_ringbufPool_controller_3_tailShadowReg_EN =
	     MUX_bsvTopCore_ringbufPool_controller_3_ruleState_write_1__SEL_1 ;

  // register bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_cnt
  assign bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_cnt_D_IN =
	     bsvTopCore_tlb_firstStageCache_bram2Port_serve_ETC___d1360 ;
  assign bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_cnt_EN =
	     WILL_FIRE_RL_bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_stageReadResponseAlways ||
	     bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_dequeueing_whas ;

  // register bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_s1
  assign bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_s1_D_IN =
	     WILL_FIRE_RL_bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_stageReadResponseAlways ?
	       2'd3 :
	       2'd0 ;
  assign bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_s1_EN =
	     1'd1 ;

  // register bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_s2
  assign bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_s2_D_IN =
	     bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_s1 ;
  assign bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_s2_EN =
	     bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_s1[1] ||
	     bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_s2[1] ;

  // register bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_cnt
  assign bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_cnt_D_IN =
	     bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_cnt +
	     4'd0 +
	     4'd0 ;
  assign bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_cnt_EN =
	     1'b0 ;

  // register bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_s1
  assign bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_s1_D_IN =
	     MUX_bsvTopCore_pgtManager_respQ_enq_1__SEL_1 ? 2'd2 : 2'd0 ;
  assign bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_s1_EN =
	     1'd1 ;

  // register bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_s2
  assign bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_s2_D_IN =
	     bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_s1 ;
  assign bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_s2_EN =
	     bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_s1[1] ||
	     bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_s2[1] ;

  // register bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_cnt
  assign bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_cnt_D_IN =
	     bsvTopCore_tlb_secondStageCache_bram2Port_serv_ETC___d1475 ;
  assign bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_cnt_EN =
	     WILL_FIRE_RL_bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_stageReadResponseAlways ||
	     bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_dequeueing_whas ;

  // register bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_s1
  assign bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_s1_D_IN =
	     WILL_FIRE_RL_bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_stageReadResponseAlways ?
	       2'd3 :
	       2'd0 ;
  assign bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_s1_EN =
	     1'd1 ;

  // register bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_s2
  assign bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_s2_D_IN =
	     bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_s1 ;
  assign bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_s2_EN =
	     bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_s1[1] ||
	     bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_s2[1] ;

  // register bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_cnt
  assign bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_cnt_D_IN =
	     bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_cnt +
	     4'd0 +
	     4'd0 ;
  assign bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_cnt_EN =
	     1'b0 ;

  // register bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_s1
  assign bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_s1_D_IN =
	     MUX_bsvTopCore_pgtManager_curSecondStagePgtWriteIdxReg_write_1__SEL_2 ?
	       2'd2 :
	       2'd0 ;
  assign bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_s1_EN =
	     1'd1 ;

  // register bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_s2
  assign bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_s2_D_IN =
	     bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_s1 ;
  assign bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_s2_EN =
	     bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_s1[1] ||
	     bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_s2[1] ;

  // register bsvTopCore_workAndCompleteQController_sqDescReadProxy_curSegCntReg
  assign bsvTopCore_workAndCompleteQController_sqDescReadProxy_curSegCntReg_D_IN =
	     curSegCnt__h104416 + 4'd1 ;
  assign bsvTopCore_workAndCompleteQController_sqDescReadProxy_curSegCntReg_EN =
	     WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_sqDescReadProxy_fillAllReqSegments ;

  // register bsvTopCore_workAndCompleteQController_sqDescReadProxy_isFillingReqSegmentsReg
  assign bsvTopCore_workAndCompleteQController_sqDescReadProxy_isFillingReqSegmentsReg_D_IN =
	     !WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_sqDescReadProxy_fillAllReqSegments ||
	     MUX_bsvTopCore_workAndCompleteQController_sqDescReadProxy_isFillingReqSegmentsReg_write_1__VAL_1 ;
  assign bsvTopCore_workAndCompleteQController_sqDescReadProxy_isFillingReqSegmentsReg_EN =
	     WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_sqDescReadProxy_fillAllReqSegments ||
	     WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ ;

  // register bsvTopCore_workAndCompleteQController_sqDescReadProxy_isFirstReqSegmentsReg
  assign bsvTopCore_workAndCompleteQController_sqDescReadProxy_isFirstReqSegmentsReg_D_IN =
	     totalSegCnt__h104415 == curSegCnt__h104416 ;
  assign bsvTopCore_workAndCompleteQController_sqDescReadProxy_isFirstReqSegmentsReg_EN =
	     WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_sqDescReadProxy_fillAllReqSegments ;

  // register bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_0
  assign bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_0_D_IN =
	     bsvTopCore_workAndCompleteQController_sqDescReadProxy_ringbufQ_D_OUT ;
  assign bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_0_EN =
	     WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_sqDescReadProxy_fillAllReqSegments ;

  // register bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1
  assign bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1_D_IN =
	     bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_0 ;
  assign bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1_EN =
	     WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_sqDescReadProxy_fillAllReqSegments ;

  // register bsvTopCore_workAndCompleteQController_sqDescReadProxy_totalSegCntReg
  assign bsvTopCore_workAndCompleteQController_sqDescReadProxy_totalSegCntReg_D_IN =
	     totalSegCnt__h104415 ;
  assign bsvTopCore_workAndCompleteQController_sqDescReadProxy_totalSegCntReg_EN =
	     WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_sqDescReadProxy_fillAllReqSegments ;

  // register bsvTopCore_xdmaGearbox_c2hReqGearbox_block0_status
  assign bsvTopCore_xdmaGearbox_c2hReqGearbox_block0_status_D_IN =
	     !bsvTopCore_xdmaGearbox_c2hReqGearbox_block0_status ;
  assign bsvTopCore_xdmaGearbox_c2hReqGearbox_block0_status_EN =
	     WILL_FIRE_RL_ClientServerRequest_3 &&
	     !bsvTopCore_xdmaGearbox_c2hReqGearbox_read_block ;

  // register bsvTopCore_xdmaGearbox_c2hReqGearbox_block1_status
  assign bsvTopCore_xdmaGearbox_c2hReqGearbox_block1_status_D_IN =
	     !bsvTopCore_xdmaGearbox_c2hReqGearbox_block1_status ;
  assign bsvTopCore_xdmaGearbox_c2hReqGearbox_block1_status_EN =
	     WILL_FIRE_RL_ClientServerRequest_3 &&
	     bsvTopCore_xdmaGearbox_c2hReqGearbox_read_block ;

  // register bsvTopCore_xdmaGearbox_c2hReqGearbox_dInReset_pre_isInReset
  assign bsvTopCore_xdmaGearbox_c2hReqGearbox_dInReset_pre_isInReset_D_IN =
	     1'd0 ;
  assign bsvTopCore_xdmaGearbox_c2hReqGearbox_dInReset_pre_isInReset_EN =
	     bsvTopCore_xdmaGearbox_c2hReqGearbox_dInReset_pre_isInReset ;

  // register bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_status_0
  assign bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_status_0_D_IN =
	     !bsvTopCore_xdmaGearbox_c2hReqGearbox_block0_status ;
  assign bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_status_0_EN =
	     WILL_FIRE_RL_bsvTopCore_xdmaGearbox_forwardC2hReq &&
	     !bsvTopCore_xdmaGearbox_c2hReqGearbox_write_block ;

  // register bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_status_1
  assign bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_status_1_D_IN =
	     bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_status_0 ;
  assign bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_status_1_EN =
	     WILL_FIRE_RL_bsvTopCore_xdmaGearbox_forwardC2hReq &&
	     !bsvTopCore_xdmaGearbox_c2hReqGearbox_write_block ;

  // register bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_status_0
  assign bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_status_0_D_IN =
	     !bsvTopCore_xdmaGearbox_c2hReqGearbox_block1_status ;
  assign bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_status_0_EN =
	     WILL_FIRE_RL_bsvTopCore_xdmaGearbox_forwardC2hReq &&
	     bsvTopCore_xdmaGearbox_c2hReqGearbox_write_block ;

  // register bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_status_1
  assign bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_status_1_D_IN =
	     bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_status_0 ;
  assign bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_status_1_EN =
	     WILL_FIRE_RL_bsvTopCore_xdmaGearbox_forwardC2hReq &&
	     bsvTopCore_xdmaGearbox_c2hReqGearbox_write_block ;

  // register bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_0
  assign bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_0_D_IN =
	     bsvTopCore_xdmaGearbox_isCurrentC2hReqAnEvenBeat ?
	       IF_NOT_bsvTopCore_xdmaGearbox_c2hReqQ_notEmpty_ETC___d2062 :
	       IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_write__ETC___d2061 ;
  assign bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_0_EN =
	     WILL_FIRE_RL_bsvTopCore_xdmaGearbox_forwardC2hReq ;

  // register bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_1
  assign bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_1_D_IN =
	     bsvTopCore_xdmaGearbox_isCurrentC2hReqAnEvenBeat ?
	       IF_NOT_bsvTopCore_xdmaGearbox_c2hReqQ_notEmpty_ETC___d2076 :
	       IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_write__ETC___d2075 ;
  assign bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_1_EN =
	     WILL_FIRE_RL_bsvTopCore_xdmaGearbox_forwardC2hReq ;

  // register bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_2
  assign bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_2_D_IN =
	     bsvTopCore_xdmaGearbox_isCurrentC2hReqAnEvenBeat ?
	       IF_NOT_bsvTopCore_xdmaGearbox_c2hReqQ_notEmpty_ETC___d2088 :
	       IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_write__ETC___d2087 ;
  assign bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_2_EN =
	     WILL_FIRE_RL_bsvTopCore_xdmaGearbox_forwardC2hReq ;

  // register bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_3
  assign bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_3_D_IN =
	     bsvTopCore_xdmaGearbox_isCurrentC2hReqAnEvenBeat ?
	       IF_NOT_bsvTopCore_xdmaGearbox_c2hReqQ_notEmpty_ETC___d2102 :
	       IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_write__ETC___d2101 ;
  assign bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_3_EN =
	     WILL_FIRE_RL_bsvTopCore_xdmaGearbox_forwardC2hReq ;

  // register bsvTopCore_xdmaGearbox_c2hReqGearbox_read_block
  assign bsvTopCore_xdmaGearbox_c2hReqGearbox_read_block_D_IN =
	     ~bsvTopCore_xdmaGearbox_c2hReqGearbox_read_block ;
  assign bsvTopCore_xdmaGearbox_c2hReqGearbox_read_block_EN =
	     WILL_FIRE_RL_ClientServerRequest_3 ;

  // register bsvTopCore_xdmaGearbox_c2hReqGearbox_sInReset_pre_isInReset
  assign bsvTopCore_xdmaGearbox_c2hReqGearbox_sInReset_pre_isInReset_D_IN =
	     1'd0 ;
  assign bsvTopCore_xdmaGearbox_c2hReqGearbox_sInReset_pre_isInReset_EN =
	     bsvTopCore_xdmaGearbox_c2hReqGearbox_sInReset_pre_isInReset ;

  // register bsvTopCore_xdmaGearbox_c2hReqGearbox_write_block
  assign bsvTopCore_xdmaGearbox_c2hReqGearbox_write_block_D_IN =
	     !bsvTopCore_xdmaGearbox_c2hReqGearbox_write_block ;
  assign bsvTopCore_xdmaGearbox_c2hReqGearbox_write_block_EN =
	     WILL_FIRE_RL_bsvTopCore_xdmaGearbox_forwardC2hReq &&
	     (bsvTopCore_xdmaGearbox_c2hReqGearbox_write_block &&
	      !bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_sta_ETC___d2030 ||
	      !bsvTopCore_xdmaGearbox_c2hReqGearbox_write_block &&
	      !bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_sta_ETC___d2019) ;

  // register bsvTopCore_xdmaGearbox_c2hStreamRespQ_head_wrapped
  assign bsvTopCore_xdmaGearbox_c2hStreamRespQ_head_wrapped_D_IN =
	     WILL_FIRE_RL_bsvTopCore_xdmaGearbox_c2hStreamRespQ_deq_update_head &&
	     !bsvTopCore_xdmaGearbox_c2hStreamRespQ_head_wrapped ;
  assign bsvTopCore_xdmaGearbox_c2hStreamRespQ_head_wrapped_EN =
	     WILL_FIRE_RL_bsvTopCore_xdmaGearbox_c2hStreamRespQ_deq_update_head ||
	     bsvTopCore_xdmaGearbox_c2hStreamRespQ_dInReset_VAL ;

  // register bsvTopCore_xdmaGearbox_c2hStreamRespQ_tail_wrapped
  assign bsvTopCore_xdmaGearbox_c2hStreamRespQ_tail_wrapped_D_IN =
	     WILL_FIRE_RL_bsvTopCore_xdmaGearbox_c2hStreamRespQ_enq_update_tail &&
	     !bsvTopCore_xdmaGearbox_c2hStreamRespQ_tail_wrapped ;
  assign bsvTopCore_xdmaGearbox_c2hStreamRespQ_tail_wrapped_EN =
	     WILL_FIRE_RL_bsvTopCore_xdmaGearbox_c2hStreamRespQ_enq_update_tail ||
	     bsvTopCore_xdmaGearbox_c2hStreamRespQ_sInReset_VAL ;

  // register bsvTopCore_xdmaGearbox_h2cRespGearbox_block0
  assign bsvTopCore_xdmaGearbox_h2cRespGearbox_block0_D_IN =
	     { xdmaWrap_dmaReadRespQ_D_OUT[65:64] != 2'd0 ||
	       xdmaWrap_dmaReadRespQ_D_OUT[63:62] != 2'd0 ||
	       xdmaWrap_dmaReadRespQ_D_OUT[61:60] != 2'd0 ||
	       xdmaWrap_dmaReadRespQ_D_OUT[59:58] != 2'd0 ||
	       xdmaWrap_dmaReadRespQ_D_OUT[57:56] != 2'd0 ||
	       xdmaWrap_dmaReadRespQ_D_OUT[55:54] != 2'd0 ||
	       xdmaWrap_dmaReadRespQ_D_OUT[53:52] != 2'd0 ||
	       xdmaWrap_dmaReadRespQ_D_OUT[51:50] != 2'd0 ||
	       xdmaWrap_dmaReadRespQ_D_OUT[49:48] != 2'd0 ||
	       xdmaWrap_dmaReadRespQ_D_OUT[47:46] != 2'd0 ||
	       xdmaWrap_dmaReadRespQ_D_OUT[45:44] != 2'd0 ||
	       xdmaWrap_dmaReadRespQ_D_OUT[43:42] != 2'd0 ||
	       xdmaWrap_dmaReadRespQ_D_OUT[41:40] != 2'd0 ||
	       xdmaWrap_dmaReadRespQ_D_OUT[39:38] != 2'd0 ||
	       xdmaWrap_dmaReadRespQ_D_OUT[37:36] != 2'd0 ||
	       xdmaWrap_dmaReadRespQ_D_OUT[35:34] != 2'd0,
	       xdmaWrap_dmaReadRespQ_D_OUT[577:322],
	       xdmaWrap_dmaReadRespQ_D_OUT[65:34],
	       1'd0,
	       xdmaWrap_dmaReadRespQ_D_OUT[0],
	       1'd1,
	       xdmaWrap_dmaReadRespQ_D_OUT[321:66],
	       xdmaWrap_dmaReadRespQ_D_OUT[33:1],
	       xdmaWrap_dmaReadRespQ_D_OUT[65:64] == 2'd0 &&
	       xdmaWrap_dmaReadRespQ_D_OUT[63:62] == 2'd0 &&
	       xdmaWrap_dmaReadRespQ_D_OUT[61:60] == 2'd0 &&
	       xdmaWrap_dmaReadRespQ_D_OUT[59:58] == 2'd0 &&
	       xdmaWrap_dmaReadRespQ_D_OUT[57:56] == 2'd0 &&
	       xdmaWrap_dmaReadRespQ_D_OUT[55:54] == 2'd0 &&
	       xdmaWrap_dmaReadRespQ_D_OUT[53:52] == 2'd0 &&
	       xdmaWrap_dmaReadRespQ_D_OUT[51:50] == 2'd0 &&
	       xdmaWrap_dmaReadRespQ_D_OUT[49:48] == 2'd0 &&
	       xdmaWrap_dmaReadRespQ_D_OUT[47:46] == 2'd0 &&
	       xdmaWrap_dmaReadRespQ_D_OUT[45:44] == 2'd0 &&
	       xdmaWrap_dmaReadRespQ_D_OUT[43:42] == 2'd0 &&
	       xdmaWrap_dmaReadRespQ_D_OUT[41:40] == 2'd0 &&
	       xdmaWrap_dmaReadRespQ_D_OUT[39:38] == 2'd0 &&
	       xdmaWrap_dmaReadRespQ_D_OUT[37:36] == 2'd0 &&
	       xdmaWrap_dmaReadRespQ_D_OUT[35:34] == 2'd0 &&
	       xdmaWrap_dmaReadRespQ_D_OUT[0] } ;
  assign bsvTopCore_xdmaGearbox_h2cRespGearbox_block0_EN =
	     WILL_FIRE_RL_ClientServerResponse_2 &&
	     !bsvTopCore_xdmaGearbox_h2cRespGearbox_write_block ;

  // register bsvTopCore_xdmaGearbox_h2cRespGearbox_block0_status
  assign bsvTopCore_xdmaGearbox_h2cRespGearbox_block0_status_D_IN =
	     !bsvTopCore_xdmaGearbox_h2cRespGearbox_block0_status ;
  assign bsvTopCore_xdmaGearbox_h2cRespGearbox_block0_status_EN =
	     WILL_FIRE_RL_ClientServerResponse_2 &&
	     !bsvTopCore_xdmaGearbox_h2cRespGearbox_write_block ;

  // register bsvTopCore_xdmaGearbox_h2cRespGearbox_block1
  assign bsvTopCore_xdmaGearbox_h2cRespGearbox_block1_D_IN =
	     { xdmaWrap_dmaReadRespQ_D_OUT[65:64] != 2'd0 ||
	       xdmaWrap_dmaReadRespQ_D_OUT[63:62] != 2'd0 ||
	       xdmaWrap_dmaReadRespQ_D_OUT[61:60] != 2'd0 ||
	       xdmaWrap_dmaReadRespQ_D_OUT[59:58] != 2'd0 ||
	       xdmaWrap_dmaReadRespQ_D_OUT[57:56] != 2'd0 ||
	       xdmaWrap_dmaReadRespQ_D_OUT[55:54] != 2'd0 ||
	       xdmaWrap_dmaReadRespQ_D_OUT[53:52] != 2'd0 ||
	       xdmaWrap_dmaReadRespQ_D_OUT[51:50] != 2'd0 ||
	       xdmaWrap_dmaReadRespQ_D_OUT[49:48] != 2'd0 ||
	       xdmaWrap_dmaReadRespQ_D_OUT[47:46] != 2'd0 ||
	       xdmaWrap_dmaReadRespQ_D_OUT[45:44] != 2'd0 ||
	       xdmaWrap_dmaReadRespQ_D_OUT[43:42] != 2'd0 ||
	       xdmaWrap_dmaReadRespQ_D_OUT[41:40] != 2'd0 ||
	       xdmaWrap_dmaReadRespQ_D_OUT[39:38] != 2'd0 ||
	       xdmaWrap_dmaReadRespQ_D_OUT[37:36] != 2'd0 ||
	       xdmaWrap_dmaReadRespQ_D_OUT[35:34] != 2'd0,
	       xdmaWrap_dmaReadRespQ_D_OUT[577:322],
	       xdmaWrap_dmaReadRespQ_D_OUT[65:34],
	       1'd0,
	       xdmaWrap_dmaReadRespQ_D_OUT[0],
	       1'd1,
	       xdmaWrap_dmaReadRespQ_D_OUT[321:66],
	       xdmaWrap_dmaReadRespQ_D_OUT[33:1],
	       xdmaWrap_dmaReadRespQ_D_OUT[65:64] == 2'd0 &&
	       xdmaWrap_dmaReadRespQ_D_OUT[63:62] == 2'd0 &&
	       xdmaWrap_dmaReadRespQ_D_OUT[61:60] == 2'd0 &&
	       xdmaWrap_dmaReadRespQ_D_OUT[59:58] == 2'd0 &&
	       xdmaWrap_dmaReadRespQ_D_OUT[57:56] == 2'd0 &&
	       xdmaWrap_dmaReadRespQ_D_OUT[55:54] == 2'd0 &&
	       xdmaWrap_dmaReadRespQ_D_OUT[53:52] == 2'd0 &&
	       xdmaWrap_dmaReadRespQ_D_OUT[51:50] == 2'd0 &&
	       xdmaWrap_dmaReadRespQ_D_OUT[49:48] == 2'd0 &&
	       xdmaWrap_dmaReadRespQ_D_OUT[47:46] == 2'd0 &&
	       xdmaWrap_dmaReadRespQ_D_OUT[45:44] == 2'd0 &&
	       xdmaWrap_dmaReadRespQ_D_OUT[43:42] == 2'd0 &&
	       xdmaWrap_dmaReadRespQ_D_OUT[41:40] == 2'd0 &&
	       xdmaWrap_dmaReadRespQ_D_OUT[39:38] == 2'd0 &&
	       xdmaWrap_dmaReadRespQ_D_OUT[37:36] == 2'd0 &&
	       xdmaWrap_dmaReadRespQ_D_OUT[35:34] == 2'd0 &&
	       xdmaWrap_dmaReadRespQ_D_OUT[0] } ;
  assign bsvTopCore_xdmaGearbox_h2cRespGearbox_block1_EN =
	     WILL_FIRE_RL_ClientServerResponse_2 &&
	     bsvTopCore_xdmaGearbox_h2cRespGearbox_write_block ;

  // register bsvTopCore_xdmaGearbox_h2cRespGearbox_block1_status
  assign bsvTopCore_xdmaGearbox_h2cRespGearbox_block1_status_D_IN =
	     !bsvTopCore_xdmaGearbox_h2cRespGearbox_block1_status ;
  assign bsvTopCore_xdmaGearbox_h2cRespGearbox_block1_status_EN =
	     WILL_FIRE_RL_ClientServerResponse_2 &&
	     bsvTopCore_xdmaGearbox_h2cRespGearbox_write_block ;

  // register bsvTopCore_xdmaGearbox_h2cRespGearbox_dInReset_pre_isInReset
  assign bsvTopCore_xdmaGearbox_h2cRespGearbox_dInReset_pre_isInReset_D_IN =
	     1'd0 ;
  assign bsvTopCore_xdmaGearbox_h2cRespGearbox_dInReset_pre_isInReset_EN =
	     bsvTopCore_xdmaGearbox_h2cRespGearbox_dInReset_pre_isInReset ;

  // register bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_status_0
  assign bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_status_0_D_IN =
	     bsvTopCore_xdmaGearbox_h2cRespGearbox_block0_status ;
  assign bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_status_0_EN =
	     WILL_FIRE_RL_bsvTopCore_xdmaGearbox_forwardH2cResp &&
	     !bsvTopCore_xdmaGearbox_h2cRespGearbox_read_block ;

  // register bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_status_1
  assign bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_status_1_D_IN =
	     bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_status_0 ;
  assign bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_status_1_EN =
	     WILL_FIRE_RL_bsvTopCore_xdmaGearbox_forwardH2cResp &&
	     !bsvTopCore_xdmaGearbox_h2cRespGearbox_read_block ;

  // register bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_status_0
  assign bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_status_0_D_IN =
	     bsvTopCore_xdmaGearbox_h2cRespGearbox_block1_status ;
  assign bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_status_0_EN =
	     WILL_FIRE_RL_bsvTopCore_xdmaGearbox_forwardH2cResp &&
	     bsvTopCore_xdmaGearbox_h2cRespGearbox_read_block ;

  // register bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_status_1
  assign bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_status_1_D_IN =
	     bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_status_0 ;
  assign bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_status_1_EN =
	     WILL_FIRE_RL_bsvTopCore_xdmaGearbox_forwardH2cResp &&
	     bsvTopCore_xdmaGearbox_h2cRespGearbox_read_block ;

  // register bsvTopCore_xdmaGearbox_h2cRespGearbox_read_block
  assign bsvTopCore_xdmaGearbox_h2cRespGearbox_read_block_D_IN =
	     !bsvTopCore_xdmaGearbox_h2cRespGearbox_read_block ;
  assign bsvTopCore_xdmaGearbox_h2cRespGearbox_read_block_EN =
	     WILL_FIRE_RL_bsvTopCore_xdmaGearbox_forwardH2cResp &&
	     (bsvTopCore_xdmaGearbox_h2cRespGearbox_read_block &&
	      bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_st_ETC___d1962 ||
	      !bsvTopCore_xdmaGearbox_h2cRespGearbox_read_block &&
	      bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_st_ETC___d1953) ;

  // register bsvTopCore_xdmaGearbox_h2cRespGearbox_sInReset_pre_isInReset
  assign bsvTopCore_xdmaGearbox_h2cRespGearbox_sInReset_pre_isInReset_D_IN =
	     1'd0 ;
  assign bsvTopCore_xdmaGearbox_h2cRespGearbox_sInReset_pre_isInReset_EN =
	     bsvTopCore_xdmaGearbox_h2cRespGearbox_sInReset_pre_isInReset ;

  // register bsvTopCore_xdmaGearbox_h2cRespGearbox_write_block
  assign bsvTopCore_xdmaGearbox_h2cRespGearbox_write_block_D_IN =
	     ~bsvTopCore_xdmaGearbox_h2cRespGearbox_write_block ;
  assign bsvTopCore_xdmaGearbox_h2cRespGearbox_write_block_EN =
	     WILL_FIRE_RL_ClientServerResponse_2 ;

  // register bsvTopCore_xdmaGearbox_h2cStreamReqQStore
  assign bsvTopCore_xdmaGearbox_h2cStreamReqQStore_D_IN =
	     bsvTopCore_xdmaReadClt_reqQ_D_OUT ;
  assign bsvTopCore_xdmaGearbox_h2cStreamReqQStore_EN =
	     bsvTopCore_xdmaGearbox_h2cStreamReqQ_enq_pw_whas ;

  // register bsvTopCore_xdmaGearbox_h2cStreamReqQ_head_wrapped
  assign bsvTopCore_xdmaGearbox_h2cStreamReqQ_head_wrapped_D_IN =
	     WILL_FIRE_RL_bsvTopCore_xdmaGearbox_h2cStreamReqQ_deq_update_head &&
	     !bsvTopCore_xdmaGearbox_h2cStreamReqQ_head_wrapped ;
  assign bsvTopCore_xdmaGearbox_h2cStreamReqQ_head_wrapped_EN =
	     WILL_FIRE_RL_bsvTopCore_xdmaGearbox_h2cStreamReqQ_deq_update_head ||
	     bsvTopCore_xdmaGearbox_h2cStreamReqQ_dInReset_VAL ;

  // register bsvTopCore_xdmaGearbox_h2cStreamReqQ_tail_wrapped
  assign bsvTopCore_xdmaGearbox_h2cStreamReqQ_tail_wrapped_D_IN =
	     WILL_FIRE_RL_bsvTopCore_xdmaGearbox_h2cStreamReqQ_enq_update_tail &&
	     !bsvTopCore_xdmaGearbox_h2cStreamReqQ_tail_wrapped ;
  assign bsvTopCore_xdmaGearbox_h2cStreamReqQ_tail_wrapped_EN =
	     WILL_FIRE_RL_bsvTopCore_xdmaGearbox_h2cStreamReqQ_enq_update_tail ||
	     bsvTopCore_xdmaGearbox_h2cStreamReqQ_sInReset_VAL ;

  // register bsvTopCore_xdmaGearbox_isCurrentC2hReqAnEvenBeat
  assign bsvTopCore_xdmaGearbox_isCurrentC2hReqAnEvenBeat_D_IN =
	     !bsvTopCore_xdmaGearbox_isCurrentC2hReqAnEvenBeat ;
  assign bsvTopCore_xdmaGearbox_isCurrentC2hReqAnEvenBeat_EN =
	     WILL_FIRE_RL_bsvTopCore_xdmaGearbox_forwardC2hReq ;

  // register bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_grantReg
  assign bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_grantReg_D_IN =
	     (bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg ||
	      !bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_EMPTY_N) &&
	     bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_pipeOutQ_EMPTY_N ;
  assign bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_grantReg_EN =
	     WILL_FIRE_RL_bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_binaryArbitrate &&
	     bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg ;

  // register bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg
  assign bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg_D_IN =
	     1'd1 ;
  assign bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg_EN =
	     WILL_FIRE_RL_bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_binaryArbitrate ;

  // register bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg
  assign bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg_D_IN =
	     (!bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg ||
	      !bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_pipeOutQ_EMPTY_N) &&
	     (bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_EMPTY_N ||
	      !bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_pipeOutQ_EMPTY_N) ;
  assign bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg_EN =
	     WILL_FIRE_RL_bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_binaryArbitrate &&
	     bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg ;

  // register bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_grantReg
  assign bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_grantReg_D_IN =
	     (bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_priorityReg ||
	      !bsvTopCore_xdmaReadClt_inputReqWithIdxVec_0_EMPTY_N) &&
	     bsvTopCore_xdmaReadClt_inputReqWithIdxVec_2_EMPTY_N ;
  assign bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_grantReg_EN =
	     WILL_FIRE_RL_bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_binaryArbitrate &&
	     bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_needArbitrationReg ;

  // register bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_needArbitrationReg
  assign bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_needArbitrationReg_D_IN =
	     1'd1 ;
  assign bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_needArbitrationReg_EN =
	     WILL_FIRE_RL_bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_binaryArbitrate ;

  // register bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_priorityReg
  assign bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_priorityReg_D_IN =
	     (!bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_priorityReg ||
	      !bsvTopCore_xdmaReadClt_inputReqWithIdxVec_2_EMPTY_N) &&
	     (bsvTopCore_xdmaReadClt_inputReqWithIdxVec_0_EMPTY_N ||
	      !bsvTopCore_xdmaReadClt_inputReqWithIdxVec_2_EMPTY_N) ;
  assign bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_priorityReg_EN =
	     WILL_FIRE_RL_bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_binaryArbitrate &&
	     bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_needArbitrationReg ;

  // register bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_grantReg
  assign bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_grantReg_D_IN =
	     (bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_priorityReg ||
	      !bsvTopCore_xdmaReadClt_inputReqWithIdxVec_1_EMPTY_N) &&
	     bsvTopCore_xdmaReadClt_inputReqWithIdxVec_3_EMPTY_N ;
  assign bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_grantReg_EN =
	     WILL_FIRE_RL_bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_binaryArbitrate &&
	     bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_needArbitrationReg ;

  // register bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_needArbitrationReg
  assign bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_needArbitrationReg_D_IN =
	     1'd1 ;
  assign bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_needArbitrationReg_EN =
	     WILL_FIRE_RL_bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_binaryArbitrate ;

  // register bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_priorityReg
  assign bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_priorityReg_D_IN =
	     (!bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_priorityReg ||
	      !bsvTopCore_xdmaReadClt_inputReqWithIdxVec_3_EMPTY_N) &&
	     (bsvTopCore_xdmaReadClt_inputReqWithIdxVec_1_EMPTY_N ||
	      !bsvTopCore_xdmaReadClt_inputReqWithIdxVec_3_EMPTY_N) ;
  assign bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_priorityReg_EN =
	     WILL_FIRE_RL_bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_binaryArbitrate &&
	     bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_needArbitrationReg ;

  // register bsvTopCore_xdmaReadClt_shouldSaveGrantIdxReg
  assign bsvTopCore_xdmaReadClt_shouldSaveGrantIdxReg_D_IN = 1'd1 ;
  assign bsvTopCore_xdmaReadClt_shouldSaveGrantIdxReg_EN =
	     bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_EMPTY_N &&
	     bsvTopCore_xdmaReadClt_reqQ_FULL_N &&
	     (!bsvTopCore_xdmaReadClt_shouldSaveGrantIdxReg ||
	      bsvTopCore_xdmaReadClt_preGrantIdxQ_FULL_N) ;

  // register bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_grantReg
  assign bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_grantReg_D_IN =
	     (bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_priorityReg ||
	      !bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0_EMPTY_N) &&
	     bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1_EMPTY_N ;
  assign bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_grantReg_EN =
	     WILL_FIRE_RL_bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_binaryArbitrate &&
	     bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_needArbitrationReg ;

  // register bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_needArbitrationReg
  always@(v__h70211 or
	  bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0_D_OUT or
	  bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1_D_OUT)
  begin
    case (v__h70211)
      1'd0:
	  bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_needArbitrationReg_D_IN =
	      bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0_D_OUT[0];
      1'd1:
	  bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_needArbitrationReg_D_IN =
	      bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1_D_OUT[0];
    endcase
  end
  assign bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_needArbitrationReg_EN =
	     WILL_FIRE_RL_bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_binaryArbitrate ;

  // register bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_priorityReg
  assign bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_priorityReg_D_IN =
	     (!bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_priorityReg ||
	      !bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1_EMPTY_N) &&
	     (bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0_EMPTY_N ||
	      !bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1_EMPTY_N) ;
  assign bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_priorityReg_EN =
	     WILL_FIRE_RL_bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_binaryArbitrate &&
	     bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_needArbitrationReg ;

  // register bsvTopCore_xdmaWriteClt_shouldSaveGrantIdxReg
  assign bsvTopCore_xdmaWriteClt_shouldSaveGrantIdxReg_D_IN =
	     bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_OUT[0] ;
  assign bsvTopCore_xdmaWriteClt_shouldSaveGrantIdxReg_EN =
	     bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_EMPTY_N &&
	     bsvTopCore_xdmaWriteClt_reqQ_FULL_N &&
	     (!bsvTopCore_xdmaWriteClt_shouldSaveGrantIdxReg ||
	      bsvTopCore_xdmaWriteClt_preGrantIdxQ_FULL_N) ;

  // register xdmaAxiLiteWrap_cntrlAxilSlave_rawRdAddrBus_isReset_isInReset
  assign xdmaAxiLiteWrap_cntrlAxilSlave_rawRdAddrBus_isReset_isInReset_D_IN =
	     1'd0 ;
  assign xdmaAxiLiteWrap_cntrlAxilSlave_rawRdAddrBus_isReset_isInReset_EN =
	     xdmaAxiLiteWrap_cntrlAxilSlave_rawRdAddrBus_isReset_isInReset ;

  // register xdmaAxiLiteWrap_cntrlAxilSlave_rawRdDataBus_isReset_isInReset
  assign xdmaAxiLiteWrap_cntrlAxilSlave_rawRdDataBus_isReset_isInReset_D_IN =
	     1'd0 ;
  assign xdmaAxiLiteWrap_cntrlAxilSlave_rawRdDataBus_isReset_isInReset_EN =
	     xdmaAxiLiteWrap_cntrlAxilSlave_rawRdDataBus_isReset_isInReset ;

  // register xdmaAxiLiteWrap_cntrlAxilSlave_rawWrAddrBus_isReset_isInReset
  assign xdmaAxiLiteWrap_cntrlAxilSlave_rawWrAddrBus_isReset_isInReset_D_IN =
	     1'd0 ;
  assign xdmaAxiLiteWrap_cntrlAxilSlave_rawWrAddrBus_isReset_isInReset_EN =
	     xdmaAxiLiteWrap_cntrlAxilSlave_rawWrAddrBus_isReset_isInReset ;

  // register xdmaAxiLiteWrap_cntrlAxilSlave_rawWrDataBus_isReset_isInReset
  assign xdmaAxiLiteWrap_cntrlAxilSlave_rawWrDataBus_isReset_isInReset_D_IN =
	     1'd0 ;
  assign xdmaAxiLiteWrap_cntrlAxilSlave_rawWrDataBus_isReset_isInReset_EN =
	     xdmaAxiLiteWrap_cntrlAxilSlave_rawWrDataBus_isReset_isInReset ;

  // register xdmaAxiLiteWrap_cntrlAxilSlave_rawWrRespBus_isReset_isInReset
  assign xdmaAxiLiteWrap_cntrlAxilSlave_rawWrRespBus_isReset_isInReset_D_IN =
	     1'd0 ;
  assign xdmaAxiLiteWrap_cntrlAxilSlave_rawWrRespBus_isReset_isInReset_EN =
	     xdmaAxiLiteWrap_cntrlAxilSlave_rawWrRespBus_isReset_isInReset ;

  // register xdmaWrap_h2cNextBeatIsFirst
  assign xdmaWrap_h2cNextBeatIsFirst_D_IN = xdmaWrap_xdmaH2cStFifo_D_OUT[0] ;
  assign xdmaWrap_h2cNextBeatIsFirst_EN =
	     xdmaWrap_xdmaH2cStFifo_EMPTY_N && xdmaWrap_dmaReadRespQ_FULL_N &&
	     (!xdmaWrap_xdmaH2cStFifo_D_OUT[0] ||
	      xdmaWrap_readReqProcessingQ_EMPTY_N) ;

  // register xdmaWrap_rawC2hSt_rawBus_isReset_isInReset
  assign xdmaWrap_rawC2hSt_rawBus_isReset_isInReset_D_IN = 1'd0 ;
  assign xdmaWrap_rawC2hSt_rawBus_isReset_isInReset_EN =
	     xdmaWrap_rawC2hSt_rawBus_isReset_isInReset ;

  // register xdmaWrap_rawH2cSt_rawBus_isReset_isInReset
  assign xdmaWrap_rawH2cSt_rawBus_isReset_isInReset_D_IN = 1'd0 ;
  assign xdmaWrap_rawH2cSt_rawBus_isReset_isInReset_EN =
	     xdmaWrap_rawH2cSt_rawBus_isReset_isInReset ;

  // submodule bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ
  assign bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_IN =
	     { bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[418:391],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[313:290] } ;
  assign bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_ENQ =
	     bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_EMPTY_N &&
	     bsvTopCore_bluerdmaDmaProxy_c2hProxy_outReqQ_FULL_N &&
	     (!bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[1] ||
	      bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_FULL_N) &&
	     bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[1] ;
  assign bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_DEQ =
	     WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_c2hProxy_forwardResp ;
  assign bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_CLR = 1'b0 ;

  // submodule bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ
  assign bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_IN =
	     bsvTopCore_rdmaTransportLayer_dmaWriteClt_request_get ;
  assign bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_ENQ =
	     bsvTopCore_rdmaTransportLayer_RDY_dmaWriteClt_request_get &&
	     bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_FULL_N ;
  assign bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_DEQ =
	     bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_EMPTY_N &&
	     bsvTopCore_bluerdmaDmaProxy_c2hProxy_outReqQ_FULL_N &&
	     (!bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[1] ||
	      bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_FULL_N) ;
  assign bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_CLR = 1'b0 ;

  // submodule bsvTopCore_bluerdmaDmaProxy_c2hProxy_inRespQ
  assign bsvTopCore_bluerdmaDmaProxy_c2hProxy_inRespQ_D_IN =
	     { bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT,
	       1'd0 } ;
  assign bsvTopCore_bluerdmaDmaProxy_c2hProxy_inRespQ_ENQ =
	     WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_c2hProxy_forwardResp ;
  assign bsvTopCore_bluerdmaDmaProxy_c2hProxy_inRespQ_DEQ =
	     bsvTopCore_rdmaTransportLayer_RDY_dmaWriteClt_response_put &&
	     bsvTopCore_bluerdmaDmaProxy_c2hProxy_inRespQ_EMPTY_N ;
  assign bsvTopCore_bluerdmaDmaProxy_c2hProxy_inRespQ_CLR = 1'b0 ;

  // submodule bsvTopCore_bluerdmaDmaProxy_c2hProxy_outReqQ
  assign bsvTopCore_bluerdmaDmaProxy_c2hProxy_outReqQ_D_IN =
	     { bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[390:327],
	       a_len__h15261,
	       a_dataStream_data__h15271,
	       a_dataStream_byteEn__h15272,
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[1:0] } ;
  assign bsvTopCore_bluerdmaDmaProxy_c2hProxy_outReqQ_ENQ =
	     bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_EMPTY_N &&
	     bsvTopCore_bluerdmaDmaProxy_c2hProxy_outReqQ_FULL_N &&
	     (!bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[1] ||
	      bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_FULL_N) ;
  assign bsvTopCore_bluerdmaDmaProxy_c2hProxy_outReqQ_DEQ =
	     bsvTopCore_bluerdmaDmaProxy_c2hProxy_outReqQ_EMPTY_N &&
	     bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0_FULL_N ;
  assign bsvTopCore_bluerdmaDmaProxy_c2hProxy_outReqQ_CLR = 1'b0 ;

  // submodule bsvTopCore_bluerdmaDmaProxy_c2hProxy_outRespQ
  assign bsvTopCore_bluerdmaDmaProxy_c2hProxy_outRespQ_ENQ =
	     WILL_FIRE_RL_bsvTopCore_xdmaWriteClt_dispatchResponse &&
	     bsvTopCore_xdmaWriteClt_preGrantIdxQ_D_OUT == 1'd0 ;
  assign bsvTopCore_bluerdmaDmaProxy_c2hProxy_outRespQ_DEQ =
	     WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_c2hProxy_forwardResp ;
  assign bsvTopCore_bluerdmaDmaProxy_c2hProxy_outRespQ_CLR = 1'b0 ;

  // submodule bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ
  assign bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_IN =
	     { bsvTopCore_bluerdmaDmaProxy_h2cProxy_inReqQ_D_OUT[168:141],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_inReqQ_D_OUT[63:0] } ;
  assign bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_ENQ =
	     bsvTopCore_bluerdmaDmaProxy_h2cProxy_inReqQ_EMPTY_N &&
	     bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_FULL_N &&
	     bsvTopCore_bluerdmaDmaProxy_h2cProxy_outReqQ_FULL_N ;
  assign bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_DEQ =
	     WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp &&
	     bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[0] ;
  assign bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_CLR = 1'b0 ;

  // submodule bsvTopCore_bluerdmaDmaProxy_h2cProxy_inReqQ
  assign bsvTopCore_bluerdmaDmaProxy_h2cProxy_inReqQ_D_IN =
	     bsvTopCore_rdmaTransportLayer_dmaReadClt_request_get ;
  assign bsvTopCore_bluerdmaDmaProxy_h2cProxy_inReqQ_ENQ =
	     bsvTopCore_rdmaTransportLayer_RDY_dmaReadClt_request_get &&
	     bsvTopCore_bluerdmaDmaProxy_h2cProxy_inReqQ_FULL_N ;
  assign bsvTopCore_bluerdmaDmaProxy_h2cProxy_inReqQ_DEQ =
	     bsvTopCore_bluerdmaDmaProxy_h2cProxy_inReqQ_EMPTY_N &&
	     bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_FULL_N &&
	     bsvTopCore_bluerdmaDmaProxy_h2cProxy_outReqQ_FULL_N ;
  assign bsvTopCore_bluerdmaDmaProxy_h2cProxy_inReqQ_CLR = 1'b0 ;

  // submodule bsvTopCore_bluerdmaDmaProxy_h2cProxy_inRespQ
  assign bsvTopCore_bluerdmaDmaProxy_h2cProxy_inRespQ_D_IN =
	     { bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT,
	       1'd0,
	       a_dataStream_data__h4861,
	       a_dataStream_byteEn__h4862,
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[1:0] } ;
  assign bsvTopCore_bluerdmaDmaProxy_h2cProxy_inRespQ_ENQ =
	     WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp ;
  assign bsvTopCore_bluerdmaDmaProxy_h2cProxy_inRespQ_DEQ =
	     bsvTopCore_rdmaTransportLayer_RDY_dmaReadClt_response_put &&
	     bsvTopCore_bluerdmaDmaProxy_h2cProxy_inRespQ_EMPTY_N ;
  assign bsvTopCore_bluerdmaDmaProxy_h2cProxy_inRespQ_CLR = 1'b0 ;

  // submodule bsvTopCore_bluerdmaDmaProxy_h2cProxy_outReqQ
  assign bsvTopCore_bluerdmaDmaProxy_h2cProxy_outReqQ_D_IN =
	     { bsvTopCore_bluerdmaDmaProxy_h2cProxy_inReqQ_D_OUT[140:77],
	       a_len__h4711 } ;
  assign bsvTopCore_bluerdmaDmaProxy_h2cProxy_outReqQ_ENQ =
	     bsvTopCore_bluerdmaDmaProxy_h2cProxy_inReqQ_EMPTY_N &&
	     bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_FULL_N &&
	     bsvTopCore_bluerdmaDmaProxy_h2cProxy_outReqQ_FULL_N ;
  assign bsvTopCore_bluerdmaDmaProxy_h2cProxy_outReqQ_DEQ =
	     bsvTopCore_bluerdmaDmaProxy_h2cProxy_outReqQ_EMPTY_N &&
	     bsvTopCore_xdmaReadClt_inputReqWithIdxVec_0_FULL_N ;
  assign bsvTopCore_bluerdmaDmaProxy_h2cProxy_outReqQ_CLR = 1'b0 ;

  // submodule bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ
  assign bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_IN =
	     bsvTopCore_xdmaReadClt_respQ_D_OUT ;
  assign bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_ENQ =
	     WILL_FIRE_RL_bsvTopCore_xdmaReadClt_dispatchResponse &&
	     bsvTopCore_xdmaReadClt_preGrantIdxQ_D_OUT == 2'd0 ;
  assign bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_DEQ =
	     WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp ;
  assign bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_CLR = 1'b0 ;

  // submodule bsvTopCore_cmdQController_descReadProxy_ringbufQ
  assign bsvTopCore_cmdQController_descReadProxy_ringbufQ_D_IN =
	     bsvTopCore_ringbufPool_t_0_bufQ_D_OUT ;
  assign bsvTopCore_cmdQController_descReadProxy_ringbufQ_ENQ =
	     bsvTopCore_ringbufPool_t_0_bufQ_EMPTY_N &&
	     bsvTopCore_cmdQController_descReadProxy_ringbufQ_FULL_N ;
  assign bsvTopCore_cmdQController_descReadProxy_ringbufQ_DEQ =
	     WILL_FIRE_RL_bsvTopCore_cmdQController_descReadProxy_fillAllReqSegments ;
  assign bsvTopCore_cmdQController_descReadProxy_ringbufQ_CLR = 1'b0 ;

  // submodule bsvTopCore_cmdQController_descWriteProxy_ringbufQ
  assign bsvTopCore_cmdQController_descWriteProxy_ringbufQ_D_IN =
	     bsvTopCore_cmdQController_descWriteProxy_segBuf_0 ;
  assign bsvTopCore_cmdQController_descWriteProxy_ringbufQ_ENQ =
	     WILL_FIRE_RL_bsvTopCore_cmdQController_descWriteProxy_sendRespDesc ;
  assign bsvTopCore_cmdQController_descWriteProxy_ringbufQ_DEQ =
	     bsvTopCore_cmdQController_descWriteProxy_ringbufQ_EMPTY_N &&
	     bsvTopCore_ringbufPool_t_0_bufQ_1_FULL_N ;
  assign bsvTopCore_cmdQController_descWriteProxy_ringbufQ_CLR = 1'b0 ;

  // submodule bsvTopCore_cmdQController_metaDataInflightReqQ
  assign bsvTopCore_cmdQController_metaDataInflightReqQ_D_IN =
	     rawDesc__h92183 ;
  assign bsvTopCore_cmdQController_metaDataInflightReqQ_ENQ =
	     WILL_FIRE_RL_bsvTopCore_cmdQController_dispatchRingbufRequestDescriptors &&
	     (rawDesc__h92183[3:1] == 3'd2 || rawDesc__h92183[3:1] == 3'd3 ||
	      rawDesc__h92183[3:1] == 3'd4) ;
  assign bsvTopCore_cmdQController_metaDataInflightReqQ_DEQ =
	     WILL_FIRE_RL_bsvTopCore_cmdQController_gatherResponse &&
	     !bsvTopCore_cmdQController_pgtRespQ_EMPTY_N &&
	     bsvTopCore_cmdQController_metaDataRespQ_EMPTY_N ;
  assign bsvTopCore_cmdQController_metaDataInflightReqQ_CLR = 1'b0 ;

  // submodule bsvTopCore_cmdQController_metaDataReqQ
  always@(rawDesc__h92183 or
	  bsvTopCore_cmdQController_descReadProxy_segBuf_1 or
	  bsvTopCore_cmdQController_descReadProxy_segBuf_0)
  begin
    case (rawDesc__h92183[3:1])
      3'd2:
	  bsvTopCore_cmdQController_metaDataReqQ_D_IN =
	      { 239'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA,
		rawDesc__h92183[96],
		rawDesc__h92183[94:64],
		rawDesc__h92183[95:64] };
      3'd3:
	  bsvTopCore_cmdQController_metaDataReqQ_D_IN =
	      { 51'h2AAAAAAAAAAAA,
		bsvTopCore_cmdQController_descReadProxy_segBuf_1[96],
		bsvTopCore_cmdQController_descReadProxy_segBuf_1[191:128],
		bsvTopCore_cmdQController_descReadProxy_segBuf_1[223:192],
		bsvTopCore_cmdQController_descReadProxy_segBuf_1[111:104],
		bsvTopCore_cmdQController_descReadProxy_segBuf_1[95:64],
		bsvTopCore_cmdQController_descReadProxy_segBuf_0[24:0],
		bsvTopCore_cmdQController_descReadProxy_segBuf_0[56:32],
		1'd1,
		bsvTopCore_cmdQController_descReadProxy_segBuf_0[31:0],
		bsvTopCore_cmdQController_descReadProxy_segBuf_0[63:32] };
      default: bsvTopCore_cmdQController_metaDataReqQ_D_IN =
		   { 2'd2,
		     bsvTopCore_cmdQController_descReadProxy_segBuf_1[97:64],
		     bsvTopCore_cmdQController_descReadProxy_segBuf_1[127:104],
		     bsvTopCore_cmdQController_descReadProxy_segBuf_1[153:128],
		     bsvTopCore_cmdQController_descReadProxy_segBuf_0[3:0],
		     bsvTopCore_cmdQController_descReadProxy_segBuf_0[7:4],
		     bsvTopCore_cmdQController_descReadProxy_segBuf_0[10:8],
		     bsvTopCore_cmdQController_descReadProxy_segBuf_0[63:32],
		     bsvTopCore_cmdQController_descReadProxy_segBuf_0[87:64],
		     bsvTopCore_cmdQController_descReadProxy_segBuf_0[119:96],
		     bsvTopCore_cmdQController_descReadProxy_segBuf_0[151:128],
		     bsvTopCore_cmdQController_descReadProxy_segBuf_0[159:152],
		     bsvTopCore_cmdQController_descReadProxy_segBuf_0[95:88],
		     bsvTopCore_cmdQController_descReadProxy_segBuf_0[127:120],
		     bsvTopCore_cmdQController_descReadProxy_segBuf_0[167:160],
		     bsvTopCore_cmdQController_descReadProxy_segBuf_0[175:168],
		     bsvTopCore_cmdQController_descReadProxy_segBuf_0[183:176],
		     bsvTopCore_cmdQController_descReadProxy_segBuf_0[207:192],
		     bsvTopCore_cmdQController_descReadProxy_segBuf_0[184],
		     bsvTopCore_cmdQController_descReadProxy_segBuf_0[215:208],
		     bsvTopCore_cmdQController_descReadProxy_segBuf_0[223:216],
		     bsvTopCore_cmdQController_descReadProxy_segBuf_0[228:224],
		     bsvTopCore_cmdQController_descReadProxy_segBuf_0[236:229],
		     bsvTopCore_cmdQController_descReadProxy_segBuf_0[239:237],
		     bsvTopCore_cmdQController_descReadProxy_segBuf_1[163:160],
		     bsvTopCore_cmdQController_descReadProxy_segBuf_1[168] };
    endcase
  end
  assign bsvTopCore_cmdQController_metaDataReqQ_ENQ =
	     WILL_FIRE_RL_bsvTopCore_cmdQController_dispatchRingbufRequestDescriptors &&
	     (rawDesc__h92183[3:1] == 3'd2 || rawDesc__h92183[3:1] == 3'd3 ||
	      rawDesc__h92183[3:1] == 3'd4) ;
  assign bsvTopCore_cmdQController_metaDataReqQ_DEQ =
	     bsvTopCore_rdmaTransportLayer_RDY_srvPortMetaData_request_put &&
	     bsvTopCore_cmdQController_metaDataReqQ_EMPTY_N ;
  assign bsvTopCore_cmdQController_metaDataReqQ_CLR = 1'b0 ;

  // submodule bsvTopCore_cmdQController_metaDataRespQ
  always@(bsvTopCore_rdmaTransportLayer_srvPortMetaData_response_get)
  begin
    case (bsvTopCore_rdmaTransportLayer_srvPortMetaData_response_get[275:274])
      2'd0, 2'd1, 2'd2:
	  bsvTopCore_cmdQController_metaDataRespQ_D_IN =
	      bsvTopCore_rdmaTransportLayer_srvPortMetaData_response_get;
      2'd3:
	  bsvTopCore_cmdQController_metaDataRespQ_D_IN =
	      276'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    endcase
  end
  assign bsvTopCore_cmdQController_metaDataRespQ_ENQ =
	     bsvTopCore_rdmaTransportLayer_RDY_srvPortMetaData_response_get &&
	     bsvTopCore_cmdQController_metaDataRespQ_FULL_N ;
  assign bsvTopCore_cmdQController_metaDataRespQ_DEQ =
	     WILL_FIRE_RL_bsvTopCore_cmdQController_gatherResponse &&
	     !bsvTopCore_cmdQController_pgtRespQ_EMPTY_N &&
	     bsvTopCore_cmdQController_metaDataRespQ_EMPTY_N ;
  assign bsvTopCore_cmdQController_metaDataRespQ_CLR = 1'b0 ;

  // submodule bsvTopCore_cmdQController_pgtInflightReqQ
  assign bsvTopCore_cmdQController_pgtInflightReqQ_D_IN = rawDesc__h92183 ;
  assign bsvTopCore_cmdQController_pgtInflightReqQ_ENQ =
	     WILL_FIRE_RL_bsvTopCore_cmdQController_dispatchRingbufRequestDescriptors &&
	     (rawDesc__h92183[3:1] == 3'd0 || rawDesc__h92183[3:1] == 3'd1) ;
  assign bsvTopCore_cmdQController_pgtInflightReqQ_DEQ =
	     WILL_FIRE_RL_bsvTopCore_cmdQController_gatherResponse &&
	     bsvTopCore_cmdQController_pgtRespQ_EMPTY_N ;
  assign bsvTopCore_cmdQController_pgtInflightReqQ_CLR = 1'b0 ;

  // submodule bsvTopCore_cmdQController_pgtReqQ
  assign bsvTopCore_cmdQController_pgtReqQ_D_IN = rawDesc__h92183 ;
  assign bsvTopCore_cmdQController_pgtReqQ_ENQ =
	     WILL_FIRE_RL_bsvTopCore_cmdQController_dispatchRingbufRequestDescriptors &&
	     (rawDesc__h92183[3:1] == 3'd0 || rawDesc__h92183[3:1] == 3'd1) ;
  assign bsvTopCore_cmdQController_pgtReqQ_DEQ =
	     bsvTopCore_cmdQController_pgtReqQ_EMPTY_N &&
	     bsvTopCore_pgtManager_reqQ_FULL_N ;
  assign bsvTopCore_cmdQController_pgtReqQ_CLR = 1'b0 ;

  // submodule bsvTopCore_cmdQController_pgtRespQ
  assign bsvTopCore_cmdQController_pgtRespQ_D_IN =
	     bsvTopCore_pgtManager_respQ_D_OUT ;
  assign bsvTopCore_cmdQController_pgtRespQ_ENQ =
	     bsvTopCore_pgtManager_respQ_EMPTY_N &&
	     bsvTopCore_cmdQController_pgtRespQ_FULL_N ;
  assign bsvTopCore_cmdQController_pgtRespQ_DEQ =
	     WILL_FIRE_RL_bsvTopCore_cmdQController_gatherResponse &&
	     bsvTopCore_cmdQController_pgtRespQ_EMPTY_N ;
  assign bsvTopCore_cmdQController_pgtRespQ_CLR = 1'b0 ;

  // submodule bsvTopCore_pgtManager_dmaReadReqQ
  assign bsvTopCore_pgtManager_dmaReadReqQ_D_IN =
	     { bsvTopCore_pgtManager_reqQ_D_OUT[127:64],
	       bsvTopCore_pgtManager_reqQ_D_OUT[179:160] } ;
  assign bsvTopCore_pgtManager_dmaReadReqQ_ENQ =
	     MUX_bsvTopCore_pgtManager_curSecondStagePgtWriteIdxReg_write_1__SEL_1 ;
  assign bsvTopCore_pgtManager_dmaReadReqQ_DEQ =
	     bsvTopCore_pgtManager_dmaReadReqQ_EMPTY_N &&
	     bsvTopCore_xdmaReadClt_inputReqWithIdxVec_2_FULL_N ;
  assign bsvTopCore_pgtManager_dmaReadReqQ_CLR = 1'b0 ;

  // submodule bsvTopCore_pgtManager_dmaReadRespQ
  assign bsvTopCore_pgtManager_dmaReadRespQ_D_IN =
	     bsvTopCore_xdmaReadClt_respQ_D_OUT ;
  assign bsvTopCore_pgtManager_dmaReadRespQ_ENQ =
	     WILL_FIRE_RL_bsvTopCore_xdmaReadClt_dispatchResponse &&
	     bsvTopCore_xdmaReadClt_preGrantIdxQ_D_OUT == 2'd2 ;
  assign bsvTopCore_pgtManager_dmaReadRespQ_DEQ =
	     WILL_FIRE_RL_bsvTopCore_pgtManager_updatePgtStateHandleSecondStageUpdate &&
	     !bsvTopCore_pgtManager_curBeatOfDataReg[2] &&
	     !bsvTopCore_pgtManager_curBeatOfDataReg[0] ;
  assign bsvTopCore_pgtManager_dmaReadRespQ_CLR = 1'b0 ;

  // submodule bsvTopCore_pgtManager_reqQ
  assign bsvTopCore_pgtManager_reqQ_D_IN =
	     bsvTopCore_cmdQController_pgtReqQ_D_OUT ;
  assign bsvTopCore_pgtManager_reqQ_ENQ =
	     bsvTopCore_cmdQController_pgtReqQ_EMPTY_N &&
	     bsvTopCore_pgtManager_reqQ_FULL_N ;
  assign bsvTopCore_pgtManager_reqQ_DEQ =
	     WILL_FIRE_RL_bsvTopCore_pgtManager_updatePgtStateIdle ;
  assign bsvTopCore_pgtManager_reqQ_CLR = 1'b0 ;

  // submodule bsvTopCore_pgtManager_respQ
  assign bsvTopCore_pgtManager_respQ_D_IN = 1'd1 ;
  assign bsvTopCore_pgtManager_respQ_ENQ =
	     WILL_FIRE_RL_bsvTopCore_pgtManager_updatePgtStateIdle &&
	     bsvTopCore_pgtManager_reqQ_D_OUT[3:1] == 3'd0 ||
	     WILL_FIRE_RL_bsvTopCore_pgtManager_updatePgtStateHandleSecondStageUpdate &&
	     !bsvTopCore_pgtManager_curBeatOfDataReg[2] &&
	     bsvTopCore_pgtManager_curBeatOfDataReg[0] ;
  assign bsvTopCore_pgtManager_respQ_DEQ =
	     bsvTopCore_pgtManager_respQ_EMPTY_N &&
	     bsvTopCore_cmdQController_pgtRespQ_FULL_N ;
  assign bsvTopCore_pgtManager_respQ_CLR = 1'b0 ;

  // submodule bsvTopCore_rdmaTransportLayer
  assign bsvTopCore_rdmaTransportLayer_dmaReadClt_response_put =
	     bsvTopCore_bluerdmaDmaProxy_h2cProxy_inRespQ_D_OUT ;
  assign bsvTopCore_rdmaTransportLayer_dmaWriteClt_response_put =
	     bsvTopCore_bluerdmaDmaProxy_c2hProxy_inRespQ_D_OUT ;
  assign bsvTopCore_rdmaTransportLayer_rdmaDataStreamInput_put =
	     rdmaDataStreamInput_put ;
  assign bsvTopCore_rdmaTransportLayer_recvReqInput_put =
	     bsvTopCore_workAndCompleteQController_recvReqQ_D_OUT ;
  assign bsvTopCore_rdmaTransportLayer_srvPortMetaData_request_put =
	     bsvTopCore_cmdQController_metaDataReqQ_D_OUT ;
  assign bsvTopCore_rdmaTransportLayer_workReqInput_put =
	     bsvTopCore_workAndCompleteQController_workReqQ_D_OUT ;
  assign bsvTopCore_rdmaTransportLayer_EN_recvReqInput_put =
	     bsvTopCore_rdmaTransportLayer_RDY_recvReqInput_put &&
	     bsvTopCore_workAndCompleteQController_recvReqQ_EMPTY_N ;
  assign bsvTopCore_rdmaTransportLayer_EN_workReqInput_put =
	     bsvTopCore_rdmaTransportLayer_RDY_workReqInput_put &&
	     bsvTopCore_workAndCompleteQController_workReqQ_EMPTY_N ;
  assign bsvTopCore_rdmaTransportLayer_EN_rdmaDataStreamInput_put =
	     EN_rdmaDataStreamInput_put ;
  assign bsvTopCore_rdmaTransportLayer_EN_rdmaDataStreamPipeOut_deq =
	     EN_rdmaDataStreamPipeOut_deq ;
  assign bsvTopCore_rdmaTransportLayer_EN_workCompPipeOutRQ_deq =
	     bsvTopCore_rdmaTransportLayer_RDY_workCompPipeOutRQ_first &&
	     bsvTopCore_rdmaTransportLayer_RDY_workCompPipeOutRQ_deq &&
	     bsvTopCore_workAndCompleteQController_workCompRqQ_FULL_N ;
  assign bsvTopCore_rdmaTransportLayer_EN_workCompPipeOutSQ_deq =
	     WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ ;
  assign bsvTopCore_rdmaTransportLayer_EN_srvPortMetaData_request_put =
	     bsvTopCore_rdmaTransportLayer_RDY_srvPortMetaData_request_put &&
	     bsvTopCore_cmdQController_metaDataReqQ_EMPTY_N ;
  assign bsvTopCore_rdmaTransportLayer_EN_srvPortMetaData_response_get =
	     bsvTopCore_rdmaTransportLayer_RDY_srvPortMetaData_response_get &&
	     bsvTopCore_cmdQController_metaDataRespQ_FULL_N ;
  assign bsvTopCore_rdmaTransportLayer_EN_dmaReadClt_request_get =
	     bsvTopCore_rdmaTransportLayer_RDY_dmaReadClt_request_get &&
	     bsvTopCore_bluerdmaDmaProxy_h2cProxy_inReqQ_FULL_N ;
  assign bsvTopCore_rdmaTransportLayer_EN_dmaReadClt_response_put =
	     bsvTopCore_rdmaTransportLayer_RDY_dmaReadClt_response_put &&
	     bsvTopCore_bluerdmaDmaProxy_h2cProxy_inRespQ_EMPTY_N ;
  assign bsvTopCore_rdmaTransportLayer_EN_dmaWriteClt_request_get =
	     bsvTopCore_rdmaTransportLayer_RDY_dmaWriteClt_request_get &&
	     bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_FULL_N ;
  assign bsvTopCore_rdmaTransportLayer_EN_dmaWriteClt_response_put =
	     bsvTopCore_rdmaTransportLayer_RDY_dmaWriteClt_response_put &&
	     bsvTopCore_bluerdmaDmaProxy_c2hProxy_inRespQ_EMPTY_N ;

  // submodule bsvTopCore_regBlock_readReqQ
  assign bsvTopCore_regBlock_readReqQ_D_IN = xdmaAxiLiteWrap_readReqQ_D_OUT ;
  assign bsvTopCore_regBlock_readReqQ_ENQ =
	     xdmaAxiLiteWrap_readReqQ_EMPTY_N &&
	     bsvTopCore_regBlock_readReqQ_FULL_N ;
  assign bsvTopCore_regBlock_readReqQ_DEQ =
	     bsvTopCore_regBlock_readReqQ_EMPTY_N &&
	     bsvTopCore_regBlock_readRespQ_FULL_N ;
  assign bsvTopCore_regBlock_readReqQ_CLR = 1'b0 ;

  // submodule bsvTopCore_regBlock_readRespQ
  always@(bsvTopCore_regBlock_readReqQ_D_OUT or
	  IF_bsvTopCore_regBlock_readReqQ_first__288_BIT_ETC___d1336 or
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_ba_ETC___d1293 or
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_ba_ETC___d1295 or
	  x__h54801 or x__h54832)
  begin
    case (bsvTopCore_regBlock_readReqQ_D_OUT[3:2])
      2'd0:
	  bsvTopCore_regBlock_readRespQ_D_IN =
	      bsvTopCore_regBlock_readReqQ_D_OUT[7] ?
		SEL_ARR_bsvTopCore_ringbufPool_controller_0_ba_ETC___d1293[31:0] :
		SEL_ARR_bsvTopCore_ringbufPool_controller_0_ba_ETC___d1295[31:0];
      2'd1:
	  bsvTopCore_regBlock_readRespQ_D_IN =
	      bsvTopCore_regBlock_readReqQ_D_OUT[7] ?
		SEL_ARR_bsvTopCore_ringbufPool_controller_0_ba_ETC___d1293[63:32] :
		SEL_ARR_bsvTopCore_ringbufPool_controller_0_ba_ETC___d1295[63:32];
      2'd2:
	  bsvTopCore_regBlock_readRespQ_D_IN =
	      { 24'd0,
		bsvTopCore_regBlock_readReqQ_D_OUT[7] ?
		  x__h54801 :
		  x__h54832 };
      2'd3:
	  bsvTopCore_regBlock_readRespQ_D_IN =
	      IF_bsvTopCore_regBlock_readReqQ_first__288_BIT_ETC___d1336;
    endcase
  end
  assign bsvTopCore_regBlock_readRespQ_ENQ =
	     bsvTopCore_regBlock_readReqQ_EMPTY_N &&
	     bsvTopCore_regBlock_readRespQ_FULL_N ;
  assign bsvTopCore_regBlock_readRespQ_DEQ =
	     bsvTopCore_regBlock_readRespQ_EMPTY_N &&
	     xdmaAxiLiteWrap_readRespQ_FULL_N ;
  assign bsvTopCore_regBlock_readRespQ_CLR = 1'b0 ;

  // submodule bsvTopCore_regBlock_writeReqQ
  assign bsvTopCore_regBlock_writeReqQ_D_IN =
	     xdmaAxiLiteWrap_writeReqQ_D_OUT ;
  assign bsvTopCore_regBlock_writeReqQ_ENQ =
	     xdmaAxiLiteWrap_writeReqQ_EMPTY_N &&
	     bsvTopCore_regBlock_writeReqQ_FULL_N ;
  assign bsvTopCore_regBlock_writeReqQ_DEQ =
	     WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite ;
  assign bsvTopCore_regBlock_writeReqQ_CLR = 1'b0 ;

  // submodule bsvTopCore_regBlock_writeRespQ
  assign bsvTopCore_regBlock_writeRespQ_ENQ =
	     WILL_FIRE_RL_bsvTopCore_regBlock_ruleHandleWrite ;
  assign bsvTopCore_regBlock_writeRespQ_DEQ =
	     bsvTopCore_regBlock_writeRespQ_EMPTY_N &&
	     xdmaAxiLiteWrap_writeRespQ_FULL_N ;
  assign bsvTopCore_regBlock_writeRespQ_CLR = 1'b0 ;

  // submodule bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_D_IN =
	     { x__h50370,
	       CASE_v9988_0_bsvTopCore_ringbufPool_arbitrated_ETC__q34,
	       SEL_ARR_bsvTopCore_ringbufPool_arbitratedC2hCl_ETC___d1168 } ;
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_ENQ =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_binaryArbitrate ;
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_DEQ =
	     bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_EMPTY_N &&
	     bsvTopCore_ringbufPool_arbitratedC2hClient_reqQ_FULL_N &&
	     (!bsvTopCore_ringbufPool_arbitratedC2hClient_shouldSaveGrantIdxReg ||
	      bsvTopCore_ringbufPool_arbitratedC2hClient_preGrantIdxQ_FULL_N) ;
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_CLR =
	     1'b0 ;

  // submodule bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0_D_IN =
	     { 2'd0, bsvTopCore_ringbufPool_controller_0_dmaReqQ_1_D_OUT } ;
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0_ENQ =
	     bsvTopCore_ringbufPool_controller_0_dmaReqQ_1_EMPTY_N &&
	     bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0_FULL_N ;
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0_DEQ =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_binaryArbitrate &&
	     v__h47620 == 1'd0 ;
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0_CLR =
	     1'b0 ;

  // submodule bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1_D_IN =
	     { 2'd1, bsvTopCore_ringbufPool_controller_1_dmaReqQ_1_D_OUT } ;
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1_ENQ =
	     bsvTopCore_ringbufPool_controller_1_dmaReqQ_1_EMPTY_N &&
	     bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1_FULL_N ;
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1_DEQ =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_binaryArbitrate &&
	     v__h48907 == 1'd0 ;
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1_CLR =
	     1'b0 ;

  // submodule bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2_D_IN =
	     { 2'd2, bsvTopCore_ringbufPool_controller_2_dmaReqQ_1_D_OUT } ;
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2_ENQ =
	     bsvTopCore_ringbufPool_controller_2_dmaReqQ_1_EMPTY_N &&
	     bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2_FULL_N ;
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2_DEQ =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_binaryArbitrate &&
	     v__h47620 == 1'd1 ;
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2_CLR =
	     1'b0 ;

  // submodule bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3_D_IN =
	     { 2'd3, bsvTopCore_ringbufPool_controller_3_dmaReqQ_1_D_OUT } ;
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3_ENQ =
	     bsvTopCore_ringbufPool_controller_3_dmaReqQ_1_EMPTY_N &&
	     bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3_FULL_N ;
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3_DEQ =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_binaryArbitrate &&
	     v__h48907 == 1'd1 ;
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3_CLR =
	     1'b0 ;

  // submodule bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_pipeOutQ
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_IN =
	     { x__h48530,
	       CASE_v7620_0_bsvTopCore_ringbufPool_arbitrated_ETC__q35,
	       SEL_ARR_bsvTopCore_ringbufPool_arbitratedC2hCl_ETC___d1058 } ;
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_ENQ =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_binaryArbitrate ;
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_DEQ =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_binaryArbitrate &&
	     v__h49988 == 1'd0 ;
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_CLR =
	     1'b0 ;

  // submodule bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_D_IN =
	     { x__h49589,
	       CASE_v8907_0_bsvTopCore_ringbufPool_arbitrated_ETC__q36,
	       SEL_ARR_bsvTopCore_ringbufPool_arbitratedC2hCl_ETC___d1113 } ;
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_ENQ =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_binaryArbitrate ;
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_DEQ =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_binaryArbitrate &&
	     v__h49988 == 1'd1 ;
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_CLR =
	     1'b0 ;

  // submodule bsvTopCore_ringbufPool_arbitratedC2hClient_preGrantIdxQ
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_preGrantIdxQ_D_IN =
	     bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_D_OUT[375:374] ;
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_preGrantIdxQ_ENQ =
	     bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_EMPTY_N &&
	     bsvTopCore_ringbufPool_arbitratedC2hClient_reqQ_FULL_N &&
	     (!bsvTopCore_ringbufPool_arbitratedC2hClient_shouldSaveGrantIdxReg ||
	      bsvTopCore_ringbufPool_arbitratedC2hClient_preGrantIdxQ_FULL_N) &&
	     bsvTopCore_ringbufPool_arbitratedC2hClient_shouldSaveGrantIdxReg ;
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_preGrantIdxQ_DEQ =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedC2hClient_dispatchResponse ;
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_preGrantIdxQ_CLR = 1'b0 ;

  // submodule bsvTopCore_ringbufPool_arbitratedC2hClient_reqQ
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_reqQ_D_IN =
	     bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_D_OUT[373:0] ;
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_reqQ_ENQ =
	     bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_EMPTY_N &&
	     bsvTopCore_ringbufPool_arbitratedC2hClient_reqQ_FULL_N &&
	     (!bsvTopCore_ringbufPool_arbitratedC2hClient_shouldSaveGrantIdxReg ||
	      bsvTopCore_ringbufPool_arbitratedC2hClient_preGrantIdxQ_FULL_N) ;
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_reqQ_DEQ =
	     bsvTopCore_ringbufPool_arbitratedC2hClient_reqQ_EMPTY_N &&
	     bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1_FULL_N ;
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_reqQ_CLR = 1'b0 ;

  // submodule bsvTopCore_ringbufPool_arbitratedC2hClient_respQ
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_respQ_ENQ =
	     WILL_FIRE_RL_bsvTopCore_xdmaWriteClt_dispatchResponse &&
	     bsvTopCore_xdmaWriteClt_preGrantIdxQ_D_OUT == 1'd1 ;
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_respQ_DEQ =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedC2hClient_dispatchResponse ;
  assign bsvTopCore_ringbufPool_arbitratedC2hClient_respQ_CLR = 1'b0 ;

  // submodule bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_D_IN =
	     { x__h45639,
	       CASE_v5257_0_bsvTopCore_ringbufPool_arbitrated_ETC__q37,
	       CASE_v5257_0_bsvTopCore_ringbufPool_arbitrated_ETC__q38 } ;
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_ENQ =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_binaryArbitrate ;
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_DEQ =
	     bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_EMPTY_N &&
	     bsvTopCore_ringbufPool_arbitratedH2cClient_reqQ_FULL_N &&
	     (!bsvTopCore_ringbufPool_arbitratedH2cClient_shouldSaveGrantIdxReg ||
	      bsvTopCore_ringbufPool_arbitratedH2cClient_preGrantIdxQ_FULL_N) ;
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_CLR =
	     1'b0 ;

  // submodule bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_0
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_0_D_IN =
	     { 2'd0, bsvTopCore_ringbufPool_controller_0_dmaReqQ_D_OUT } ;
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_0_ENQ =
	     bsvTopCore_ringbufPool_controller_0_dmaReqQ_EMPTY_N &&
	     bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_0_FULL_N ;
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_0_DEQ =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_binaryArbitrate &&
	     v__h43019 == 1'd0 ;
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_0_CLR =
	     1'b0 ;

  // submodule bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_1
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_1_D_IN =
	     { 2'd1, bsvTopCore_ringbufPool_controller_1_dmaReqQ_D_OUT } ;
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_1_ENQ =
	     bsvTopCore_ringbufPool_controller_1_dmaReqQ_EMPTY_N &&
	     bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_1_FULL_N ;
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_1_DEQ =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_binaryArbitrate &&
	     v__h44241 == 1'd0 ;
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_1_CLR =
	     1'b0 ;

  // submodule bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_2
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_2_D_IN =
	     { 2'd2, bsvTopCore_ringbufPool_controller_2_dmaReqQ_D_OUT } ;
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_2_ENQ =
	     bsvTopCore_ringbufPool_controller_2_dmaReqQ_EMPTY_N &&
	     bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_2_FULL_N ;
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_2_DEQ =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_binaryArbitrate &&
	     v__h43019 == 1'd1 ;
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_2_CLR =
	     1'b0 ;

  // submodule bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_3
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_3_D_IN =
	     { 2'd3, bsvTopCore_ringbufPool_controller_3_dmaReqQ_D_OUT } ;
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_3_ENQ =
	     bsvTopCore_ringbufPool_controller_3_dmaReqQ_EMPTY_N &&
	     bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_3_FULL_N ;
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_3_DEQ =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_binaryArbitrate &&
	     v__h44241 == 1'd1 ;
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_3_CLR =
	     1'b0 ;

  // submodule bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_pipeOutQ
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_IN =
	     { x__h43929,
	       CASE_v3019_0_bsvTopCore_ringbufPool_arbitrated_ETC__q39,
	       CASE_v3019_0_bsvTopCore_ringbufPool_arbitrated_ETC__q40 } ;
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_ENQ =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_binaryArbitrate ;
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_DEQ =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_binaryArbitrate &&
	     v__h45257 == 1'd0 ;
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_CLR =
	     1'b0 ;

  // submodule bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_pipeOutQ
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_D_IN =
	     { x__h44923,
	       CASE_v4241_0_bsvTopCore_ringbufPool_arbitrated_ETC__q41,
	       CASE_v4241_0_bsvTopCore_ringbufPool_arbitrated_ETC__q42 } ;
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_ENQ =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_binaryArbitrate ;
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_DEQ =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_binaryArbitrate &&
	     v__h45257 == 1'd1 ;
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_CLR =
	     1'b0 ;

  // submodule bsvTopCore_ringbufPool_arbitratedH2cClient_preGrantIdxQ
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_preGrantIdxQ_D_IN =
	     bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_D_OUT[85:84] ;
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_preGrantIdxQ_ENQ =
	     bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_EMPTY_N &&
	     bsvTopCore_ringbufPool_arbitratedH2cClient_reqQ_FULL_N &&
	     (!bsvTopCore_ringbufPool_arbitratedH2cClient_shouldSaveGrantIdxReg ||
	      bsvTopCore_ringbufPool_arbitratedH2cClient_preGrantIdxQ_FULL_N) &&
	     bsvTopCore_ringbufPool_arbitratedH2cClient_shouldSaveGrantIdxReg ;
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_preGrantIdxQ_DEQ =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedH2cClient_dispatchResponse &&
	     bsvTopCore_ringbufPool_arbitratedH2cClient_respQ_D_OUT[0] ;
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_preGrantIdxQ_CLR = 1'b0 ;

  // submodule bsvTopCore_ringbufPool_arbitratedH2cClient_reqQ
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_reqQ_D_IN =
	     bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_D_OUT[83:0] ;
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_reqQ_ENQ =
	     bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_EMPTY_N &&
	     bsvTopCore_ringbufPool_arbitratedH2cClient_reqQ_FULL_N &&
	     (!bsvTopCore_ringbufPool_arbitratedH2cClient_shouldSaveGrantIdxReg ||
	      bsvTopCore_ringbufPool_arbitratedH2cClient_preGrantIdxQ_FULL_N) ;
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_reqQ_DEQ =
	     bsvTopCore_ringbufPool_arbitratedH2cClient_reqQ_EMPTY_N &&
	     bsvTopCore_xdmaReadClt_inputReqWithIdxVec_1_FULL_N ;
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_reqQ_CLR = 1'b0 ;

  // submodule bsvTopCore_ringbufPool_arbitratedH2cClient_respQ
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_respQ_D_IN =
	     bsvTopCore_xdmaReadClt_respQ_D_OUT ;
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_respQ_ENQ =
	     WILL_FIRE_RL_bsvTopCore_xdmaReadClt_dispatchResponse &&
	     bsvTopCore_xdmaReadClt_preGrantIdxQ_D_OUT == 2'd1 ;
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_respQ_DEQ =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedH2cClient_dispatchResponse ;
  assign bsvTopCore_ringbufPool_arbitratedH2cClient_respQ_CLR = 1'b0 ;

  // submodule bsvTopCore_ringbufPool_controller_0_dmaReqQ
  assign bsvTopCore_ringbufPool_controller_0_dmaReqQ_D_IN =
	     { curReadBlockStartAddr__h25723, 20'd256 } ;
  assign bsvTopCore_ringbufPool_controller_0_dmaReqQ_ENQ =
	     MUX_bsvTopCore_ringbufPool_controller_0_ruleState_write_1__SEL_1 ;
  assign bsvTopCore_ringbufPool_controller_0_dmaReqQ_DEQ =
	     bsvTopCore_ringbufPool_controller_0_dmaReqQ_EMPTY_N &&
	     bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_0_FULL_N ;
  assign bsvTopCore_ringbufPool_controller_0_dmaReqQ_CLR = 1'b0 ;

  // submodule bsvTopCore_ringbufPool_controller_0_dmaReqQ_1
  assign bsvTopCore_ringbufPool_controller_0_dmaReqQ_1_D_IN =
	     { curWriteStartAddr__h30389,
	       20'd32,
	       bsvTopCore_ringbufPool_t_0_bufQ_1_D_OUT,
	       34'h3FFFFFFFF } ;
  assign bsvTopCore_ringbufPool_controller_0_dmaReqQ_1_ENQ =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_0_sendDmaReq_1 &&
	     (!bsvTopCore_ringbufPool_controller_0_headShadow_ETC___d731 ||
	      bsvTopCore_ringbufPool_controller_0_headShadow_ETC___d734) &&
	     bsvTopCore_ringbufPool_t_0_bufQ_1_EMPTY_N ;
  assign bsvTopCore_ringbufPool_controller_0_dmaReqQ_1_DEQ =
	     bsvTopCore_ringbufPool_controller_0_dmaReqQ_1_EMPTY_N &&
	     bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0_FULL_N ;
  assign bsvTopCore_ringbufPool_controller_0_dmaReqQ_1_CLR = 1'b0 ;

  // submodule bsvTopCore_ringbufPool_controller_0_dmaRespQ
  assign bsvTopCore_ringbufPool_controller_0_dmaRespQ_D_IN =
	     bsvTopCore_ringbufPool_arbitratedH2cClient_respQ_D_OUT ;
  assign bsvTopCore_ringbufPool_controller_0_dmaRespQ_ENQ =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedH2cClient_dispatchResponse &&
	     bsvTopCore_ringbufPool_arbitratedH2cClient_preGrantIdxQ_D_OUT ==
	     2'd0 ;
  assign bsvTopCore_ringbufPool_controller_0_dmaRespQ_DEQ =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_0_recvDmaResp ;
  assign bsvTopCore_ringbufPool_controller_0_dmaRespQ_CLR = 1'b0 ;

  // submodule bsvTopCore_ringbufPool_controller_0_dmaRespQ_1
  assign bsvTopCore_ringbufPool_controller_0_dmaRespQ_1_ENQ =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedC2hClient_dispatchResponse &&
	     bsvTopCore_ringbufPool_arbitratedC2hClient_preGrantIdxQ_D_OUT ==
	     2'd0 ;
  assign bsvTopCore_ringbufPool_controller_0_dmaRespQ_1_DEQ =
	     MUX_bsvTopCore_ringbufPool_controller_0_headReg_1_write_1__SEL_2 ;
  assign bsvTopCore_ringbufPool_controller_0_dmaRespQ_1_CLR = 1'b0 ;

  // submodule bsvTopCore_ringbufPool_controller_1_dmaReqQ
  assign bsvTopCore_ringbufPool_controller_1_dmaReqQ_D_IN =
	     { curReadBlockStartAddr__h26896, 20'd256 } ;
  assign bsvTopCore_ringbufPool_controller_1_dmaReqQ_ENQ =
	     MUX_bsvTopCore_ringbufPool_controller_1_ruleState_write_1__SEL_1 ;
  assign bsvTopCore_ringbufPool_controller_1_dmaReqQ_DEQ =
	     bsvTopCore_ringbufPool_controller_1_dmaReqQ_EMPTY_N &&
	     bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_1_FULL_N ;
  assign bsvTopCore_ringbufPool_controller_1_dmaReqQ_CLR = 1'b0 ;

  // submodule bsvTopCore_ringbufPool_controller_1_dmaReqQ_1
  assign bsvTopCore_ringbufPool_controller_1_dmaReqQ_1_D_IN =
	     { curWriteStartAddr__h33412,
	       20'd32,
	       bsvTopCore_ringbufPool_t_1_bufQ_1_D_OUT,
	       34'h3FFFFFFFF } ;
  assign bsvTopCore_ringbufPool_controller_1_dmaReqQ_1_ENQ =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_1_sendDmaReq_1 &&
	     (!bsvTopCore_ringbufPool_controller_1_headShadow_ETC___d761 ||
	      bsvTopCore_ringbufPool_controller_1_headShadow_ETC___d764) &&
	     bsvTopCore_ringbufPool_t_1_bufQ_1_EMPTY_N ;
  assign bsvTopCore_ringbufPool_controller_1_dmaReqQ_1_DEQ =
	     bsvTopCore_ringbufPool_controller_1_dmaReqQ_1_EMPTY_N &&
	     bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1_FULL_N ;
  assign bsvTopCore_ringbufPool_controller_1_dmaReqQ_1_CLR = 1'b0 ;

  // submodule bsvTopCore_ringbufPool_controller_1_dmaRespQ
  assign bsvTopCore_ringbufPool_controller_1_dmaRespQ_D_IN =
	     bsvTopCore_ringbufPool_arbitratedH2cClient_respQ_D_OUT ;
  assign bsvTopCore_ringbufPool_controller_1_dmaRespQ_ENQ =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedH2cClient_dispatchResponse &&
	     bsvTopCore_ringbufPool_arbitratedH2cClient_preGrantIdxQ_D_OUT ==
	     2'd1 ;
  assign bsvTopCore_ringbufPool_controller_1_dmaRespQ_DEQ =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_1_recvDmaResp ;
  assign bsvTopCore_ringbufPool_controller_1_dmaRespQ_CLR = 1'b0 ;

  // submodule bsvTopCore_ringbufPool_controller_1_dmaRespQ_1
  assign bsvTopCore_ringbufPool_controller_1_dmaRespQ_1_ENQ =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedC2hClient_dispatchResponse &&
	     bsvTopCore_ringbufPool_arbitratedC2hClient_preGrantIdxQ_D_OUT ==
	     2'd1 ;
  assign bsvTopCore_ringbufPool_controller_1_dmaRespQ_1_DEQ =
	     MUX_bsvTopCore_ringbufPool_controller_1_headReg_1_write_1__SEL_2 ;
  assign bsvTopCore_ringbufPool_controller_1_dmaRespQ_1_CLR = 1'b0 ;

  // submodule bsvTopCore_ringbufPool_controller_2_dmaReqQ
  assign bsvTopCore_ringbufPool_controller_2_dmaReqQ_D_IN =
	     { curReadBlockStartAddr__h28067, 20'd256 } ;
  assign bsvTopCore_ringbufPool_controller_2_dmaReqQ_ENQ =
	     MUX_bsvTopCore_ringbufPool_controller_2_ruleState_write_1__SEL_1 ;
  assign bsvTopCore_ringbufPool_controller_2_dmaReqQ_DEQ =
	     bsvTopCore_ringbufPool_controller_2_dmaReqQ_EMPTY_N &&
	     bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_2_FULL_N ;
  assign bsvTopCore_ringbufPool_controller_2_dmaReqQ_CLR = 1'b0 ;

  // submodule bsvTopCore_ringbufPool_controller_2_dmaReqQ_1
  assign bsvTopCore_ringbufPool_controller_2_dmaReqQ_1_D_IN =
	     { curWriteStartAddr__h36435,
	       20'd32,
	       bsvTopCore_ringbufPool_t_2_bufQ_1_D_OUT,
	       34'h3FFFFFFFF } ;
  assign bsvTopCore_ringbufPool_controller_2_dmaReqQ_1_ENQ =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_2_sendDmaReq_1 &&
	     (!bsvTopCore_ringbufPool_controller_2_headShadow_ETC___d791 ||
	      bsvTopCore_ringbufPool_controller_2_headShadow_ETC___d794) &&
	     bsvTopCore_ringbufPool_t_2_bufQ_1_EMPTY_N ;
  assign bsvTopCore_ringbufPool_controller_2_dmaReqQ_1_DEQ =
	     bsvTopCore_ringbufPool_controller_2_dmaReqQ_1_EMPTY_N &&
	     bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2_FULL_N ;
  assign bsvTopCore_ringbufPool_controller_2_dmaReqQ_1_CLR = 1'b0 ;

  // submodule bsvTopCore_ringbufPool_controller_2_dmaRespQ
  assign bsvTopCore_ringbufPool_controller_2_dmaRespQ_D_IN =
	     bsvTopCore_ringbufPool_arbitratedH2cClient_respQ_D_OUT ;
  assign bsvTopCore_ringbufPool_controller_2_dmaRespQ_ENQ =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedH2cClient_dispatchResponse &&
	     bsvTopCore_ringbufPool_arbitratedH2cClient_preGrantIdxQ_D_OUT ==
	     2'd2 ;
  assign bsvTopCore_ringbufPool_controller_2_dmaRespQ_DEQ =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_2_recvDmaResp ;
  assign bsvTopCore_ringbufPool_controller_2_dmaRespQ_CLR = 1'b0 ;

  // submodule bsvTopCore_ringbufPool_controller_2_dmaRespQ_1
  assign bsvTopCore_ringbufPool_controller_2_dmaRespQ_1_ENQ =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedC2hClient_dispatchResponse &&
	     bsvTopCore_ringbufPool_arbitratedC2hClient_preGrantIdxQ_D_OUT ==
	     2'd2 ;
  assign bsvTopCore_ringbufPool_controller_2_dmaRespQ_1_DEQ =
	     MUX_bsvTopCore_ringbufPool_controller_2_headReg_1_write_1__SEL_2 ;
  assign bsvTopCore_ringbufPool_controller_2_dmaRespQ_1_CLR = 1'b0 ;

  // submodule bsvTopCore_ringbufPool_controller_3_dmaReqQ
  assign bsvTopCore_ringbufPool_controller_3_dmaReqQ_D_IN =
	     { curReadBlockStartAddr__h29238, 20'd256 } ;
  assign bsvTopCore_ringbufPool_controller_3_dmaReqQ_ENQ =
	     MUX_bsvTopCore_ringbufPool_controller_3_ruleState_write_1__SEL_1 ;
  assign bsvTopCore_ringbufPool_controller_3_dmaReqQ_DEQ =
	     bsvTopCore_ringbufPool_controller_3_dmaReqQ_EMPTY_N &&
	     bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_3_FULL_N ;
  assign bsvTopCore_ringbufPool_controller_3_dmaReqQ_CLR = 1'b0 ;

  // submodule bsvTopCore_ringbufPool_controller_3_dmaReqQ_1
  assign bsvTopCore_ringbufPool_controller_3_dmaReqQ_1_D_IN =
	     { curWriteStartAddr__h39458,
	       20'd32,
	       bsvTopCore_ringbufPool_t_3_bufQ_1_D_OUT,
	       34'h3FFFFFFFF } ;
  assign bsvTopCore_ringbufPool_controller_3_dmaReqQ_1_ENQ =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_3_sendDmaReq_1 &&
	     (!bsvTopCore_ringbufPool_controller_3_headShadow_ETC___d821 ||
	      bsvTopCore_ringbufPool_controller_3_headShadow_ETC___d824) &&
	     bsvTopCore_ringbufPool_t_3_bufQ_1_EMPTY_N ;
  assign bsvTopCore_ringbufPool_controller_3_dmaReqQ_1_DEQ =
	     bsvTopCore_ringbufPool_controller_3_dmaReqQ_1_EMPTY_N &&
	     bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3_FULL_N ;
  assign bsvTopCore_ringbufPool_controller_3_dmaReqQ_1_CLR = 1'b0 ;

  // submodule bsvTopCore_ringbufPool_controller_3_dmaRespQ
  assign bsvTopCore_ringbufPool_controller_3_dmaRespQ_D_IN =
	     bsvTopCore_ringbufPool_arbitratedH2cClient_respQ_D_OUT ;
  assign bsvTopCore_ringbufPool_controller_3_dmaRespQ_ENQ =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedH2cClient_dispatchResponse &&
	     bsvTopCore_ringbufPool_arbitratedH2cClient_preGrantIdxQ_D_OUT ==
	     2'd3 ;
  assign bsvTopCore_ringbufPool_controller_3_dmaRespQ_DEQ =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_3_recvDmaResp ;
  assign bsvTopCore_ringbufPool_controller_3_dmaRespQ_CLR = 1'b0 ;

  // submodule bsvTopCore_ringbufPool_controller_3_dmaRespQ_1
  assign bsvTopCore_ringbufPool_controller_3_dmaRespQ_1_ENQ =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_arbitratedC2hClient_dispatchResponse &&
	     bsvTopCore_ringbufPool_arbitratedC2hClient_preGrantIdxQ_D_OUT ==
	     2'd3 ;
  assign bsvTopCore_ringbufPool_controller_3_dmaRespQ_1_DEQ =
	     MUX_bsvTopCore_ringbufPool_controller_3_headReg_1_write_1__SEL_2 ;
  assign bsvTopCore_ringbufPool_controller_3_dmaRespQ_1_CLR = 1'b0 ;

  // submodule bsvTopCore_ringbufPool_t_0_bufQ
  assign bsvTopCore_ringbufPool_t_0_bufQ_D_IN =
	     bsvTopCore_ringbufPool_controller_0_dmaRespQ_D_OUT[289:34] ;
  assign bsvTopCore_ringbufPool_t_0_bufQ_ENQ =
	     MUX_bsvTopCore_ringbufPool_controller_0_tailReg_write_1__SEL_1 ;
  assign bsvTopCore_ringbufPool_t_0_bufQ_DEQ =
	     bsvTopCore_ringbufPool_t_0_bufQ_EMPTY_N &&
	     bsvTopCore_cmdQController_descReadProxy_ringbufQ_FULL_N ;
  assign bsvTopCore_ringbufPool_t_0_bufQ_CLR = 1'b0 ;

  // submodule bsvTopCore_ringbufPool_t_0_bufQ_1
  assign bsvTopCore_ringbufPool_t_0_bufQ_1_D_IN =
	     bsvTopCore_cmdQController_descWriteProxy_ringbufQ_D_OUT ;
  assign bsvTopCore_ringbufPool_t_0_bufQ_1_ENQ =
	     bsvTopCore_cmdQController_descWriteProxy_ringbufQ_EMPTY_N &&
	     bsvTopCore_ringbufPool_t_0_bufQ_1_FULL_N ;
  assign bsvTopCore_ringbufPool_t_0_bufQ_1_DEQ =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_0_sendDmaReq_1 &&
	     (!bsvTopCore_ringbufPool_controller_0_headShadow_ETC___d731 ||
	      bsvTopCore_ringbufPool_controller_0_headShadow_ETC___d734) &&
	     bsvTopCore_ringbufPool_t_0_bufQ_1_EMPTY_N ;
  assign bsvTopCore_ringbufPool_t_0_bufQ_1_CLR = 1'b0 ;

  // submodule bsvTopCore_ringbufPool_t_1_bufQ
  assign bsvTopCore_ringbufPool_t_1_bufQ_D_IN =
	     bsvTopCore_ringbufPool_controller_1_dmaRespQ_D_OUT[289:34] ;
  assign bsvTopCore_ringbufPool_t_1_bufQ_ENQ =
	     MUX_bsvTopCore_ringbufPool_controller_1_tailReg_write_1__SEL_1 ;
  assign bsvTopCore_ringbufPool_t_1_bufQ_DEQ =
	     bsvTopCore_ringbufPool_t_1_bufQ_EMPTY_N &&
	     bsvTopCore_workAndCompleteQController_rqRingBufQ_FULL_N ;
  assign bsvTopCore_ringbufPool_t_1_bufQ_CLR = 1'b0 ;

  // submodule bsvTopCore_ringbufPool_t_1_bufQ_1
  assign bsvTopCore_ringbufPool_t_1_bufQ_1_D_IN =
	     bsvTopCore_workAndCompleteQController_rcqRingBufQ_D_OUT ;
  assign bsvTopCore_ringbufPool_t_1_bufQ_1_ENQ =
	     bsvTopCore_workAndCompleteQController_rcqRingBufQ_EMPTY_N &&
	     bsvTopCore_ringbufPool_t_1_bufQ_1_FULL_N ;
  assign bsvTopCore_ringbufPool_t_1_bufQ_1_DEQ =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_1_sendDmaReq_1 &&
	     (!bsvTopCore_ringbufPool_controller_1_headShadow_ETC___d761 ||
	      bsvTopCore_ringbufPool_controller_1_headShadow_ETC___d764) &&
	     bsvTopCore_ringbufPool_t_1_bufQ_1_EMPTY_N ;
  assign bsvTopCore_ringbufPool_t_1_bufQ_1_CLR = 1'b0 ;

  // submodule bsvTopCore_ringbufPool_t_2_bufQ
  assign bsvTopCore_ringbufPool_t_2_bufQ_D_IN =
	     bsvTopCore_ringbufPool_controller_2_dmaRespQ_D_OUT[289:34] ;
  assign bsvTopCore_ringbufPool_t_2_bufQ_ENQ =
	     MUX_bsvTopCore_ringbufPool_controller_2_tailReg_write_1__SEL_1 ;
  assign bsvTopCore_ringbufPool_t_2_bufQ_DEQ =
	     bsvTopCore_ringbufPool_t_2_bufQ_EMPTY_N &&
	     bsvTopCore_workAndCompleteQController_sqRingBufQ_FULL_N ;
  assign bsvTopCore_ringbufPool_t_2_bufQ_CLR = 1'b0 ;

  // submodule bsvTopCore_ringbufPool_t_2_bufQ_1
  assign bsvTopCore_ringbufPool_t_2_bufQ_1_D_IN =
	     bsvTopCore_workAndCompleteQController_scqRingBufQ_D_OUT ;
  assign bsvTopCore_ringbufPool_t_2_bufQ_1_ENQ =
	     bsvTopCore_workAndCompleteQController_scqRingBufQ_EMPTY_N &&
	     bsvTopCore_ringbufPool_t_2_bufQ_1_FULL_N ;
  assign bsvTopCore_ringbufPool_t_2_bufQ_1_DEQ =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_2_sendDmaReq_1 &&
	     (!bsvTopCore_ringbufPool_controller_2_headShadow_ETC___d791 ||
	      bsvTopCore_ringbufPool_controller_2_headShadow_ETC___d794) &&
	     bsvTopCore_ringbufPool_t_2_bufQ_1_EMPTY_N ;
  assign bsvTopCore_ringbufPool_t_2_bufQ_1_CLR = 1'b0 ;

  // submodule bsvTopCore_ringbufPool_t_3_bufQ
  assign bsvTopCore_ringbufPool_t_3_bufQ_D_IN =
	     bsvTopCore_ringbufPool_controller_3_dmaRespQ_D_OUT[289:34] ;
  assign bsvTopCore_ringbufPool_t_3_bufQ_ENQ =
	     MUX_bsvTopCore_ringbufPool_controller_3_tailReg_write_1__SEL_1 ;
  assign bsvTopCore_ringbufPool_t_3_bufQ_DEQ = 1'b0 ;
  assign bsvTopCore_ringbufPool_t_3_bufQ_CLR = 1'b0 ;

  // submodule bsvTopCore_ringbufPool_t_3_bufQ_1
  assign bsvTopCore_ringbufPool_t_3_bufQ_1_D_IN = 256'h0 ;
  assign bsvTopCore_ringbufPool_t_3_bufQ_1_ENQ = 1'b0 ;
  assign bsvTopCore_ringbufPool_t_3_bufQ_1_DEQ =
	     WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_3_sendDmaReq_1 &&
	     (!bsvTopCore_ringbufPool_controller_3_headShadow_ETC___d821 ||
	      bsvTopCore_ringbufPool_controller_3_headShadow_ETC___d824) &&
	     bsvTopCore_ringbufPool_t_3_bufQ_1_EMPTY_N ;
  assign bsvTopCore_ringbufPool_t_3_bufQ_1_CLR = 1'b0 ;

  // submodule bsvTopCore_tlb_findReqQ
  assign bsvTopCore_tlb_findReqQ_D_IN = 74'h0 ;
  assign bsvTopCore_tlb_findReqQ_ENQ = 1'b0 ;
  assign bsvTopCore_tlb_findReqQ_DEQ =
	     bsvTopCore_tlb_findReqQ_EMPTY_N &&
	     bsvTopCore_tlb_firstStageCache_bramReadReqQ_FULL_N &&
	     bsvTopCore_tlb_vaInputQ_FULL_N ;
  assign bsvTopCore_tlb_findReqQ_CLR = 1'b0 ;

  // submodule bsvTopCore_tlb_findRespQ
  assign bsvTopCore_tlb_findRespQ_D_IN =
	     { bsvTopCore_tlb_offsetInputQ_D_OUT[21], x__h63504 } ;
  assign bsvTopCore_tlb_findRespQ_ENQ =
	     bsvTopCore_tlb_offsetInputQ_EMPTY_N &&
	     bsvTopCore_tlb_secondStageCache_bramReadRespQ_EMPTY_N &&
	     bsvTopCore_tlb_findRespQ_FULL_N ;
  assign bsvTopCore_tlb_findRespQ_DEQ = 1'b0 ;
  assign bsvTopCore_tlb_findRespQ_CLR = 1'b0 ;

  // submodule bsvTopCore_tlb_firstStageCache_bram2Port_memory
  assign bsvTopCore_tlb_firstStageCache_bram2Port_memory_ADDRA =
	     bsvTopCore_tlb_firstStageCache_bramReadReqQ_D_OUT ;
  assign bsvTopCore_tlb_firstStageCache_bram2Port_memory_ADDRB =
	     bsvTopCore_pgtManager_reqQ_D_OUT[201:192] ;
  assign bsvTopCore_tlb_firstStageCache_bram2Port_memory_DIA =
	     98'h2AAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */  ;
  assign bsvTopCore_tlb_firstStageCache_bram2Port_memory_DIB =
	     { bsvTopCore_pgtManager_reqQ_D_OUT[144:128],
	       bsvTopCore_pgtManager_reqQ_D_OUT[176:160],
	       bsvTopCore_pgtManager_reqQ_D_OUT[127:64] } ;
  assign bsvTopCore_tlb_firstStageCache_bram2Port_memory_WEA = 1'd0 ;
  assign bsvTopCore_tlb_firstStageCache_bram2Port_memory_WEB = 1'd1 ;
  assign bsvTopCore_tlb_firstStageCache_bram2Port_memory_ENA =
	     WILL_FIRE_RL_bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_stageReadResponseAlways ;
  assign bsvTopCore_tlb_firstStageCache_bram2Port_memory_ENB =
	     MUX_bsvTopCore_pgtManager_respQ_enq_1__SEL_1 ;

  // submodule bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_beforeDeq
  assign bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_beforeDeq_D_IN =
	     1'd1 ;
  assign bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_beforeDeq_EN =
	     bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_dequeueing_whas ;

  // submodule bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_beforeEnq
  assign bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_beforeEnq_D_IN =
	     1'd1 ;
  assign bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_beforeEnq_EN =
	     bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_enqw_whas ;

  // submodule bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_ff
  assign bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_ff_D_IN =
	     bsvTopCore_tlb_firstStageCache_bram2Port_memory_DOA ;
  assign bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_ff_ENQ =
	     bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_enqw_whas &&
	     (!bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_dequeueing_whas ||
	      bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_ff_EMPTY_N) ;
  assign bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_ff_DEQ =
	     bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_dequeueing_whas &&
	     bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_ff_EMPTY_N ;
  assign bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_ff_CLR =
	     1'b0 ;

  // submodule bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_beforeDeq
  assign bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_beforeDeq_D_IN =
	     1'b0 ;
  assign bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_beforeDeq_EN =
	     1'b0 ;

  // submodule bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_beforeEnq
  assign bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_beforeEnq_D_IN =
	     1'd1 ;
  assign bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_beforeEnq_EN =
	     bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_enqw_whas ;

  // submodule bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_ff
  assign bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_ff_D_IN =
	     bsvTopCore_tlb_firstStageCache_bram2Port_memory_DOB ;
  assign bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_ff_ENQ =
	     bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_enqw_whas ;
  assign bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_ff_DEQ =
	     1'b0 ;
  assign bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_ff_CLR =
	     1'b0 ;

  // submodule bsvTopCore_tlb_firstStageCache_bramReadReqQ
  assign bsvTopCore_tlb_firstStageCache_bramReadReqQ_D_IN =
	     bsvTopCore_tlb_findReqQ_D_OUT[73:64] ;
  assign bsvTopCore_tlb_firstStageCache_bramReadReqQ_ENQ =
	     bsvTopCore_tlb_findReqQ_EMPTY_N &&
	     bsvTopCore_tlb_firstStageCache_bramReadReqQ_FULL_N &&
	     bsvTopCore_tlb_vaInputQ_FULL_N ;
  assign bsvTopCore_tlb_firstStageCache_bramReadReqQ_DEQ =
	     WILL_FIRE_RL_bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_stageReadResponseAlways ;
  assign bsvTopCore_tlb_firstStageCache_bramReadReqQ_CLR = 1'b0 ;

  // submodule bsvTopCore_tlb_firstStageCache_bramReadRespQ
  assign bsvTopCore_tlb_firstStageCache_bramReadRespQ_D_IN =
	     bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_ff_EMPTY_N ?
	       bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_ff_D_OUT :
	       bsvTopCore_tlb_firstStageCache_bram2Port_memory_DOA ;
  assign bsvTopCore_tlb_firstStageCache_bramReadRespQ_ENQ =
	     bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_dequeueing_whas ;
  assign bsvTopCore_tlb_firstStageCache_bramReadRespQ_DEQ =
	     bsvTopCore_tlb_vaInputQ_EMPTY_N &&
	     bsvTopCore_tlb_firstStageCache_bramReadRespQ_EMPTY_N &&
	     bsvTopCore_tlb_secondStageCache_bramReadReqQ_FULL_N &&
	     bsvTopCore_tlb_offsetInputQ_FULL_N ;
  assign bsvTopCore_tlb_firstStageCache_bramReadRespQ_CLR = 1'b0 ;

  // submodule bsvTopCore_tlb_offsetInputQ
  assign bsvTopCore_tlb_offsetInputQ_D_IN =
	     { bsvTopCore_tlb_firstStageCache_bramReadRespQ_D_OUT[80:64] !=
	       17'd0,
	       bsvTopCore_tlb_vaInputQ_D_OUT[20:0] } ;
  assign bsvTopCore_tlb_offsetInputQ_ENQ =
	     bsvTopCore_tlb_vaInputQ_EMPTY_N &&
	     bsvTopCore_tlb_firstStageCache_bramReadRespQ_EMPTY_N &&
	     bsvTopCore_tlb_secondStageCache_bramReadReqQ_FULL_N &&
	     bsvTopCore_tlb_offsetInputQ_FULL_N ;
  assign bsvTopCore_tlb_offsetInputQ_DEQ =
	     bsvTopCore_tlb_offsetInputQ_EMPTY_N &&
	     bsvTopCore_tlb_secondStageCache_bramReadRespQ_EMPTY_N &&
	     bsvTopCore_tlb_findRespQ_FULL_N ;
  assign bsvTopCore_tlb_offsetInputQ_CLR = 1'b0 ;

  // submodule bsvTopCore_tlb_secondStageCache_bram2Port_memory
  assign bsvTopCore_tlb_secondStageCache_bram2Port_memory_ADDRA =
	     bsvTopCore_tlb_secondStageCache_bramReadReqQ_D_OUT ;
  assign bsvTopCore_tlb_secondStageCache_bram2Port_memory_ADDRB =
	     bsvTopCore_pgtManager_curSecondStagePgtWriteIdxReg ;
  assign bsvTopCore_tlb_secondStageCache_bram2Port_memory_DIA =
	     27'b010101010101010101010101010 /* unspecified value */  ;
  assign bsvTopCore_tlb_secondStageCache_bram2Port_memory_DIB =
	     bsvTopCore_pgtManager_curBeatOfDataReg[60:34] ;
  assign bsvTopCore_tlb_secondStageCache_bram2Port_memory_WEA = 1'd0 ;
  assign bsvTopCore_tlb_secondStageCache_bram2Port_memory_WEB = 1'd1 ;
  assign bsvTopCore_tlb_secondStageCache_bram2Port_memory_ENA =
	     WILL_FIRE_RL_bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_stageReadResponseAlways ;
  assign bsvTopCore_tlb_secondStageCache_bram2Port_memory_ENB =
	     MUX_bsvTopCore_pgtManager_curSecondStagePgtWriteIdxReg_write_1__SEL_2 ;

  // submodule bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_beforeDeq
  assign bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_beforeDeq_D_IN =
	     1'd1 ;
  assign bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_beforeDeq_EN =
	     bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_dequeueing_whas ;

  // submodule bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_beforeEnq
  assign bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_beforeEnq_D_IN =
	     1'd1 ;
  assign bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_beforeEnq_EN =
	     bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_enqw_whas ;

  // submodule bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_ff
  assign bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_ff_D_IN =
	     bsvTopCore_tlb_secondStageCache_bram2Port_memory_DOA ;
  assign bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_ff_ENQ =
	     bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_enqw_whas &&
	     (!bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_dequeueing_whas ||
	      bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_ff_EMPTY_N) ;
  assign bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_ff_DEQ =
	     bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_dequeueing_whas &&
	     bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_ff_EMPTY_N ;
  assign bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_ff_CLR =
	     1'b0 ;

  // submodule bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_beforeDeq
  assign bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_beforeDeq_D_IN =
	     1'b0 ;
  assign bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_beforeDeq_EN =
	     1'b0 ;

  // submodule bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_beforeEnq
  assign bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_beforeEnq_D_IN =
	     1'd1 ;
  assign bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_beforeEnq_EN =
	     bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_enqw_whas ;

  // submodule bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_ff
  assign bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_ff_D_IN =
	     bsvTopCore_tlb_secondStageCache_bram2Port_memory_DOB ;
  assign bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_ff_ENQ =
	     bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_enqw_whas ;
  assign bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_ff_DEQ =
	     1'b0 ;
  assign bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_ff_CLR =
	     1'b0 ;

  // submodule bsvTopCore_tlb_secondStageCache_bramReadReqQ
  assign bsvTopCore_tlb_secondStageCache_bramReadReqQ_D_IN =
	     bsvTopCore_tlb_firstStageCache_bramReadRespQ_D_OUT[97:81] +
	     bsvTopCore_tlb_vaInputQD_OUT_MINUS_bsvTopCore_ETC__q47[37:21] ;
  assign bsvTopCore_tlb_secondStageCache_bramReadReqQ_ENQ =
	     bsvTopCore_tlb_vaInputQ_EMPTY_N &&
	     bsvTopCore_tlb_firstStageCache_bramReadRespQ_EMPTY_N &&
	     bsvTopCore_tlb_secondStageCache_bramReadReqQ_FULL_N &&
	     bsvTopCore_tlb_offsetInputQ_FULL_N ;
  assign bsvTopCore_tlb_secondStageCache_bramReadReqQ_DEQ =
	     WILL_FIRE_RL_bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_stageReadResponseAlways ;
  assign bsvTopCore_tlb_secondStageCache_bramReadReqQ_CLR = 1'b0 ;

  // submodule bsvTopCore_tlb_secondStageCache_bramReadRespQ
  assign bsvTopCore_tlb_secondStageCache_bramReadRespQ_D_IN =
	     bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_ff_EMPTY_N ?
	       bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_ff_D_OUT :
	       bsvTopCore_tlb_secondStageCache_bram2Port_memory_DOA ;
  assign bsvTopCore_tlb_secondStageCache_bramReadRespQ_ENQ =
	     bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_dequeueing_whas ;
  assign bsvTopCore_tlb_secondStageCache_bramReadRespQ_DEQ =
	     bsvTopCore_tlb_offsetInputQ_EMPTY_N &&
	     bsvTopCore_tlb_secondStageCache_bramReadRespQ_EMPTY_N &&
	     bsvTopCore_tlb_findRespQ_FULL_N ;
  assign bsvTopCore_tlb_secondStageCache_bramReadRespQ_CLR = 1'b0 ;

  // submodule bsvTopCore_tlb_vaInputQ
  assign bsvTopCore_tlb_vaInputQ_D_IN = bsvTopCore_tlb_findReqQ_D_OUT[63:0] ;
  assign bsvTopCore_tlb_vaInputQ_ENQ =
	     bsvTopCore_tlb_findReqQ_EMPTY_N &&
	     bsvTopCore_tlb_firstStageCache_bramReadReqQ_FULL_N &&
	     bsvTopCore_tlb_vaInputQ_FULL_N ;
  assign bsvTopCore_tlb_vaInputQ_DEQ =
	     bsvTopCore_tlb_vaInputQ_EMPTY_N &&
	     bsvTopCore_tlb_firstStageCache_bramReadRespQ_EMPTY_N &&
	     bsvTopCore_tlb_secondStageCache_bramReadReqQ_FULL_N &&
	     bsvTopCore_tlb_offsetInputQ_FULL_N ;
  assign bsvTopCore_tlb_vaInputQ_CLR = 1'b0 ;

  // submodule bsvTopCore_workAndCompleteQController_rcqRingBufQ
  assign bsvTopCore_workAndCompleteQController_rcqRingBufQ_D_IN =
	     { 40'hAAAAAAAAAA,
	       bsvTopCore_workAndCompleteQController_workCompRqQ_D_OUT[89:66],
	       80'hAAAAAAAAAAAAAAAAAAAA,
	       bsvTopCore_workAndCompleteQController_workCompRqQ_D_OUT[105:90],
	       11'h2AA,
	       bsvTopCore_workAndCompleteQController_workCompRqQ_D_OUT[142:138],
	       1'h0,
	       bsvTopCore_workAndCompleteQController_workCompRqQ_D_OUT[149:143],
	       bsvTopCore_workAndCompleteQController_workCompRqQ_D_OUT[157:150],
	       bsvTopCore_workAndCompleteQController_workCompRqQ_D_OUT[137:106],
	       32'h55555055 } ;
  assign bsvTopCore_workAndCompleteQController_rcqRingBufQ_ENQ =
	     bsvTopCore_workAndCompleteQController_workCompRqQ_EMPTY_N &&
	     bsvTopCore_workAndCompleteQController_rcqRingBufQ_FULL_N ;
  assign bsvTopCore_workAndCompleteQController_rcqRingBufQ_DEQ =
	     bsvTopCore_workAndCompleteQController_rcqRingBufQ_EMPTY_N &&
	     bsvTopCore_ringbufPool_t_1_bufQ_1_FULL_N ;
  assign bsvTopCore_workAndCompleteQController_rcqRingBufQ_CLR = 1'b0 ;

  // submodule bsvTopCore_workAndCompleteQController_recvReqQ
  assign bsvTopCore_workAndCompleteQController_recvReqQ_D_IN =
	     { 64'hAAAAAAAAAAAAAAAA,
	       bsvTopCore_workAndCompleteQController_rqRingBufQ_D_OUT[63:32],
	       bsvTopCore_workAndCompleteQController_rqRingBufQ_D_OUT[127:64],
	       bsvTopCore_workAndCompleteQController_rqRingBufQ_D_OUT[223:192],
	       bsvTopCore_workAndCompleteQController_rqRingBufQ_D_OUT[247:224] } ;
  assign bsvTopCore_workAndCompleteQController_recvReqQ_ENQ =
	     bsvTopCore_workAndCompleteQController_rqRingBufQ_EMPTY_N &&
	     bsvTopCore_workAndCompleteQController_recvReqQ_FULL_N ;
  assign bsvTopCore_workAndCompleteQController_recvReqQ_DEQ =
	     bsvTopCore_rdmaTransportLayer_RDY_recvReqInput_put &&
	     bsvTopCore_workAndCompleteQController_recvReqQ_EMPTY_N ;
  assign bsvTopCore_workAndCompleteQController_recvReqQ_CLR = 1'b0 ;

  // submodule bsvTopCore_workAndCompleteQController_rqRingBufQ
  assign bsvTopCore_workAndCompleteQController_rqRingBufQ_D_IN =
	     bsvTopCore_ringbufPool_t_1_bufQ_D_OUT ;
  assign bsvTopCore_workAndCompleteQController_rqRingBufQ_ENQ =
	     bsvTopCore_ringbufPool_t_1_bufQ_EMPTY_N &&
	     bsvTopCore_workAndCompleteQController_rqRingBufQ_FULL_N ;
  assign bsvTopCore_workAndCompleteQController_rqRingBufQ_DEQ =
	     bsvTopCore_workAndCompleteQController_rqRingBufQ_EMPTY_N &&
	     bsvTopCore_workAndCompleteQController_recvReqQ_FULL_N ;
  assign bsvTopCore_workAndCompleteQController_rqRingBufQ_CLR = 1'b0 ;

  // submodule bsvTopCore_workAndCompleteQController_scqRingBufQ
  assign bsvTopCore_workAndCompleteQController_scqRingBufQ_D_IN =
	     { 40'hAAAAAAAAAA,
	       bsvTopCore_workAndCompleteQController_workCompSqQ_D_OUT[89:66],
	       80'hAAAAAAAAAAAAAAAAAAAA,
	       bsvTopCore_workAndCompleteQController_workCompSqQ_D_OUT[105:90],
	       11'h2AA,
	       bsvTopCore_workAndCompleteQController_workCompSqQ_D_OUT[142:138],
	       1'h0,
	       bsvTopCore_workAndCompleteQController_workCompSqQ_D_OUT[149:143],
	       bsvTopCore_workAndCompleteQController_workCompSqQ_D_OUT[157:150],
	       bsvTopCore_workAndCompleteQController_workCompSqQ_D_OUT[137:106],
	       32'h55555055 } ;
  assign bsvTopCore_workAndCompleteQController_scqRingBufQ_ENQ =
	     bsvTopCore_workAndCompleteQController_workCompSqQ_EMPTY_N &&
	     bsvTopCore_workAndCompleteQController_scqRingBufQ_FULL_N ;
  assign bsvTopCore_workAndCompleteQController_scqRingBufQ_DEQ =
	     bsvTopCore_workAndCompleteQController_scqRingBufQ_EMPTY_N &&
	     bsvTopCore_ringbufPool_t_2_bufQ_1_FULL_N ;
  assign bsvTopCore_workAndCompleteQController_scqRingBufQ_CLR = 1'b0 ;

  // submodule bsvTopCore_workAndCompleteQController_sqDescReadProxy_ringbufQ
  assign bsvTopCore_workAndCompleteQController_sqDescReadProxy_ringbufQ_D_IN =
	     bsvTopCore_workAndCompleteQController_sqRingBufQ_D_OUT ;
  assign bsvTopCore_workAndCompleteQController_sqDescReadProxy_ringbufQ_ENQ =
	     bsvTopCore_workAndCompleteQController_sqRingBufQ_EMPTY_N &&
	     bsvTopCore_workAndCompleteQController_sqDescReadProxy_ringbufQ_FULL_N ;
  assign bsvTopCore_workAndCompleteQController_sqDescReadProxy_ringbufQ_DEQ =
	     WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_sqDescReadProxy_fillAllReqSegments ;
  assign bsvTopCore_workAndCompleteQController_sqDescReadProxy_ringbufQ_CLR =
	     1'b0 ;

  // submodule bsvTopCore_workAndCompleteQController_sqRingBufQ
  assign bsvTopCore_workAndCompleteQController_sqRingBufQ_D_IN =
	     bsvTopCore_ringbufPool_t_2_bufQ_D_OUT ;
  assign bsvTopCore_workAndCompleteQController_sqRingBufQ_ENQ =
	     bsvTopCore_ringbufPool_t_2_bufQ_EMPTY_N &&
	     bsvTopCore_workAndCompleteQController_sqRingBufQ_FULL_N ;
  assign bsvTopCore_workAndCompleteQController_sqRingBufQ_DEQ =
	     bsvTopCore_workAndCompleteQController_sqRingBufQ_EMPTY_N &&
	     bsvTopCore_workAndCompleteQController_sqDescReadProxy_ringbufQ_FULL_N ;
  assign bsvTopCore_workAndCompleteQController_sqRingBufQ_CLR = 1'b0 ;

  // submodule bsvTopCore_workAndCompleteQController_workCompRqQ
  assign bsvTopCore_workAndCompleteQController_workCompRqQ_D_IN =
	     bsvTopCore_rdmaTransportLayer_workCompPipeOutRQ_first ;
  assign bsvTopCore_workAndCompleteQController_workCompRqQ_ENQ =
	     bsvTopCore_rdmaTransportLayer_RDY_workCompPipeOutRQ_first &&
	     bsvTopCore_rdmaTransportLayer_RDY_workCompPipeOutRQ_deq &&
	     bsvTopCore_workAndCompleteQController_workCompRqQ_FULL_N ;
  assign bsvTopCore_workAndCompleteQController_workCompRqQ_DEQ =
	     bsvTopCore_workAndCompleteQController_workCompRqQ_EMPTY_N &&
	     bsvTopCore_workAndCompleteQController_rcqRingBufQ_FULL_N ;
  assign bsvTopCore_workAndCompleteQController_workCompRqQ_CLR = 1'b0 ;

  // submodule bsvTopCore_workAndCompleteQController_workCompSqQ
  assign bsvTopCore_workAndCompleteQController_workCompSqQ_D_IN =
	     bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first ;
  assign bsvTopCore_workAndCompleteQController_workCompSqQ_ENQ =
	     WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ ;
  assign bsvTopCore_workAndCompleteQController_workCompSqQ_DEQ =
	     bsvTopCore_workAndCompleteQController_workCompSqQ_EMPTY_N &&
	     bsvTopCore_workAndCompleteQController_scqRingBufQ_FULL_N ;
  assign bsvTopCore_workAndCompleteQController_workCompSqQ_CLR = 1'b0 ;

  // submodule bsvTopCore_workAndCompleteQController_workReqQ
  assign bsvTopCore_workAndCompleteQController_workReqQ_D_IN =
	     { 64'hAAAAAAAAAAAAAAAA,
	       bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1[4:1],
	       bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_0[4:0],
	       bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1[191:128],
	       bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1[255:224],
	       bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1[63:32],
	       bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1[127:64],
	       bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1[223:192],
	       bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_0[31:7],
	       279'h2AAAAAAAAAAAAAAA95555555555555554AAAAAAAA555555552AAAAA9555554AAAAAAAA } ;
  assign bsvTopCore_workAndCompleteQController_workReqQ_ENQ =
	     WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ ;
  assign bsvTopCore_workAndCompleteQController_workReqQ_DEQ =
	     bsvTopCore_rdmaTransportLayer_RDY_workReqInput_put &&
	     bsvTopCore_workAndCompleteQController_workReqQ_EMPTY_N ;
  assign bsvTopCore_workAndCompleteQController_workReqQ_CLR = 1'b0 ;

  // submodule bsvTopCore_xdmaGearbox_c2hReqQ
  assign bsvTopCore_xdmaGearbox_c2hReqQ_D_IN =
	     bsvTopCore_xdmaWriteClt_reqQ_D_OUT ;
  assign bsvTopCore_xdmaGearbox_c2hReqQ_ENQ =
	     bsvTopCore_xdmaWriteClt_reqQ_EMPTY_N &&
	     bsvTopCore_xdmaGearbox_c2hReqQ_FULL_N ;
  assign bsvTopCore_xdmaGearbox_c2hReqQ_DEQ =
	     WILL_FIRE_RL_bsvTopCore_xdmaGearbox_forwardC2hReq &&
	     (bsvTopCore_xdmaGearbox_c2hReqQ_EMPTY_N &&
	      !bsvTopCore_xdmaGearbox_c2hReqQ_D_OUT[1] ||
	      !bsvTopCore_xdmaGearbox_isCurrentC2hReqAnEvenBeat) ;
  assign bsvTopCore_xdmaGearbox_c2hReqQ_CLR = 1'b0 ;

  // submodule bsvTopCore_xdmaGearbox_h2cRespQ
  assign bsvTopCore_xdmaGearbox_h2cRespQ_D_IN =
	     bsvTopCore_xdmaGearbox_h2cRespGearbox_read_block ?
	       ((!bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_st_ETC___d1960 &&
		 bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_st_ETC___d1962) ?
		  bsvTopCore_xdmaGearbox_h2cRespGearbox_block1[580:291] :
		  bsvTopCore_xdmaGearbox_h2cRespGearbox_block1[289:0]) :
	       ((!bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_st_ETC___d1951 &&
		 bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_st_ETC___d1953) ?
		  bsvTopCore_xdmaGearbox_h2cRespGearbox_block0[580:291] :
		  bsvTopCore_xdmaGearbox_h2cRespGearbox_block0[289:0]) ;
  assign bsvTopCore_xdmaGearbox_h2cRespQ_ENQ =
	     WILL_FIRE_RL_bsvTopCore_xdmaGearbox_forwardH2cResp &&
	     IF_bsvTopCore_xdmaGearbox_h2cRespGearbox_read__ETC___d2002 ;
  assign bsvTopCore_xdmaGearbox_h2cRespQ_DEQ =
	     bsvTopCore_xdmaGearbox_h2cRespQ_EMPTY_N &&
	     bsvTopCore_xdmaReadClt_respQ_FULL_N ;
  assign bsvTopCore_xdmaGearbox_h2cRespQ_CLR = 1'b0 ;

  // submodule bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ
  assign bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_D_IN =
	     { x__h68460,
	       CASE_v8078_0_bsvTopCore_xdmaReadClt_leafArbite_ETC__q48,
	       CASE_v8078_0_bsvTopCore_xdmaReadClt_leafArbite_ETC__q49 } ;
  assign bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_ENQ =
	     WILL_FIRE_RL_bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_binaryArbitrate ;
  assign bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_DEQ =
	     bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_EMPTY_N &&
	     bsvTopCore_xdmaReadClt_reqQ_FULL_N &&
	     (!bsvTopCore_xdmaReadClt_shouldSaveGrantIdxReg ||
	      bsvTopCore_xdmaReadClt_preGrantIdxQ_FULL_N) ;
  assign bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_CLR =
	     1'b0 ;

  // submodule bsvTopCore_xdmaReadClt_inputReqWithIdxVec_0
  assign bsvTopCore_xdmaReadClt_inputReqWithIdxVec_0_D_IN =
	     { 2'd0, bsvTopCore_bluerdmaDmaProxy_h2cProxy_outReqQ_D_OUT } ;
  assign bsvTopCore_xdmaReadClt_inputReqWithIdxVec_0_ENQ =
	     bsvTopCore_bluerdmaDmaProxy_h2cProxy_outReqQ_EMPTY_N &&
	     bsvTopCore_xdmaReadClt_inputReqWithIdxVec_0_FULL_N ;
  assign bsvTopCore_xdmaReadClt_inputReqWithIdxVec_0_DEQ =
	     WILL_FIRE_RL_bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_binaryArbitrate &&
	     v__h65840 == 1'd0 ;
  assign bsvTopCore_xdmaReadClt_inputReqWithIdxVec_0_CLR = 1'b0 ;

  // submodule bsvTopCore_xdmaReadClt_inputReqWithIdxVec_1
  assign bsvTopCore_xdmaReadClt_inputReqWithIdxVec_1_D_IN =
	     { 2'd1, bsvTopCore_ringbufPool_arbitratedH2cClient_reqQ_D_OUT } ;
  assign bsvTopCore_xdmaReadClt_inputReqWithIdxVec_1_ENQ =
	     bsvTopCore_ringbufPool_arbitratedH2cClient_reqQ_EMPTY_N &&
	     bsvTopCore_xdmaReadClt_inputReqWithIdxVec_1_FULL_N ;
  assign bsvTopCore_xdmaReadClt_inputReqWithIdxVec_1_DEQ =
	     WILL_FIRE_RL_bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_binaryArbitrate &&
	     v__h67062 == 1'd0 ;
  assign bsvTopCore_xdmaReadClt_inputReqWithIdxVec_1_CLR = 1'b0 ;

  // submodule bsvTopCore_xdmaReadClt_inputReqWithIdxVec_2
  assign bsvTopCore_xdmaReadClt_inputReqWithIdxVec_2_D_IN =
	     { 2'd2, bsvTopCore_pgtManager_dmaReadReqQ_D_OUT } ;
  assign bsvTopCore_xdmaReadClt_inputReqWithIdxVec_2_ENQ =
	     bsvTopCore_pgtManager_dmaReadReqQ_EMPTY_N &&
	     bsvTopCore_xdmaReadClt_inputReqWithIdxVec_2_FULL_N ;
  assign bsvTopCore_xdmaReadClt_inputReqWithIdxVec_2_DEQ =
	     WILL_FIRE_RL_bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_binaryArbitrate &&
	     v__h65840 == 1'd1 ;
  assign bsvTopCore_xdmaReadClt_inputReqWithIdxVec_2_CLR = 1'b0 ;

  // submodule bsvTopCore_xdmaReadClt_inputReqWithIdxVec_3
  assign bsvTopCore_xdmaReadClt_inputReqWithIdxVec_3_D_IN =
	     86'h3AAAAAAAAAAAAAAAAAAAAA ;
  assign bsvTopCore_xdmaReadClt_inputReqWithIdxVec_3_ENQ =
	     bsvTopCore_dmaAccessH2cCltVec_3_t &&
	     bsvTopCore_xdmaReadClt_inputReqWithIdxVec_3_FULL_N ;
  assign bsvTopCore_xdmaReadClt_inputReqWithIdxVec_3_DEQ =
	     WILL_FIRE_RL_bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_binaryArbitrate &&
	     v__h67062 == 1'd1 ;
  assign bsvTopCore_xdmaReadClt_inputReqWithIdxVec_3_CLR = 1'b0 ;

  // submodule bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_pipeOutQ
  assign bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_IN =
	     { x__h66750,
	       CASE_v5840_0_bsvTopCore_xdmaReadClt_inputReqWi_ETC__q50,
	       CASE_v5840_0_bsvTopCore_xdmaReadClt_inputReqWi_ETC__q51 } ;
  assign bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_ENQ =
	     WILL_FIRE_RL_bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_binaryArbitrate ;
  assign bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_DEQ =
	     WILL_FIRE_RL_bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_binaryArbitrate &&
	     v__h68078 == 1'd0 ;
  assign bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_CLR =
	     1'b0 ;

  // submodule bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_pipeOutQ
  assign bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_pipeOutQ_D_IN =
	     { x__h67744,
	       CASE_v7062_0_bsvTopCore_xdmaReadClt_inputReqWi_ETC__q52,
	       CASE_v7062_0_bsvTopCore_xdmaReadClt_inputReqWi_ETC__q53 } ;
  assign bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_pipeOutQ_ENQ =
	     WILL_FIRE_RL_bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_binaryArbitrate ;
  assign bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_pipeOutQ_DEQ =
	     WILL_FIRE_RL_bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_binaryArbitrate &&
	     v__h68078 == 1'd1 ;
  assign bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_pipeOutQ_CLR =
	     1'b0 ;

  // submodule bsvTopCore_xdmaReadClt_preGrantIdxQ
  assign bsvTopCore_xdmaReadClt_preGrantIdxQ_D_IN =
	     bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_D_OUT[85:84] ;
  assign bsvTopCore_xdmaReadClt_preGrantIdxQ_ENQ =
	     bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_EMPTY_N &&
	     bsvTopCore_xdmaReadClt_reqQ_FULL_N &&
	     (!bsvTopCore_xdmaReadClt_shouldSaveGrantIdxReg ||
	      bsvTopCore_xdmaReadClt_preGrantIdxQ_FULL_N) &&
	     bsvTopCore_xdmaReadClt_shouldSaveGrantIdxReg ;
  assign bsvTopCore_xdmaReadClt_preGrantIdxQ_DEQ =
	     WILL_FIRE_RL_bsvTopCore_xdmaReadClt_dispatchResponse &&
	     bsvTopCore_xdmaReadClt_respQ_D_OUT[0] ;
  assign bsvTopCore_xdmaReadClt_preGrantIdxQ_CLR = 1'b0 ;

  // submodule bsvTopCore_xdmaReadClt_reqQ
  assign bsvTopCore_xdmaReadClt_reqQ_D_IN =
	     bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_D_OUT[83:0] ;
  assign bsvTopCore_xdmaReadClt_reqQ_ENQ =
	     bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_pipeOutQ_EMPTY_N &&
	     bsvTopCore_xdmaReadClt_reqQ_FULL_N &&
	     (!bsvTopCore_xdmaReadClt_shouldSaveGrantIdxReg ||
	      bsvTopCore_xdmaReadClt_preGrantIdxQ_FULL_N) ;
  assign bsvTopCore_xdmaReadClt_reqQ_DEQ =
	     bsvTopCore_xdmaGearbox_h2cStreamReqQ_enq_pw_whas ;
  assign bsvTopCore_xdmaReadClt_reqQ_CLR = 1'b0 ;

  // submodule bsvTopCore_xdmaReadClt_respQ
  assign bsvTopCore_xdmaReadClt_respQ_D_IN =
	     bsvTopCore_xdmaGearbox_h2cRespQ_D_OUT ;
  assign bsvTopCore_xdmaReadClt_respQ_ENQ =
	     bsvTopCore_xdmaGearbox_h2cRespQ_EMPTY_N &&
	     bsvTopCore_xdmaReadClt_respQ_FULL_N ;
  assign bsvTopCore_xdmaReadClt_respQ_DEQ =
	     WILL_FIRE_RL_bsvTopCore_xdmaReadClt_dispatchResponse ;
  assign bsvTopCore_xdmaReadClt_respQ_CLR = 1'b0 ;

  // submodule bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0
  assign bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0_D_IN =
	     { 1'd0, bsvTopCore_bluerdmaDmaProxy_c2hProxy_outReqQ_D_OUT } ;
  assign bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0_ENQ =
	     bsvTopCore_bluerdmaDmaProxy_c2hProxy_outReqQ_EMPTY_N &&
	     bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0_FULL_N ;
  assign bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0_DEQ =
	     WILL_FIRE_RL_bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_binaryArbitrate &&
	     v__h70211 == 1'd0 ;
  assign bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0_CLR = 1'b0 ;

  // submodule bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1
  assign bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1_D_IN =
	     { 1'd1, bsvTopCore_ringbufPool_arbitratedC2hClient_reqQ_D_OUT } ;
  assign bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1_ENQ =
	     bsvTopCore_ringbufPool_arbitratedC2hClient_reqQ_EMPTY_N &&
	     bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1_FULL_N ;
  assign bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1_DEQ =
	     WILL_FIRE_RL_bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_binaryArbitrate &&
	     v__h70211 == 1'd1 ;
  assign bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1_CLR = 1'b0 ;

  // submodule bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_pipeOutQ
  assign bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_IN =
	     { x__h70886,
	       CASE_v0211_0_bsvTopCore_xdmaWriteClt_inputReqW_ETC__q54,
	       SEL_ARR_bsvTopCore_xdmaWriteClt_inputReqWithId_ETC___d1865 } ;
  assign bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_ENQ =
	     WILL_FIRE_RL_bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_binaryArbitrate ;
  assign bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_DEQ =
	     bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_EMPTY_N &&
	     bsvTopCore_xdmaWriteClt_reqQ_FULL_N &&
	     (!bsvTopCore_xdmaWriteClt_shouldSaveGrantIdxReg ||
	      bsvTopCore_xdmaWriteClt_preGrantIdxQ_FULL_N) ;
  assign bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_CLR =
	     1'b0 ;

  // submodule bsvTopCore_xdmaWriteClt_preGrantIdxQ
  assign bsvTopCore_xdmaWriteClt_preGrantIdxQ_D_IN =
	     bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_OUT[374] ;
  assign bsvTopCore_xdmaWriteClt_preGrantIdxQ_ENQ =
	     bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_EMPTY_N &&
	     bsvTopCore_xdmaWriteClt_reqQ_FULL_N &&
	     (!bsvTopCore_xdmaWriteClt_shouldSaveGrantIdxReg ||
	      bsvTopCore_xdmaWriteClt_preGrantIdxQ_FULL_N) &&
	     bsvTopCore_xdmaWriteClt_shouldSaveGrantIdxReg ;
  assign bsvTopCore_xdmaWriteClt_preGrantIdxQ_DEQ =
	     WILL_FIRE_RL_bsvTopCore_xdmaWriteClt_dispatchResponse ;
  assign bsvTopCore_xdmaWriteClt_preGrantIdxQ_CLR = 1'b0 ;

  // submodule bsvTopCore_xdmaWriteClt_reqQ
  assign bsvTopCore_xdmaWriteClt_reqQ_D_IN =
	     bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_OUT[373:0] ;
  assign bsvTopCore_xdmaWriteClt_reqQ_ENQ =
	     bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_EMPTY_N &&
	     bsvTopCore_xdmaWriteClt_reqQ_FULL_N &&
	     (!bsvTopCore_xdmaWriteClt_shouldSaveGrantIdxReg ||
	      bsvTopCore_xdmaWriteClt_preGrantIdxQ_FULL_N) ;
  assign bsvTopCore_xdmaWriteClt_reqQ_DEQ =
	     bsvTopCore_xdmaWriteClt_reqQ_EMPTY_N &&
	     bsvTopCore_xdmaGearbox_c2hReqQ_FULL_N ;
  assign bsvTopCore_xdmaWriteClt_reqQ_CLR = 1'b0 ;

  // submodule bsvTopCore_xdmaWriteClt_respQ
  assign bsvTopCore_xdmaWriteClt_respQ_ENQ =
	     bsvTopCore_xdmaGearbox_c2hStreamRespQ_deq_pw_whas ;
  assign bsvTopCore_xdmaWriteClt_respQ_DEQ =
	     WILL_FIRE_RL_bsvTopCore_xdmaWriteClt_dispatchResponse ;
  assign bsvTopCore_xdmaWriteClt_respQ_CLR = 1'b0 ;

  // submodule xdmaAxiLiteWrap_cntrlRdAddrFifo
  assign xdmaAxiLiteWrap_cntrlRdAddrFifo_sD_IN =
	     xdmaAxiLiteWrap_cntrlAxilSlave_rawRdAddrBus_dataW_wget ;
  assign xdmaAxiLiteWrap_cntrlRdAddrFifo_sENQ =
	     xdmaAxiLiteWrap_cntrlRdAddrFifo_sFULL_N &&
	     !xdmaAxiLiteWrap_cntrlAxilSlave_rawRdAddrBus_isReset_isInReset &&
	     axilRegBlock_arvalid ;
  assign xdmaAxiLiteWrap_cntrlRdAddrFifo_dDEQ =
	     xdmaAxiLiteWrap_cntrlRdAddrFifo_dEMPTY_N &&
	     xdmaAxiLiteWrap_readReqQ_FULL_N ;

  // submodule xdmaAxiLiteWrap_cntrlRdDataFifo
  assign xdmaAxiLiteWrap_cntrlRdDataFifo_sD_IN =
	     { 2'd0, xdmaAxiLiteWrap_readRespQ_D_OUT } ;
  assign xdmaAxiLiteWrap_cntrlRdDataFifo_sENQ =
	     xdmaAxiLiteWrap_cntrlRdDataFifo_sFULL_N &&
	     xdmaAxiLiteWrap_readRespQ_EMPTY_N ;
  assign xdmaAxiLiteWrap_cntrlRdDataFifo_dDEQ =
	     xdmaAxiLiteWrap_cntrlRdDataFifo_dEMPTY_N &&
	     !xdmaAxiLiteWrap_cntrlAxilSlave_rawRdDataBus_isReset_isInReset &&
	     axilRegBlock_rready ;

  // submodule xdmaAxiLiteWrap_cntrlWrAddrFifo
  assign xdmaAxiLiteWrap_cntrlWrAddrFifo_sD_IN =
	     xdmaAxiLiteWrap_cntrlAxilSlave_rawWrAddrBus_dataW_wget ;
  assign xdmaAxiLiteWrap_cntrlWrAddrFifo_sENQ =
	     xdmaAxiLiteWrap_cntrlWrAddrFifo_sFULL_N &&
	     !xdmaAxiLiteWrap_cntrlAxilSlave_rawWrAddrBus_isReset_isInReset &&
	     axilRegBlock_awvalid ;
  assign xdmaAxiLiteWrap_cntrlWrAddrFifo_dDEQ =
	     xdmaAxiLiteWrap_cntrlWrAddrFifo_dEMPTY_N &&
	     xdmaAxiLiteWrap_cntrlWrDataFifo_dEMPTY_N &&
	     xdmaAxiLiteWrap_writeReqQ_FULL_N ;

  // submodule xdmaAxiLiteWrap_cntrlWrDataFifo
  assign xdmaAxiLiteWrap_cntrlWrDataFifo_sD_IN =
	     xdmaAxiLiteWrap_cntrlAxilSlave_rawWrDataBus_dataW_wget ;
  assign xdmaAxiLiteWrap_cntrlWrDataFifo_sENQ =
	     xdmaAxiLiteWrap_cntrlWrDataFifo_sFULL_N &&
	     !xdmaAxiLiteWrap_cntrlAxilSlave_rawWrDataBus_isReset_isInReset &&
	     axilRegBlock_wvalid ;
  assign xdmaAxiLiteWrap_cntrlWrDataFifo_dDEQ =
	     xdmaAxiLiteWrap_cntrlWrAddrFifo_dEMPTY_N &&
	     xdmaAxiLiteWrap_cntrlWrDataFifo_dEMPTY_N &&
	     xdmaAxiLiteWrap_writeReqQ_FULL_N ;

  // submodule xdmaAxiLiteWrap_cntrlWrRespFifo
  assign xdmaAxiLiteWrap_cntrlWrRespFifo_sD_IN = 2'd0 ;
  assign xdmaAxiLiteWrap_cntrlWrRespFifo_sENQ =
	     xdmaAxiLiteWrap_cntrlWrRespFifo_sFULL_N &&
	     xdmaAxiLiteWrap_writeRespQ_EMPTY_N ;
  assign xdmaAxiLiteWrap_cntrlWrRespFifo_dDEQ =
	     xdmaAxiLiteWrap_cntrlWrRespFifo_dEMPTY_N &&
	     !xdmaAxiLiteWrap_cntrlAxilSlave_rawWrRespBus_isReset_isInReset &&
	     axilRegBlock_bready ;

  // submodule xdmaAxiLiteWrap_readReqQ
  assign xdmaAxiLiteWrap_readReqQ_D_IN =
	     xdmaAxiLiteWrap_cntrlRdAddrFifo_dD_OUT[14:3] ;
  assign xdmaAxiLiteWrap_readReqQ_ENQ =
	     xdmaAxiLiteWrap_cntrlRdAddrFifo_dEMPTY_N &&
	     xdmaAxiLiteWrap_readReqQ_FULL_N ;
  assign xdmaAxiLiteWrap_readReqQ_DEQ =
	     xdmaAxiLiteWrap_readReqQ_EMPTY_N &&
	     bsvTopCore_regBlock_readReqQ_FULL_N ;
  assign xdmaAxiLiteWrap_readReqQ_CLR = 1'b0 ;

  // submodule xdmaAxiLiteWrap_readRespQ
  assign xdmaAxiLiteWrap_readRespQ_D_IN =
	     bsvTopCore_regBlock_readRespQ_D_OUT ;
  assign xdmaAxiLiteWrap_readRespQ_ENQ =
	     bsvTopCore_regBlock_readRespQ_EMPTY_N &&
	     xdmaAxiLiteWrap_readRespQ_FULL_N ;
  assign xdmaAxiLiteWrap_readRespQ_DEQ =
	     xdmaAxiLiteWrap_cntrlRdDataFifo_sFULL_N &&
	     xdmaAxiLiteWrap_readRespQ_EMPTY_N ;
  assign xdmaAxiLiteWrap_readRespQ_CLR = 1'b0 ;

  // submodule xdmaAxiLiteWrap_writeReqQ
  assign xdmaAxiLiteWrap_writeReqQ_D_IN =
	     { xdmaAxiLiteWrap_cntrlWrAddrFifo_dD_OUT[14:3],
	       xdmaAxiLiteWrap_cntrlWrDataFifo_dD_OUT[35:4] } ;
  assign xdmaAxiLiteWrap_writeReqQ_ENQ =
	     xdmaAxiLiteWrap_cntrlWrAddrFifo_dEMPTY_N &&
	     xdmaAxiLiteWrap_cntrlWrDataFifo_dEMPTY_N &&
	     xdmaAxiLiteWrap_writeReqQ_FULL_N ;
  assign xdmaAxiLiteWrap_writeReqQ_DEQ =
	     xdmaAxiLiteWrap_writeReqQ_EMPTY_N &&
	     bsvTopCore_regBlock_writeReqQ_FULL_N ;
  assign xdmaAxiLiteWrap_writeReqQ_CLR = 1'b0 ;

  // submodule xdmaAxiLiteWrap_writeRespQ
  assign xdmaAxiLiteWrap_writeRespQ_ENQ =
	     bsvTopCore_regBlock_writeRespQ_EMPTY_N &&
	     xdmaAxiLiteWrap_writeRespQ_FULL_N ;
  assign xdmaAxiLiteWrap_writeRespQ_DEQ =
	     xdmaAxiLiteWrap_cntrlWrRespFifo_sFULL_N &&
	     xdmaAxiLiteWrap_writeRespQ_EMPTY_N ;
  assign xdmaAxiLiteWrap_writeRespQ_CLR = 1'b0 ;

  // submodule xdmaWrap_dmaReadReqQ
  assign xdmaWrap_dmaReadReqQ_D_IN =
	     bsvTopCore_xdmaGearbox_h2cStreamReqQStore ;
  assign xdmaWrap_dmaReadReqQ_ENQ =
	     bsvTopCore_xdmaGearbox_h2cStreamReqQ_deq_pw_whas ;
  assign xdmaWrap_dmaReadReqQ_DEQ =
	     WILL_FIRE_RL_xdmaWrap_forwardH2cDesc &&
	     xdmaChannel_h2cDescByp_ready &&
	     xdmaWrap_dmaReadReqQ_EMPTY_N ;
  assign xdmaWrap_dmaReadReqQ_CLR = 1'b0 ;

  // submodule xdmaWrap_dmaReadRespQ
  assign xdmaWrap_dmaReadRespQ_D_IN =
	     { xdmaWrap_xdmaH2cStFifo_D_OUT[576:1],
	       xdmaWrap_h2cNextBeatIsFirst,
	       xdmaWrap_xdmaH2cStFifo_D_OUT[0] } ;
  assign xdmaWrap_dmaReadRespQ_ENQ =
	     xdmaWrap_xdmaH2cStFifo_EMPTY_N && xdmaWrap_dmaReadRespQ_FULL_N &&
	     (!xdmaWrap_xdmaH2cStFifo_D_OUT[0] ||
	      xdmaWrap_readReqProcessingQ_EMPTY_N) ;
  assign xdmaWrap_dmaReadRespQ_DEQ = WILL_FIRE_RL_ClientServerResponse_2 ;
  assign xdmaWrap_dmaReadRespQ_CLR = 1'b0 ;

  // submodule xdmaWrap_dmaWriteReqQ
  assign xdmaWrap_dmaWriteReqQ_D_IN =
	     { bsvTopCore_xdmaGearbox_c2hReqGearbox_read_block ?
		 bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_2[373:310] :
		 bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_0[373:310],
	       bsvTopCore_xdmaGearbox_c2hReqGearbox_read_block ?
		 bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_2[309:290] :
		 bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_0[309:290],
	       y_avValue_dataStream_data__h114741,
	       y_avValue_dataStream_byteEn__h114742,
	       IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_read_b_ETC___d2931 } ;
  assign xdmaWrap_dmaWriteReqQ_ENQ = WILL_FIRE_RL_ClientServerRequest_3 ;
  assign xdmaWrap_dmaWriteReqQ_DEQ =
	     WILL_FIRE_RL_xdmaWrap_forwardC2hDescAndData &&
	     xdmaChannel_c2hDescByp_ready ;
  assign xdmaWrap_dmaWriteReqQ_CLR = 1'b0 ;

  // submodule xdmaWrap_dmaWriteRespQ
  assign xdmaWrap_dmaWriteRespQ_ENQ =
	     xdmaWrap_writeReqProcessingQ_EMPTY_N &&
	     xdmaWrap_dmaWriteRespQ_FULL_N ;
  assign xdmaWrap_dmaWriteRespQ_DEQ =
	     bsvTopCore_xdmaGearbox_c2hStreamRespQ_enq_pw_whas ;
  assign xdmaWrap_dmaWriteRespQ_CLR = 1'b0 ;

  // submodule xdmaWrap_readReqProcessingQ
  assign xdmaWrap_readReqProcessingQ_D_IN = xdmaWrap_dmaReadReqQ_D_OUT ;
  assign xdmaWrap_readReqProcessingQ_ENQ =
	     WILL_FIRE_RL_xdmaWrap_forwardH2cDesc &&
	     xdmaChannel_h2cDescByp_ready &&
	     xdmaWrap_dmaReadReqQ_EMPTY_N ;
  assign xdmaWrap_readReqProcessingQ_DEQ =
	     xdmaWrap_xdmaH2cStFifo_EMPTY_N && xdmaWrap_dmaReadRespQ_FULL_N &&
	     (!xdmaWrap_xdmaH2cStFifo_D_OUT[0] ||
	      xdmaWrap_readReqProcessingQ_EMPTY_N) &&
	     xdmaWrap_xdmaH2cStFifo_D_OUT[0] ;
  assign xdmaWrap_readReqProcessingQ_CLR = 1'b0 ;

  // submodule xdmaWrap_writeReqProcessingQ
  assign xdmaWrap_writeReqProcessingQ_D_IN = xdmaWrap_dmaWriteReqQ_D_OUT ;
  assign xdmaWrap_writeReqProcessingQ_ENQ =
	     WILL_FIRE_RL_xdmaWrap_forwardC2hDescAndData &&
	     xdmaChannel_c2hDescByp_ready &&
	     xdmaWrap_dmaWriteReqQ_D_OUT[1] ;
  assign xdmaWrap_writeReqProcessingQ_DEQ =
	     xdmaWrap_writeReqProcessingQ_EMPTY_N &&
	     xdmaWrap_dmaWriteRespQ_FULL_N ;
  assign xdmaWrap_writeReqProcessingQ_CLR = 1'b0 ;

  // submodule xdmaWrap_xdmaC2hStFifo
  assign xdmaWrap_xdmaC2hStFifo_D_IN =
	     { xdmaWrap_dmaWriteReqQ_D_OUT[577:2],
	       xdmaWrap_dmaWriteReqQ_D_OUT[0] } ;
  assign xdmaWrap_xdmaC2hStFifo_ENQ =
	     WILL_FIRE_RL_xdmaWrap_forwardC2hDescAndData &&
	     xdmaChannel_c2hDescByp_ready ;
  assign xdmaWrap_xdmaC2hStFifo_DEQ =
	     xdmaWrap_xdmaC2hStFifo_EMPTY_N &&
	     !xdmaWrap_rawC2hSt_rawBus_isReset_isInReset &&
	     xdmaChannel_rawC2hAxiStream_tready ;
  assign xdmaWrap_xdmaC2hStFifo_CLR = 1'b0 ;

  // submodule xdmaWrap_xdmaH2cStFifo
  assign xdmaWrap_xdmaH2cStFifo_D_IN = xdmaWrap_rawH2cSt_rawBus_dataW_wget ;
  assign xdmaWrap_xdmaH2cStFifo_ENQ =
	     xdmaWrap_xdmaH2cStFifo_FULL_N &&
	     !xdmaWrap_rawH2cSt_rawBus_isReset_isInReset &&
	     xdmaChannel_rawH2cAxiStream_tvalid ;
  assign xdmaWrap_xdmaH2cStFifo_DEQ =
	     xdmaWrap_xdmaH2cStFifo_EMPTY_N && xdmaWrap_dmaReadRespQ_FULL_N &&
	     (!xdmaWrap_xdmaH2cStFifo_D_OUT[0] ||
	      xdmaWrap_readReqProcessingQ_EMPTY_N) ;
  assign xdmaWrap_xdmaH2cStFifo_CLR = 1'b0 ;

  // remaining internal signals
  assign IF_IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_rea_ETC___d2907 =
	     IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_read_b_ETC___d2903 ?
	       (bsvTopCore_xdmaGearbox_c2hReqGearbox_read_block ?
		  bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_3[289:34] :
		  bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_1[289:34]) :
	       256'd0 ;
  assign IF_IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_rea_ETC___d2915 =
	     IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_read_b_ETC___d2903 ?
	       (bsvTopCore_xdmaGearbox_c2hReqGearbox_read_block ?
		  bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_3[33:2] :
		  bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_1[33:2]) :
	       32'd0 ;
  assign IF_IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_rea_ETC___d2930 =
	     IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_read_b_ETC___d2903 ?
	       (bsvTopCore_xdmaGearbox_c2hReqGearbox_read_block ?
		  bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_3[0] :
		  bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_1[0]) :
	       (bsvTopCore_xdmaGearbox_c2hReqGearbox_read_block ?
		  bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_2[0] :
		  bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_0[0]) ;
  assign IF_NOT_bsvTopCore_ringbufPool_controller_0_tai_ETC___d492 =
	     (!bsvTopCore_ringbufPool_controller_0_tailReg_re_ETC___d473 ||
	      !bsvTopCore_ringbufPool_controller_0_tailReg_re_ETC___d475) ?
	       bsvTopCore_ringbufPool_controller_0_tailReg_re_ETC___d488[7] :
	       bsvTopCore_ringbufPool_controller_0_tailReg[7] ;
  assign IF_NOT_bsvTopCore_ringbufPool_controller_0_tai_ETC___d496 =
	     (!bsvTopCore_ringbufPool_controller_0_tailReg_re_ETC___d473 ||
	      !bsvTopCore_ringbufPool_controller_0_tailReg_re_ETC___d475) ?
	       bsvTopCore_ringbufPool_controller_0_tailReg_re_ETC___d488[6:0] :
	       bsvTopCore_ringbufPool_controller_0_tailReg[6:0] ;
  assign IF_NOT_bsvTopCore_ringbufPool_controller_0_tai_ETC___d503 =
	     (!bsvTopCore_ringbufPool_controller_0_tailReg_re_ETC___d473 ||
	      !bsvTopCore_ringbufPool_controller_0_tailReg_re_ETC___d475) ?
	       bsvTopCore_ringbufPool_controller_0_tailReg_re_ETC___d488 :
	       bsvTopCore_ringbufPool_controller_0_tailReg ;
  assign IF_NOT_bsvTopCore_ringbufPool_controller_1_tai_ETC___d566 =
	     (!bsvTopCore_ringbufPool_controller_1_tailReg_re_ETC___d547 ||
	      !bsvTopCore_ringbufPool_controller_1_tailReg_re_ETC___d549) ?
	       bsvTopCore_ringbufPool_controller_1_tailReg_re_ETC___d562[7] :
	       bsvTopCore_ringbufPool_controller_1_tailReg[7] ;
  assign IF_NOT_bsvTopCore_ringbufPool_controller_1_tai_ETC___d570 =
	     (!bsvTopCore_ringbufPool_controller_1_tailReg_re_ETC___d547 ||
	      !bsvTopCore_ringbufPool_controller_1_tailReg_re_ETC___d549) ?
	       bsvTopCore_ringbufPool_controller_1_tailReg_re_ETC___d562[6:0] :
	       bsvTopCore_ringbufPool_controller_1_tailReg[6:0] ;
  assign IF_NOT_bsvTopCore_ringbufPool_controller_1_tai_ETC___d577 =
	     (!bsvTopCore_ringbufPool_controller_1_tailReg_re_ETC___d547 ||
	      !bsvTopCore_ringbufPool_controller_1_tailReg_re_ETC___d549) ?
	       bsvTopCore_ringbufPool_controller_1_tailReg_re_ETC___d562 :
	       bsvTopCore_ringbufPool_controller_1_tailReg ;
  assign IF_NOT_bsvTopCore_ringbufPool_controller_2_tai_ETC___d640 =
	     (!bsvTopCore_ringbufPool_controller_2_tailReg_re_ETC___d621 ||
	      !bsvTopCore_ringbufPool_controller_2_tailReg_re_ETC___d623) ?
	       bsvTopCore_ringbufPool_controller_2_tailReg_re_ETC___d636[7] :
	       bsvTopCore_ringbufPool_controller_2_tailReg[7] ;
  assign IF_NOT_bsvTopCore_ringbufPool_controller_2_tai_ETC___d644 =
	     (!bsvTopCore_ringbufPool_controller_2_tailReg_re_ETC___d621 ||
	      !bsvTopCore_ringbufPool_controller_2_tailReg_re_ETC___d623) ?
	       bsvTopCore_ringbufPool_controller_2_tailReg_re_ETC___d636[6:0] :
	       bsvTopCore_ringbufPool_controller_2_tailReg[6:0] ;
  assign IF_NOT_bsvTopCore_ringbufPool_controller_2_tai_ETC___d651 =
	     (!bsvTopCore_ringbufPool_controller_2_tailReg_re_ETC___d621 ||
	      !bsvTopCore_ringbufPool_controller_2_tailReg_re_ETC___d623) ?
	       bsvTopCore_ringbufPool_controller_2_tailReg_re_ETC___d636 :
	       bsvTopCore_ringbufPool_controller_2_tailReg ;
  assign IF_NOT_bsvTopCore_ringbufPool_controller_3_tai_ETC___d714 =
	     (!bsvTopCore_ringbufPool_controller_3_tailReg_re_ETC___d695 ||
	      !bsvTopCore_ringbufPool_controller_3_tailReg_re_ETC___d697) ?
	       bsvTopCore_ringbufPool_controller_3_tailReg_re_ETC___d710[7] :
	       bsvTopCore_ringbufPool_controller_3_tailReg[7] ;
  assign IF_NOT_bsvTopCore_ringbufPool_controller_3_tai_ETC___d718 =
	     (!bsvTopCore_ringbufPool_controller_3_tailReg_re_ETC___d695 ||
	      !bsvTopCore_ringbufPool_controller_3_tailReg_re_ETC___d697) ?
	       bsvTopCore_ringbufPool_controller_3_tailReg_re_ETC___d710[6:0] :
	       bsvTopCore_ringbufPool_controller_3_tailReg[6:0] ;
  assign IF_NOT_bsvTopCore_ringbufPool_controller_3_tai_ETC___d725 =
	     (!bsvTopCore_ringbufPool_controller_3_tailReg_re_ETC___d695 ||
	      !bsvTopCore_ringbufPool_controller_3_tailReg_re_ETC___d697) ?
	       bsvTopCore_ringbufPool_controller_3_tailReg_re_ETC___d710 :
	       bsvTopCore_ringbufPool_controller_3_tailReg ;
  assign IF_NOT_bsvTopCore_xdmaGearbox_c2hReqQ_notEmpty_ETC___d2062 =
	     (!bsvTopCore_xdmaGearbox_c2hReqQ_EMPTY_N ||
	      bsvTopCore_xdmaGearbox_c2hReqQ_D_OUT[1]) ?
	       IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_write__ETC___d2057 :
	       IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_write__ETC___d2061 ;
  assign IF_NOT_bsvTopCore_xdmaGearbox_c2hReqQ_notEmpty_ETC___d2076 =
	     (!bsvTopCore_xdmaGearbox_c2hReqQ_EMPTY_N ||
	      bsvTopCore_xdmaGearbox_c2hReqQ_D_OUT[1]) ?
	       IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_write__ETC___d2070 :
	       IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_write__ETC___d2075 ;
  assign IF_NOT_bsvTopCore_xdmaGearbox_c2hReqQ_notEmpty_ETC___d2088 =
	     (!bsvTopCore_xdmaGearbox_c2hReqQ_EMPTY_N ||
	      bsvTopCore_xdmaGearbox_c2hReqQ_D_OUT[1]) ?
	       IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_write__ETC___d2083 :
	       IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_write__ETC___d2087 ;
  assign IF_NOT_bsvTopCore_xdmaGearbox_c2hReqQ_notEmpty_ETC___d2102 =
	     (!bsvTopCore_xdmaGearbox_c2hReqQ_EMPTY_N ||
	      bsvTopCore_xdmaGearbox_c2hReqQ_D_OUT[1]) ?
	       IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_write__ETC___d2096 :
	       IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_write__ETC___d2101 ;
  assign IF_bsvTopCore_cmdQController_pgtRespQ_notEmpty_ETC___d2266 =
	     bsvTopCore_cmdQController_pgtRespQ_EMPTY_N ?
	       !bsvTopCore_cmdQController_descWriteProxy_isSendingDescReg &&
	       bsvTopCore_cmdQController_pgtInflightReqQ_EMPTY_N &&
	       bsvTopCore_cmdQController_pgtRespQ_EMPTY_N :
	       !bsvTopCore_cmdQController_metaDataRespQ_EMPTY_N ||
	       bsvTopCore_cmdQController_metaDataRespQ_i_notE_ETC___d2264 ;
  assign IF_bsvTopCore_pgtManager_curBeatOfDataReg_632__ETC___d1638 =
	     bsvTopCore_pgtManager_curBeatOfDataReg[2] ?
	       (bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_cnt ^
		4'h8) <
	       4'd12 :
	       (bsvTopCore_pgtManager_curBeatOfDataReg[0] ?
		  bsvTopCore_pgtManager_respQ_FULL_N :
		  bsvTopCore_pgtManager_dmaReadRespQ_EMPTY_N) ;
  assign IF_bsvTopCore_pgtManager_reqQ_first__608_BITS__ETC___d1618 =
	     (bsvTopCore_pgtManager_reqQ_D_OUT[3:1] == 3'd0) ?
	       (bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_cnt ^
		4'h8) <
	       4'd12 &&
	       bsvTopCore_pgtManager_respQ_FULL_N :
	       bsvTopCore_pgtManager_reqQ_D_OUT[3:1] != 3'd1 ||
	       bsvTopCore_pgtManager_dmaReadReqQ_FULL_N ;
  assign IF_bsvTopCore_regBlock_readReqQ_first__288_BIT_ETC___d1336 =
	     { 24'd0,
	       bsvTopCore_regBlock_readReqQ_D_OUT[7] ?
		 x__h54865 :
		 x__h54896 } ;
  assign IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0__ETC___d2073 =
	     (bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_sta_ETC___d2016 &&
	      !bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_sta_ETC___d2019) ?
	       bsvTopCore_xdmaGearbox_c2hReqQ_D_OUT :
	       bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_1[373:0] ;
  assign IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1__ETC___d2099 =
	     (bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_sta_ETC___d2027 &&
	      !bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_sta_ETC___d2030) ?
	       bsvTopCore_xdmaGearbox_c2hReqQ_D_OUT :
	       bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_3[373:0] ;
  assign IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_read_b_ETC___d2891 =
	     bsvTopCore_xdmaGearbox_c2hReqGearbox_read_block ?
	       !bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_2[374] :
	       !bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_0[374] ;
  assign IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_read_b_ETC___d2903 =
	     bsvTopCore_xdmaGearbox_c2hReqGearbox_read_block ?
	       bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_3[374] :
	       bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_1[374] ;
  assign IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_read_b_ETC___d2931 =
	     { bsvTopCore_xdmaGearbox_c2hReqGearbox_read_block ?
		 bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_2[1] :
		 bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_0[1],
	       IF_IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_rea_ETC___d2930 } ;
  assign IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_write__ETC___d2057 =
	     bsvTopCore_xdmaGearbox_c2hReqGearbox_write_block ?
	       bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_0 :
	       { !bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_sta_ETC___d2019 &&
		 bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_0[374],
		 bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_0[373:0] } ;
  assign IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_write__ETC___d2061 =
	     bsvTopCore_xdmaGearbox_c2hReqGearbox_write_block ?
	       bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_0 :
	       { bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_sta_ETC___d2019 ||
		 bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_0[374],
		 bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_sta_ETC___d2019 ?
		   bsvTopCore_xdmaGearbox_c2hReqQ_D_OUT :
		   bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_0[373:0] } ;
  assign IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_write__ETC___d2070 =
	     bsvTopCore_xdmaGearbox_c2hReqGearbox_write_block ?
	       bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_1 :
	       { (!bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_sta_ETC___d2016 ||
		  bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_sta_ETC___d2019) &&
		 bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_1[374],
		 bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_1[373:0] } ;
  assign IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_write__ETC___d2075 =
	     bsvTopCore_xdmaGearbox_c2hReqGearbox_write_block ?
	       bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_1 :
	       { bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_sta_ETC___d2016 &&
		 !bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_sta_ETC___d2019 ||
		 bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_1[374],
		 IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0__ETC___d2073 } ;
  assign IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_write__ETC___d2083 =
	     bsvTopCore_xdmaGearbox_c2hReqGearbox_write_block ?
	       { !bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_sta_ETC___d2030 &&
		 bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_2[374],
		 bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_2[373:0] } :
	       bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_2 ;
  assign IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_write__ETC___d2087 =
	     bsvTopCore_xdmaGearbox_c2hReqGearbox_write_block ?
	       { bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_sta_ETC___d2030 ||
		 bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_2[374],
		 bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_sta_ETC___d2030 ?
		   bsvTopCore_xdmaGearbox_c2hReqQ_D_OUT :
		   bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_2[373:0] } :
	       bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_2 ;
  assign IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_write__ETC___d2096 =
	     bsvTopCore_xdmaGearbox_c2hReqGearbox_write_block ?
	       { (!bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_sta_ETC___d2027 ||
		  bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_sta_ETC___d2030) &&
		 bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_3[374],
		 bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_3[373:0] } :
	       bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_3 ;
  assign IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_write__ETC___d2101 =
	     bsvTopCore_xdmaGearbox_c2hReqGearbox_write_block ?
	       { bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_sta_ETC___d2027 &&
		 !bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_sta_ETC___d2030 ||
		 bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_3[374],
		 IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1__ETC___d2099 } :
	       bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_3 ;
  assign IF_bsvTopCore_xdmaGearbox_h2cRespGearbox_read__ETC___d1989 =
	     bsvTopCore_xdmaGearbox_h2cRespGearbox_read_block ?
	       ((!bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_st_ETC___d1960 &&
		 bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_st_ETC___d1962) ?
		  !bsvTopCore_xdmaGearbox_h2cRespGearbox_block1[581] :
		  bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_st_ETC___d1962 ||
		  !bsvTopCore_xdmaGearbox_h2cRespGearbox_block1[290]) :
	       ((!bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_st_ETC___d1951 &&
		 bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_st_ETC___d1953) ?
		  !bsvTopCore_xdmaGearbox_h2cRespGearbox_block0[581] :
		  bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_st_ETC___d1953 ||
		  !bsvTopCore_xdmaGearbox_h2cRespGearbox_block0[290]) ;
  assign IF_bsvTopCore_xdmaGearbox_h2cRespGearbox_read__ETC___d2002 =
	     bsvTopCore_xdmaGearbox_h2cRespGearbox_read_block ?
	       ((!bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_st_ETC___d1960 &&
		 bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_st_ETC___d1962) ?
		  bsvTopCore_xdmaGearbox_h2cRespGearbox_block1[581] :
		  !bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_st_ETC___d1962 &&
		  bsvTopCore_xdmaGearbox_h2cRespGearbox_block1[290]) :
	       ((!bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_st_ETC___d1951 &&
		 bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_st_ETC___d1953) ?
		  bsvTopCore_xdmaGearbox_h2cRespGearbox_block0[581] :
		  !bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_st_ETC___d1953 &&
		  bsvTopCore_xdmaGearbox_h2cRespGearbox_block0[290]) ;
  assign NOT_bsvTopCore_xdmaGearbox_c2hReqGearbox_read__ETC___d2879 =
	     (!bsvTopCore_xdmaGearbox_c2hReqGearbox_read_block &&
	      x__h113086 == 2'd3 ||
	      bsvTopCore_xdmaGearbox_c2hReqGearbox_read_block &&
	      x__h113439 == 2'd3) &&
	     !bsvTopCore_xdmaGearbox_c2hReqGearbox_dInReset_pre_isInReset ;
  assign NOT_bsvTopCore_xdmaGearbox_c2hReqGearbox_write_ETC___d2039 =
	     (!bsvTopCore_xdmaGearbox_c2hReqGearbox_write_block &&
	      x__h80645 != 2'd3 ||
	      bsvTopCore_xdmaGearbox_c2hReqGearbox_write_block &&
	      x__h81073 != 2'd3) &&
	     !bsvTopCore_xdmaGearbox_c2hReqGearbox_sInReset_pre_isInReset ;
  assign NOT_bsvTopCore_xdmaGearbox_h2cRespGearbox_read_ETC___d1970 =
	     (!bsvTopCore_xdmaGearbox_h2cRespGearbox_read_block &&
	      x__h77565 != 2'd3 ||
	      bsvTopCore_xdmaGearbox_h2cRespGearbox_read_block &&
	      x__h77987 != 2'd3) &&
	     !bsvTopCore_xdmaGearbox_h2cRespGearbox_dInReset_pre_isInReset ;
  assign NOT_bsvTopCore_xdmaGearbox_h2cRespGearbox_writ_ETC___d2760 =
	     (!bsvTopCore_xdmaGearbox_h2cRespGearbox_write_block &&
	      x__h111261 == 2'd3 ||
	      bsvTopCore_xdmaGearbox_h2cRespGearbox_write_block &&
	      x__h111608 == 2'd3) &&
	     !bsvTopCore_xdmaGearbox_h2cRespGearbox_sInReset_pre_isInReset ;
  assign SEL_ARR_bsvTopCore_ringbufPool_arbitratedC2hCl_ETC___d1057 =
	     { CASE_v7620_0_bsvTopCore_ringbufPool_arbitrated_ETC__q2,
	       CASE_v7620_0_bsvTopCore_ringbufPool_arbitrated_ETC__q3,
	       CASE_v7620_0_bsvTopCore_ringbufPool_arbitrated_ETC__q4 } ;
  assign SEL_ARR_bsvTopCore_ringbufPool_arbitratedC2hCl_ETC___d1058 =
	     { CASE_v7620_0_bsvTopCore_ringbufPool_arbitrated_ETC__q18,
	       CASE_v7620_0_bsvTopCore_ringbufPool_arbitrated_ETC__q19,
	       SEL_ARR_bsvTopCore_ringbufPool_arbitratedC2hCl_ETC___d1057 } ;
  assign SEL_ARR_bsvTopCore_ringbufPool_arbitratedC2hCl_ETC___d1112 =
	     { CASE_v8907_0_bsvTopCore_ringbufPool_arbitrated_ETC__q5,
	       CASE_v8907_0_bsvTopCore_ringbufPool_arbitrated_ETC__q6,
	       CASE_v8907_0_bsvTopCore_ringbufPool_arbitrated_ETC__q7 } ;
  assign SEL_ARR_bsvTopCore_ringbufPool_arbitratedC2hCl_ETC___d1113 =
	     { CASE_v8907_0_bsvTopCore_ringbufPool_arbitrated_ETC__q16,
	       CASE_v8907_0_bsvTopCore_ringbufPool_arbitrated_ETC__q17,
	       SEL_ARR_bsvTopCore_ringbufPool_arbitratedC2hCl_ETC___d1112 } ;
  assign SEL_ARR_bsvTopCore_ringbufPool_arbitratedC2hCl_ETC___d1167 =
	     { CASE_v9988_0_bsvTopCore_ringbufPool_arbitrated_ETC__q8,
	       CASE_v9988_0_bsvTopCore_ringbufPool_arbitrated_ETC__q9,
	       CASE_v9988_0_bsvTopCore_ringbufPool_arbitrated_ETC__q10 } ;
  assign SEL_ARR_bsvTopCore_ringbufPool_arbitratedC2hCl_ETC___d1168 =
	     { CASE_v9988_0_bsvTopCore_ringbufPool_arbitrated_ETC__q20,
	       CASE_v9988_0_bsvTopCore_ringbufPool_arbitrated_ETC__q21,
	       SEL_ARR_bsvTopCore_ringbufPool_arbitratedC2hCl_ETC___d1167 } ;
  assign SEL_ARR_bsvTopCore_xdmaWriteClt_inputReqWithId_ETC___d1864 =
	     { CASE_v0211_0_bsvTopCore_xdmaWriteClt_inputReqW_ETC__q11,
	       CASE_v0211_0_bsvTopCore_xdmaWriteClt_inputReqW_ETC__q12,
	       CASE_v0211_0_bsvTopCore_xdmaWriteClt_inputReqW_ETC__q13 } ;
  assign SEL_ARR_bsvTopCore_xdmaWriteClt_inputReqWithId_ETC___d1865 =
	     { CASE_v0211_0_bsvTopCore_xdmaWriteClt_inputReqW_ETC__q14,
	       CASE_v0211_0_bsvTopCore_xdmaWriteClt_inputReqW_ETC__q15,
	       SEL_ARR_bsvTopCore_xdmaWriteClt_inputReqWithId_ETC___d1864 } ;
  assign a_dataStream_byteEn__h15272 =
	     { bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[2],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[3],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[4],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[5],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[6],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[7],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[8],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[9],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[10],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[11],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[12],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[13],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[14],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[15],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[16],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[17],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[18],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[19],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[20],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[21],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[22],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[23],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[24],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[25],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[26],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[27],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[28],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[29],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[30],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[31],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[32],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[33] } ;
  assign a_dataStream_byteEn__h4862 =
	     { bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[2],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[3],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[4],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[5],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[6],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[7],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[8],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[9],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[10],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[11],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[12],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[13],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[14],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[15],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[16],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[17],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[18],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[19],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[20],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[21],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[22],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[23],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[24],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[25],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[26],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[27],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[28],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[29],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[30],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[31],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[32],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[33] } ;
  assign a_dataStream_data__h15271 =
	     { bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[41:34],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[49:42],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[57:50],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[65:58],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[73:66],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[81:74],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[89:82],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[97:90],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[105:98],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[113:106],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[121:114],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[129:122],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[137:130],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[145:138],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[153:146],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[161:154],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[169:162],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[177:170],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[185:178],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[193:186],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[201:194],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[209:202],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[217:210],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[225:218],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[233:226],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[241:234],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[249:242],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[257:250],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[265:258],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[273:266],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[281:274],
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[289:282] } ;
  assign a_dataStream_data__h4861 =
	     { bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[41:34],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[49:42],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[57:50],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[65:58],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[73:66],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[81:74],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[89:82],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[97:90],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[105:98],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[113:106],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[121:114],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[129:122],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[137:130],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[145:138],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[153:146],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[161:154],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[169:162],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[177:170],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[185:178],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[193:186],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[201:194],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[209:202],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[217:210],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[225:218],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[233:226],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[241:234],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[249:242],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[257:250],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[265:258],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[273:266],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[281:274],
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[289:282] } ;
  assign a_len__h15261 =
	     { 7'd0,
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_inReqQ_D_OUT[326:314] } ;
  assign a_len__h4711 =
	     { 7'd0,
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_inReqQ_D_OUT[76:64] } ;
  assign bsvTopCore_cmdQController_metaDataRespQ_i_notE_ETC___d2264 =
	     bsvTopCore_cmdQController_metaDataRespQ_EMPTY_N &&
	     bsvTopCore_cmdQController_metaDataInflightReqQ_EMPTY_N &&
	     CASE_bsvTopCore_cmdQController_metaDataRespQD_ETC__q1 ;
  assign bsvTopCore_cmdQController_pgtRespQ_notEmpty__2_ETC___d2271 =
	     bsvTopCore_cmdQController_pgtRespQ_EMPTY_N ||
	     bsvTopCore_cmdQController_metaDataRespQ_EMPTY_N &&
	     (bsvTopCore_cmdQController_metaDataRespQ_D_OUT[275:274] ==
	      2'd0 ||
	      bsvTopCore_cmdQController_metaDataRespQ_D_OUT[275:274] ==
	      2'd1 ||
	      bsvTopCore_cmdQController_metaDataRespQ_D_OUT[275:274] ==
	      2'd2) ;
  assign bsvTopCore_ringbufPool_controller_0_dmaRespQ_f_ETC___d500 =
	     bsvTopCore_ringbufPool_controller_0_dmaRespQ_D_OUT[0] &&
	     (IF_NOT_bsvTopCore_ringbufPool_controller_0_tai_ETC___d492 !=
	      bsvTopCore_ringbufPool_controller_0_tailShadowReg[7] ||
	      IF_NOT_bsvTopCore_ringbufPool_controller_0_tai_ETC___d496 !=
	      bsvTopCore_ringbufPool_controller_0_tailShadowReg[6:0]) ;
  assign bsvTopCore_ringbufPool_controller_0_headReg_re_ETC___d435 =
	     bsvTopCore_ringbufPool_controller_0_headReg[7] ==
	     bsvTopCore_ringbufPool_controller_0_tailShadowReg[7] ;
  assign bsvTopCore_ringbufPool_controller_0_headReg_re_ETC___d438 =
	     bsvTopCore_ringbufPool_controller_0_headReg[6:0] ==
	     bsvTopCore_ringbufPool_controller_0_tailShadowReg[6:0] ;
  assign bsvTopCore_ringbufPool_controller_0_headShadow_ETC___d731 =
	     bsvTopCore_ringbufPool_controller_0_headShadowReg[6:0] ==
	     bsvTopCore_ringbufPool_controller_0_tailReg_1[6:0] ;
  assign bsvTopCore_ringbufPool_controller_0_headShadow_ETC___d734 =
	     bsvTopCore_ringbufPool_controller_0_headShadowReg[7] ==
	     bsvTopCore_ringbufPool_controller_0_tailReg_1[7] ;
  assign bsvTopCore_ringbufPool_controller_0_tailReg_re_ETC___d473 =
	     bsvTopCore_ringbufPool_controller_0_tailReg[7] ==
	     bsvTopCore_ringbufPool_controller_0_tailShadowReg[7] ;
  assign bsvTopCore_ringbufPool_controller_0_tailReg_re_ETC___d475 =
	     bsvTopCore_ringbufPool_controller_0_tailReg[6:0] ==
	     bsvTopCore_ringbufPool_controller_0_tailShadowReg[6:0] ;
  assign bsvTopCore_ringbufPool_controller_0_tailReg_re_ETC___d488 =
	     bsvTopCore_ringbufPool_controller_0_tailReg + 8'd1 ;
  assign bsvTopCore_ringbufPool_controller_0_tailShadow_ETC__q43 =
	     bsvTopCore_ringbufPool_controller_0_tailShadowReg + 8'd8 ;
  assign bsvTopCore_ringbufPool_controller_1_dmaRespQ_f_ETC___d574 =
	     bsvTopCore_ringbufPool_controller_1_dmaRespQ_D_OUT[0] &&
	     (IF_NOT_bsvTopCore_ringbufPool_controller_1_tai_ETC___d566 !=
	      bsvTopCore_ringbufPool_controller_1_tailShadowReg[7] ||
	      IF_NOT_bsvTopCore_ringbufPool_controller_1_tai_ETC___d570 !=
	      bsvTopCore_ringbufPool_controller_1_tailShadowReg[6:0]) ;
  assign bsvTopCore_ringbufPool_controller_1_headReg_re_ETC___d509 =
	     bsvTopCore_ringbufPool_controller_1_headReg[7] ==
	     bsvTopCore_ringbufPool_controller_1_tailShadowReg[7] ;
  assign bsvTopCore_ringbufPool_controller_1_headReg_re_ETC___d512 =
	     bsvTopCore_ringbufPool_controller_1_headReg[6:0] ==
	     bsvTopCore_ringbufPool_controller_1_tailShadowReg[6:0] ;
  assign bsvTopCore_ringbufPool_controller_1_headShadow_ETC___d761 =
	     bsvTopCore_ringbufPool_controller_1_headShadowReg[6:0] ==
	     bsvTopCore_ringbufPool_controller_1_tailReg_1[6:0] ;
  assign bsvTopCore_ringbufPool_controller_1_headShadow_ETC___d764 =
	     bsvTopCore_ringbufPool_controller_1_headShadowReg[7] ==
	     bsvTopCore_ringbufPool_controller_1_tailReg_1[7] ;
  assign bsvTopCore_ringbufPool_controller_1_tailReg_re_ETC___d547 =
	     bsvTopCore_ringbufPool_controller_1_tailReg[7] ==
	     bsvTopCore_ringbufPool_controller_1_tailShadowReg[7] ;
  assign bsvTopCore_ringbufPool_controller_1_tailReg_re_ETC___d549 =
	     bsvTopCore_ringbufPool_controller_1_tailReg[6:0] ==
	     bsvTopCore_ringbufPool_controller_1_tailShadowReg[6:0] ;
  assign bsvTopCore_ringbufPool_controller_1_tailReg_re_ETC___d562 =
	     bsvTopCore_ringbufPool_controller_1_tailReg + 8'd1 ;
  assign bsvTopCore_ringbufPool_controller_1_tailShadow_ETC__q44 =
	     bsvTopCore_ringbufPool_controller_1_tailShadowReg + 8'd8 ;
  assign bsvTopCore_ringbufPool_controller_2_dmaRespQ_f_ETC___d648 =
	     bsvTopCore_ringbufPool_controller_2_dmaRespQ_D_OUT[0] &&
	     (IF_NOT_bsvTopCore_ringbufPool_controller_2_tai_ETC___d640 !=
	      bsvTopCore_ringbufPool_controller_2_tailShadowReg[7] ||
	      IF_NOT_bsvTopCore_ringbufPool_controller_2_tai_ETC___d644 !=
	      bsvTopCore_ringbufPool_controller_2_tailShadowReg[6:0]) ;
  assign bsvTopCore_ringbufPool_controller_2_headReg_re_ETC___d583 =
	     bsvTopCore_ringbufPool_controller_2_headReg[7] ==
	     bsvTopCore_ringbufPool_controller_2_tailShadowReg[7] ;
  assign bsvTopCore_ringbufPool_controller_2_headReg_re_ETC___d586 =
	     bsvTopCore_ringbufPool_controller_2_headReg[6:0] ==
	     bsvTopCore_ringbufPool_controller_2_tailShadowReg[6:0] ;
  assign bsvTopCore_ringbufPool_controller_2_headShadow_ETC___d791 =
	     bsvTopCore_ringbufPool_controller_2_headShadowReg[6:0] ==
	     bsvTopCore_ringbufPool_controller_2_tailReg_1[6:0] ;
  assign bsvTopCore_ringbufPool_controller_2_headShadow_ETC___d794 =
	     bsvTopCore_ringbufPool_controller_2_headShadowReg[7] ==
	     bsvTopCore_ringbufPool_controller_2_tailReg_1[7] ;
  assign bsvTopCore_ringbufPool_controller_2_tailReg_re_ETC___d621 =
	     bsvTopCore_ringbufPool_controller_2_tailReg[7] ==
	     bsvTopCore_ringbufPool_controller_2_tailShadowReg[7] ;
  assign bsvTopCore_ringbufPool_controller_2_tailReg_re_ETC___d623 =
	     bsvTopCore_ringbufPool_controller_2_tailReg[6:0] ==
	     bsvTopCore_ringbufPool_controller_2_tailShadowReg[6:0] ;
  assign bsvTopCore_ringbufPool_controller_2_tailReg_re_ETC___d636 =
	     bsvTopCore_ringbufPool_controller_2_tailReg + 8'd1 ;
  assign bsvTopCore_ringbufPool_controller_2_tailShadow_ETC__q45 =
	     bsvTopCore_ringbufPool_controller_2_tailShadowReg + 8'd8 ;
  assign bsvTopCore_ringbufPool_controller_3_dmaRespQ_f_ETC___d722 =
	     bsvTopCore_ringbufPool_controller_3_dmaRespQ_D_OUT[0] &&
	     (IF_NOT_bsvTopCore_ringbufPool_controller_3_tai_ETC___d714 !=
	      bsvTopCore_ringbufPool_controller_3_tailShadowReg[7] ||
	      IF_NOT_bsvTopCore_ringbufPool_controller_3_tai_ETC___d718 !=
	      bsvTopCore_ringbufPool_controller_3_tailShadowReg[6:0]) ;
  assign bsvTopCore_ringbufPool_controller_3_headReg_re_ETC___d657 =
	     bsvTopCore_ringbufPool_controller_3_headReg[7] ==
	     bsvTopCore_ringbufPool_controller_3_tailShadowReg[7] ;
  assign bsvTopCore_ringbufPool_controller_3_headReg_re_ETC___d660 =
	     bsvTopCore_ringbufPool_controller_3_headReg[6:0] ==
	     bsvTopCore_ringbufPool_controller_3_tailShadowReg[6:0] ;
  assign bsvTopCore_ringbufPool_controller_3_headShadow_ETC___d821 =
	     bsvTopCore_ringbufPool_controller_3_headShadowReg[6:0] ==
	     bsvTopCore_ringbufPool_controller_3_tailReg_1[6:0] ;
  assign bsvTopCore_ringbufPool_controller_3_headShadow_ETC___d824 =
	     bsvTopCore_ringbufPool_controller_3_headShadowReg[7] ==
	     bsvTopCore_ringbufPool_controller_3_tailReg_1[7] ;
  assign bsvTopCore_ringbufPool_controller_3_tailReg_re_ETC___d695 =
	     bsvTopCore_ringbufPool_controller_3_tailReg[7] ==
	     bsvTopCore_ringbufPool_controller_3_tailShadowReg[7] ;
  assign bsvTopCore_ringbufPool_controller_3_tailReg_re_ETC___d697 =
	     bsvTopCore_ringbufPool_controller_3_tailReg[6:0] ==
	     bsvTopCore_ringbufPool_controller_3_tailShadowReg[6:0] ;
  assign bsvTopCore_ringbufPool_controller_3_tailReg_re_ETC___d710 =
	     bsvTopCore_ringbufPool_controller_3_tailReg + 8'd1 ;
  assign bsvTopCore_ringbufPool_controller_3_tailShadow_ETC__q46 =
	     bsvTopCore_ringbufPool_controller_3_tailShadowReg + 8'd8 ;
  assign bsvTopCore_tlb_firstStageCache_bram2Port_serve_ETC___d1360 =
	     bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_cnt +
	     (WILL_FIRE_RL_bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_stageReadResponseAlways ?
		4'd1 :
		4'd0) +
	     (bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_dequeueing_whas ?
		4'd15 :
		4'd0) ;
  assign bsvTopCore_tlb_secondStageCache_bram2Port_serv_ETC___d1475 =
	     bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_cnt +
	     (WILL_FIRE_RL_bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_stageReadResponseAlways ?
		4'd1 :
		4'd0) +
	     (bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_dequeueing_whas ?
		4'd15 :
		4'd0) ;
  assign bsvTopCore_tlb_vaInputQD_OUT_MINUS_bsvTopCore_ETC__q47 =
	     bsvTopCore_tlb_vaInputQ_D_OUT -
	     bsvTopCore_tlb_firstStageCache_bramReadRespQ_D_OUT[63:0] ;
  assign bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_sta_ETC___d2016 =
	     bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_status_1 ==
	     bsvTopCore_xdmaGearbox_c2hReqGearbox_block0_status ;
  assign bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_sta_ETC___d2019 =
	     bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_status_0 ==
	     bsvTopCore_xdmaGearbox_c2hReqGearbox_block0_status ;
  assign bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_sta_ETC___d2027 =
	     bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_status_1 ==
	     bsvTopCore_xdmaGearbox_c2hReqGearbox_block1_status ;
  assign bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_sta_ETC___d2030 =
	     bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_status_0 ==
	     bsvTopCore_xdmaGearbox_c2hReqGearbox_block1_status ;
  assign bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_st_ETC___d1951 =
	     bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_status_1 ==
	     bsvTopCore_xdmaGearbox_h2cRespGearbox_block0_status ;
  assign bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_st_ETC___d1953 =
	     bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_status_0 ==
	     bsvTopCore_xdmaGearbox_h2cRespGearbox_block0_status ;
  assign bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_st_ETC___d1960 =
	     bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_status_1 ==
	     bsvTopCore_xdmaGearbox_h2cRespGearbox_block1_status ;
  assign bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_st_ETC___d1962 =
	     bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_status_0 ==
	     bsvTopCore_xdmaGearbox_h2cRespGearbox_block1_status ;
  assign curReadBlockStartAddr__h25723 =
	     { bsvTopCore_ringbufPool_controller_0_baseAddrReg[63:12],
	       bsvTopCore_ringbufPool_controller_0_tailShadowReg[6:3],
	       8'd0 } ;
  assign curReadBlockStartAddr__h26896 =
	     { bsvTopCore_ringbufPool_controller_1_baseAddrReg[63:12],
	       bsvTopCore_ringbufPool_controller_1_tailShadowReg[6:3],
	       8'd0 } ;
  assign curReadBlockStartAddr__h28067 =
	     { bsvTopCore_ringbufPool_controller_2_baseAddrReg[63:12],
	       bsvTopCore_ringbufPool_controller_2_tailShadowReg[6:3],
	       8'd0 } ;
  assign curReadBlockStartAddr__h29238 =
	     { bsvTopCore_ringbufPool_controller_3_baseAddrReg[63:12],
	       bsvTopCore_ringbufPool_controller_3_tailShadowReg[6:3],
	       8'd0 } ;
  assign curSegCnt__h104416 =
	     bsvTopCore_workAndCompleteQController_sqDescReadProxy_isFirstReqSegmentsReg ?
	       4'd0 :
	       bsvTopCore_workAndCompleteQController_sqDescReadProxy_curSegCntReg ;
  assign curSegCnt__h91145 =
	     bsvTopCore_cmdQController_descReadProxy_isFirstReqSegmentsReg ?
	       4'd0 :
	       bsvTopCore_cmdQController_descReadProxy_curSegCntReg ;
  assign curWriteStartAddr__h30389 =
	     { bsvTopCore_ringbufPool_controller_0_baseAddrReg_1[63:12],
	       bsvTopCore_ringbufPool_controller_0_headShadowReg[6:0],
	       5'd0 } ;
  assign curWriteStartAddr__h33412 =
	     { bsvTopCore_ringbufPool_controller_1_baseAddrReg_1[63:12],
	       bsvTopCore_ringbufPool_controller_1_headShadowReg[6:0],
	       5'd0 } ;
  assign curWriteStartAddr__h36435 =
	     { bsvTopCore_ringbufPool_controller_2_baseAddrReg_1[63:12],
	       bsvTopCore_ringbufPool_controller_2_headShadowReg[6:0],
	       5'd0 } ;
  assign curWriteStartAddr__h39458 =
	     { bsvTopCore_ringbufPool_controller_3_baseAddrReg_1[63:12],
	       bsvTopCore_ringbufPool_controller_3_headShadowReg[6:0],
	       5'd0 } ;
  assign din__h93228 =
	     { bsvTopCore_cmdQController_pgtInflightReqQ_D_OUT[255:12],
	       bsvTopCore_cmdQController_pgtRespQ_D_OUT,
	       bsvTopCore_cmdQController_pgtInflightReqQ_D_OUT[10:0] } ;
  assign din__h93848 =
	     { bsvTopCore_cmdQController_metaDataInflightReqQ_D_OUT[255:128],
	       bsvTopCore_cmdQController_metaDataRespQ_D_OUT[62:31],
	       bsvTopCore_cmdQController_metaDataInflightReqQ_D_OUT[95:12],
	       bsvTopCore_cmdQController_metaDataRespQ_D_OUT[63],
	       bsvTopCore_cmdQController_metaDataInflightReqQ_D_OUT[10:0] } ;
  assign din__h94254 =
	     { bsvTopCore_cmdQController_metaDataInflightReqQ_D_OUT[255:128],
	       bsvTopCore_cmdQController_metaDataRespQ_D_OUT[31:0],
	       bsvTopCore_cmdQController_metaDataRespQ_D_OUT[63:32],
	       bsvTopCore_cmdQController_metaDataInflightReqQ_D_OUT[63:12],
	       bsvTopCore_cmdQController_metaDataRespQ_D_OUT[250],
	       4'd0,
	       bsvTopCore_cmdQController_metaDataInflightReqQ_D_OUT[6:0] } ;
  assign din__h94868 =
	     { 87'h55555555555555552AAAAA,
	       bsvTopCore_cmdQController_metaDataRespQ_D_OUT[0],
	       4'hA,
	       bsvTopCore_cmdQController_metaDataRespQ_D_OUT[4:1],
	       32'hAAAAAAAA,
	       bsvTopCore_cmdQController_metaDataRespQ_D_OUT[272:249],
	       8'hAA,
	       bsvTopCore_cmdQController_metaDataRespQ_D_OUT[248:217],
	       bsvTopCore_cmdQController_metaDataInflightReqQ_D_OUT[63:12],
	       bsvTopCore_cmdQController_metaDataRespQ_D_OUT[273],
	       bsvTopCore_cmdQController_metaDataInflightReqQ_D_OUT[10:0] } ;
  assign totalSegCnt__h104415 =
	     bsvTopCore_workAndCompleteQController_sqDescReadProxy_isFirstReqSegmentsReg ?
	       bsvTopCore_workAndCompleteQController_sqDescReadProxy_ringbufQ_D_OUT[10:7] :
	       bsvTopCore_workAndCompleteQController_sqDescReadProxy_totalSegCntReg ;
  assign totalSegCnt__h91144 =
	     bsvTopCore_cmdQController_descReadProxy_isFirstReqSegmentsReg ?
	       bsvTopCore_cmdQController_descReadProxy_ringbufQ_D_OUT[10:7] :
	       bsvTopCore_cmdQController_descReadProxy_totalSegCntReg ;
  assign v__h43019 =
	     bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_needArbitrationReg ?
	       (bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_priorityReg ||
		!bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_0_EMPTY_N) &&
	       bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_2_EMPTY_N :
	       bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_grantReg ;
  assign v__h44241 =
	     bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_needArbitrationReg ?
	       (bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_priorityReg ||
		!bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_1_EMPTY_N) &&
	       bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_3_EMPTY_N :
	       bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_grantReg ;
  assign v__h45257 =
	     bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg ?
	       (bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg ||
		!bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_EMPTY_N) &&
	       bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_EMPTY_N :
	       bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_grantReg ;
  assign v__h47620 =
	     bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_needArbitrationReg ?
	       (bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_priorityReg ||
		!bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0_EMPTY_N) &&
	       bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2_EMPTY_N :
	       bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_grantReg ;
  assign v__h48907 =
	     bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_needArbitrationReg ?
	       (bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_priorityReg ||
		!bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1_EMPTY_N) &&
	       bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3_EMPTY_N :
	       bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_grantReg ;
  assign v__h49988 =
	     bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg ?
	       (bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg ||
		!bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_EMPTY_N) &&
	       bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_EMPTY_N :
	       bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_grantReg ;
  assign v__h65840 =
	     bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_needArbitrationReg ?
	       (bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_priorityReg ||
		!bsvTopCore_xdmaReadClt_inputReqWithIdxVec_0_EMPTY_N) &&
	       bsvTopCore_xdmaReadClt_inputReqWithIdxVec_2_EMPTY_N :
	       bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_grantReg ;
  assign v__h67062 =
	     bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_needArbitrationReg ?
	       (bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_priorityReg ||
		!bsvTopCore_xdmaReadClt_inputReqWithIdxVec_1_EMPTY_N) &&
	       bsvTopCore_xdmaReadClt_inputReqWithIdxVec_3_EMPTY_N :
	       bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_grantReg ;
  assign v__h68078 =
	     bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg ?
	       (bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg ||
		!bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_EMPTY_N) &&
	       bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_pipeOutQ_EMPTY_N :
	       bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_grantReg ;
  assign v__h70211 =
	     bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_needArbitrationReg ?
	       (bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_priorityReg ||
		!bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0_EMPTY_N) &&
	       bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1_EMPTY_N :
	       bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_grantReg ;
  assign x__h111261 =
	     { bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_status_1 ==
	       bsvTopCore_xdmaGearbox_h2cRespGearbox_block0_status,
	       bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_status_0 ==
	       bsvTopCore_xdmaGearbox_h2cRespGearbox_block0_status } ;
  assign x__h111608 =
	     { bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_status_1 ==
	       bsvTopCore_xdmaGearbox_h2cRespGearbox_block1_status,
	       bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_status_0 ==
	       bsvTopCore_xdmaGearbox_h2cRespGearbox_block1_status } ;
  assign x__h113086 =
	     { bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_status_1 !=
	       bsvTopCore_xdmaGearbox_c2hReqGearbox_block0_status,
	       bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_status_0 !=
	       bsvTopCore_xdmaGearbox_c2hReqGearbox_block0_status } ;
  assign x__h113439 =
	     { bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_status_1 !=
	       bsvTopCore_xdmaGearbox_c2hReqGearbox_block1_status,
	       bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_status_0 !=
	       bsvTopCore_xdmaGearbox_c2hReqGearbox_block1_status } ;
  assign x__h52097 =
	     { SEL_ARR_bsvTopCore_ringbufPool_controller_0_ba_ETC___d1227[63:32],
	       bsvTopCore_regBlock_writeReqQ_D_OUT[31:0] } ;
  assign x__h52547 =
	     { SEL_ARR_bsvTopCore_ringbufPool_controller_0_ba_ETC___d1241[63:32],
	       bsvTopCore_regBlock_writeReqQ_D_OUT[31:0] } ;
  assign x__h52946 =
	     { bsvTopCore_regBlock_writeReqQ_D_OUT[31:0],
	       SEL_ARR_bsvTopCore_ringbufPool_controller_0_ba_ETC___d1227[31:0] } ;
  assign x__h53306 =
	     { bsvTopCore_regBlock_writeReqQ_D_OUT[31:0],
	       SEL_ARR_bsvTopCore_ringbufPool_controller_0_ba_ETC___d1241[31:0] } ;
  assign x__h54801 =
	     { SEL_ARR_bsvTopCore_ringbufPool_controller_0_he_ETC___d1304,
	       SEL_ARR_bsvTopCore_ringbufPool_controller_0_he_ETC___d1306 } ;
  assign x__h54832 =
	     { SEL_ARR_bsvTopCore_ringbufPool_controller_0_he_ETC___d1313,
	       SEL_ARR_bsvTopCore_ringbufPool_controller_0_he_ETC___d1319 } ;
  assign x__h54865 =
	     { SEL_ARR_bsvTopCore_ringbufPool_controller_0_ta_ETC___d1325,
	       SEL_ARR_bsvTopCore_ringbufPool_controller_0_ta_ETC___d1327 } ;
  assign x__h54896 =
	     { SEL_ARR_bsvTopCore_ringbufPool_controller_0_ta_ETC___d1330,
	       SEL_ARR_bsvTopCore_ringbufPool_controller_0_ta_ETC___d1332 } ;
  assign x__h63504 = { {16{x__h63509[47]}}, x__h63509 } ;
  assign x__h63509 =
	     { bsvTopCore_tlb_secondStageCache_bramReadRespQ_D_OUT,
	       bsvTopCore_tlb_offsetInputQ_D_OUT[20:0] } ;
  assign x__h77565 =
	     { bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_st_ETC___d1951,
	       bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_st_ETC___d1953 } ;
  assign x__h77987 =
	     { bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_st_ETC___d1960,
	       bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_st_ETC___d1962 } ;
  assign x__h80645 =
	     { !bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_sta_ETC___d2016,
	       !bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_sta_ETC___d2019 } ;
  assign x__h81073 =
	     { !bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_sta_ETC___d2027,
	       !bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_sta_ETC___d2030 } ;
  assign x_byteEn__h64692 =
	     { 8'd0, bsvTopCore_pgtManager_curBeatOfDataReg[33:10] } ;
  assign x_data__h64691 =
	     { 64'd0, bsvTopCore_pgtManager_curBeatOfDataReg[289:98] } ;
  assign y_avValue_dataStream_byteEn__h114742 =
	     { IF_IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_rea_ETC___d2915,
	       bsvTopCore_xdmaGearbox_c2hReqGearbox_read_block ?
		 bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_2[33:2] :
		 bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_0[33:2] } ;
  assign y_avValue_dataStream_data__h114741 =
	     { IF_IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_rea_ETC___d2907,
	       bsvTopCore_xdmaGearbox_c2hReqGearbox_read_block ?
		 bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_2[289:34] :
		 bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_0[289:34] } ;
  always@(v__h43019 or
	  bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_0_D_OUT or
	  bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_2_D_OUT)
  begin
    case (v__h43019)
      1'd0:
	  x__h43929 =
	      bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_0_D_OUT[85:84];
      1'd1:
	  x__h43929 =
	      bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_2_D_OUT[85:84];
    endcase
  end
  always@(v__h44241 or
	  bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_1_D_OUT or
	  bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_3_D_OUT)
  begin
    case (v__h44241)
      1'd0:
	  x__h44923 =
	      bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_1_D_OUT[85:84];
      1'd1:
	  x__h44923 =
	      bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_3_D_OUT[85:84];
    endcase
  end
  always@(v__h45257 or
	  bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_OUT or
	  bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_D_OUT)
  begin
    case (v__h45257)
      1'd0:
	  x__h45639 =
	      bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_OUT[85:84];
      1'd1:
	  x__h45639 =
	      bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_D_OUT[85:84];
    endcase
  end
  always@(v__h47620 or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0_D_OUT or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2_D_OUT)
  begin
    case (v__h47620)
      1'd0:
	  x__h48530 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0_D_OUT[375:374];
      1'd1:
	  x__h48530 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2_D_OUT[375:374];
    endcase
  end
  always@(v__h48907 or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1_D_OUT or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3_D_OUT)
  begin
    case (v__h48907)
      1'd0:
	  x__h49589 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1_D_OUT[375:374];
      1'd1:
	  x__h49589 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3_D_OUT[375:374];
    endcase
  end
  always@(v__h49988 or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_OUT or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_D_OUT)
  begin
    case (v__h49988)
      1'd0:
	  x__h50370 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_OUT[375:374];
      1'd1:
	  x__h50370 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_D_OUT[375:374];
    endcase
  end
  always@(v__h65840 or
	  bsvTopCore_xdmaReadClt_inputReqWithIdxVec_0_D_OUT or
	  bsvTopCore_xdmaReadClt_inputReqWithIdxVec_2_D_OUT)
  begin
    case (v__h65840)
      1'd0:
	  x__h66750 =
	      bsvTopCore_xdmaReadClt_inputReqWithIdxVec_0_D_OUT[85:84];
      1'd1:
	  x__h66750 =
	      bsvTopCore_xdmaReadClt_inputReqWithIdxVec_2_D_OUT[85:84];
    endcase
  end
  always@(v__h68078 or
	  bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_OUT or
	  bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_pipeOutQ_D_OUT)
  begin
    case (v__h68078)
      1'd0:
	  x__h68460 =
	      bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_OUT[85:84];
      1'd1:
	  x__h68460 =
	      bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_pipeOutQ_D_OUT[85:84];
    endcase
  end
  always@(v__h67062 or
	  bsvTopCore_xdmaReadClt_inputReqWithIdxVec_1_D_OUT or
	  bsvTopCore_xdmaReadClt_inputReqWithIdxVec_3_D_OUT)
  begin
    case (v__h67062)
      1'd0:
	  x__h67744 =
	      bsvTopCore_xdmaReadClt_inputReqWithIdxVec_1_D_OUT[85:84];
      1'd1:
	  x__h67744 =
	      bsvTopCore_xdmaReadClt_inputReqWithIdxVec_3_D_OUT[85:84];
    endcase
  end
  always@(v__h70211 or
	  bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0_D_OUT or
	  bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1_D_OUT)
  begin
    case (v__h70211)
      1'd0:
	  x__h70886 = bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0_D_OUT[374];
      1'd1:
	  x__h70886 = bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1_D_OUT[374];
    endcase
  end
  always@(bsvTopCore_cmdQController_descReadProxy_totalSegCntReg or
	  bsvTopCore_cmdQController_descReadProxy_segBuf_0 or
	  bsvTopCore_cmdQController_descReadProxy_segBuf_1)
  begin
    case (bsvTopCore_cmdQController_descReadProxy_totalSegCntReg)
      4'd0:
	  rawDesc__h92183 = bsvTopCore_cmdQController_descReadProxy_segBuf_0;
      4'd1:
	  rawDesc__h92183 = bsvTopCore_cmdQController_descReadProxy_segBuf_1;
      default: rawDesc__h92183 =
		   256'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  always@(bsvTopCore_regBlock_writeReqQ_D_OUT or
	  bsvTopCore_ringbufPool_controller_0_baseAddrReg or
	  bsvTopCore_ringbufPool_controller_1_baseAddrReg or
	  bsvTopCore_ringbufPool_controller_2_baseAddrReg or
	  bsvTopCore_ringbufPool_controller_3_baseAddrReg)
  begin
    case (bsvTopCore_regBlock_writeReqQ_D_OUT[38:36])
      3'd0:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_ba_ETC___d1227 =
	      bsvTopCore_ringbufPool_controller_0_baseAddrReg;
      3'd1:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_ba_ETC___d1227 =
	      bsvTopCore_ringbufPool_controller_1_baseAddrReg;
      3'd2:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_ba_ETC___d1227 =
	      bsvTopCore_ringbufPool_controller_2_baseAddrReg;
      3'd3:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_ba_ETC___d1227 =
	      bsvTopCore_ringbufPool_controller_3_baseAddrReg;
      default: SEL_ARR_bsvTopCore_ringbufPool_controller_0_ba_ETC___d1227 =
		   64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  always@(bsvTopCore_regBlock_writeReqQ_D_OUT or
	  bsvTopCore_ringbufPool_controller_0_baseAddrReg_1 or
	  bsvTopCore_ringbufPool_controller_1_baseAddrReg_1 or
	  bsvTopCore_ringbufPool_controller_2_baseAddrReg_1 or
	  bsvTopCore_ringbufPool_controller_3_baseAddrReg_1)
  begin
    case (bsvTopCore_regBlock_writeReqQ_D_OUT[38:36])
      3'd0:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_ba_ETC___d1241 =
	      bsvTopCore_ringbufPool_controller_0_baseAddrReg_1;
      3'd1:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_ba_ETC___d1241 =
	      bsvTopCore_ringbufPool_controller_1_baseAddrReg_1;
      3'd2:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_ba_ETC___d1241 =
	      bsvTopCore_ringbufPool_controller_2_baseAddrReg_1;
      3'd3:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_ba_ETC___d1241 =
	      bsvTopCore_ringbufPool_controller_3_baseAddrReg_1;
      default: SEL_ARR_bsvTopCore_ringbufPool_controller_0_ba_ETC___d1241 =
		   64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  always@(bsvTopCore_regBlock_readReqQ_D_OUT or
	  bsvTopCore_ringbufPool_controller_0_baseAddrReg or
	  bsvTopCore_ringbufPool_controller_1_baseAddrReg or
	  bsvTopCore_ringbufPool_controller_2_baseAddrReg or
	  bsvTopCore_ringbufPool_controller_3_baseAddrReg)
  begin
    case (bsvTopCore_regBlock_readReqQ_D_OUT[6:4])
      3'd0:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_ba_ETC___d1293 =
	      bsvTopCore_ringbufPool_controller_0_baseAddrReg;
      3'd1:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_ba_ETC___d1293 =
	      bsvTopCore_ringbufPool_controller_1_baseAddrReg;
      3'd2:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_ba_ETC___d1293 =
	      bsvTopCore_ringbufPool_controller_2_baseAddrReg;
      3'd3:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_ba_ETC___d1293 =
	      bsvTopCore_ringbufPool_controller_3_baseAddrReg;
      default: SEL_ARR_bsvTopCore_ringbufPool_controller_0_ba_ETC___d1293 =
		   64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  always@(bsvTopCore_regBlock_readReqQ_D_OUT or
	  bsvTopCore_ringbufPool_controller_0_baseAddrReg_1 or
	  bsvTopCore_ringbufPool_controller_1_baseAddrReg_1 or
	  bsvTopCore_ringbufPool_controller_2_baseAddrReg_1 or
	  bsvTopCore_ringbufPool_controller_3_baseAddrReg_1)
  begin
    case (bsvTopCore_regBlock_readReqQ_D_OUT[6:4])
      3'd0:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_ba_ETC___d1295 =
	      bsvTopCore_ringbufPool_controller_0_baseAddrReg_1;
      3'd1:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_ba_ETC___d1295 =
	      bsvTopCore_ringbufPool_controller_1_baseAddrReg_1;
      3'd2:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_ba_ETC___d1295 =
	      bsvTopCore_ringbufPool_controller_2_baseAddrReg_1;
      3'd3:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_ba_ETC___d1295 =
	      bsvTopCore_ringbufPool_controller_3_baseAddrReg_1;
      default: SEL_ARR_bsvTopCore_ringbufPool_controller_0_ba_ETC___d1295 =
		   64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  always@(bsvTopCore_regBlock_readReqQ_D_OUT or
	  bsvTopCore_ringbufPool_controller_0_headReg_1 or
	  bsvTopCore_ringbufPool_controller_1_headReg_1 or
	  bsvTopCore_ringbufPool_controller_2_headReg_1 or
	  bsvTopCore_ringbufPool_controller_3_headReg_1)
  begin
    case (bsvTopCore_regBlock_readReqQ_D_OUT[6:4])
      3'd0:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_he_ETC___d1313 =
	      bsvTopCore_ringbufPool_controller_0_headReg_1[7];
      3'd1:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_he_ETC___d1313 =
	      bsvTopCore_ringbufPool_controller_1_headReg_1[7];
      3'd2:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_he_ETC___d1313 =
	      bsvTopCore_ringbufPool_controller_2_headReg_1[7];
      3'd3:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_he_ETC___d1313 =
	      bsvTopCore_ringbufPool_controller_3_headReg_1[7];
      default: SEL_ARR_bsvTopCore_ringbufPool_controller_0_he_ETC___d1313 =
		   1'b0 /* unspecified value */ ;
    endcase
  end
  always@(bsvTopCore_regBlock_readReqQ_D_OUT or
	  bsvTopCore_ringbufPool_controller_0_headReg or
	  bsvTopCore_ringbufPool_controller_1_headReg or
	  bsvTopCore_ringbufPool_controller_2_headReg or
	  bsvTopCore_ringbufPool_controller_3_headReg)
  begin
    case (bsvTopCore_regBlock_readReqQ_D_OUT[6:4])
      3'd0:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_he_ETC___d1304 =
	      bsvTopCore_ringbufPool_controller_0_headReg[7];
      3'd1:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_he_ETC___d1304 =
	      bsvTopCore_ringbufPool_controller_1_headReg[7];
      3'd2:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_he_ETC___d1304 =
	      bsvTopCore_ringbufPool_controller_2_headReg[7];
      3'd3:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_he_ETC___d1304 =
	      bsvTopCore_ringbufPool_controller_3_headReg[7];
      default: SEL_ARR_bsvTopCore_ringbufPool_controller_0_he_ETC___d1304 =
		   1'b0 /* unspecified value */ ;
    endcase
  end
  always@(bsvTopCore_regBlock_readReqQ_D_OUT or
	  bsvTopCore_ringbufPool_controller_0_tailReg or
	  bsvTopCore_ringbufPool_controller_1_tailReg or
	  bsvTopCore_ringbufPool_controller_2_tailReg or
	  bsvTopCore_ringbufPool_controller_3_tailReg)
  begin
    case (bsvTopCore_regBlock_readReqQ_D_OUT[6:4])
      3'd0:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_ta_ETC___d1325 =
	      bsvTopCore_ringbufPool_controller_0_tailReg[7];
      3'd1:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_ta_ETC___d1325 =
	      bsvTopCore_ringbufPool_controller_1_tailReg[7];
      3'd2:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_ta_ETC___d1325 =
	      bsvTopCore_ringbufPool_controller_2_tailReg[7];
      3'd3:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_ta_ETC___d1325 =
	      bsvTopCore_ringbufPool_controller_3_tailReg[7];
      default: SEL_ARR_bsvTopCore_ringbufPool_controller_0_ta_ETC___d1325 =
		   1'b0 /* unspecified value */ ;
    endcase
  end
  always@(bsvTopCore_regBlock_readReqQ_D_OUT or
	  bsvTopCore_ringbufPool_controller_0_tailReg_1 or
	  bsvTopCore_ringbufPool_controller_1_tailReg_1 or
	  bsvTopCore_ringbufPool_controller_2_tailReg_1 or
	  bsvTopCore_ringbufPool_controller_3_tailReg_1)
  begin
    case (bsvTopCore_regBlock_readReqQ_D_OUT[6:4])
      3'd0:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_ta_ETC___d1330 =
	      bsvTopCore_ringbufPool_controller_0_tailReg_1[7];
      3'd1:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_ta_ETC___d1330 =
	      bsvTopCore_ringbufPool_controller_1_tailReg_1[7];
      3'd2:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_ta_ETC___d1330 =
	      bsvTopCore_ringbufPool_controller_2_tailReg_1[7];
      3'd3:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_ta_ETC___d1330 =
	      bsvTopCore_ringbufPool_controller_3_tailReg_1[7];
      default: SEL_ARR_bsvTopCore_ringbufPool_controller_0_ta_ETC___d1330 =
		   1'b0 /* unspecified value */ ;
    endcase
  end
  always@(bsvTopCore_regBlock_readReqQ_D_OUT or
	  bsvTopCore_ringbufPool_controller_0_tailReg or
	  bsvTopCore_ringbufPool_controller_1_tailReg or
	  bsvTopCore_ringbufPool_controller_2_tailReg or
	  bsvTopCore_ringbufPool_controller_3_tailReg)
  begin
    case (bsvTopCore_regBlock_readReqQ_D_OUT[6:4])
      3'd0:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_ta_ETC___d1327 =
	      bsvTopCore_ringbufPool_controller_0_tailReg[6:0];
      3'd1:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_ta_ETC___d1327 =
	      bsvTopCore_ringbufPool_controller_1_tailReg[6:0];
      3'd2:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_ta_ETC___d1327 =
	      bsvTopCore_ringbufPool_controller_2_tailReg[6:0];
      3'd3:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_ta_ETC___d1327 =
	      bsvTopCore_ringbufPool_controller_3_tailReg[6:0];
      default: SEL_ARR_bsvTopCore_ringbufPool_controller_0_ta_ETC___d1327 =
		   7'b0101010 /* unspecified value */ ;
    endcase
  end
  always@(bsvTopCore_regBlock_readReqQ_D_OUT or
	  bsvTopCore_ringbufPool_controller_0_headReg or
	  bsvTopCore_ringbufPool_controller_1_headReg or
	  bsvTopCore_ringbufPool_controller_2_headReg or
	  bsvTopCore_ringbufPool_controller_3_headReg)
  begin
    case (bsvTopCore_regBlock_readReqQ_D_OUT[6:4])
      3'd0:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_he_ETC___d1306 =
	      bsvTopCore_ringbufPool_controller_0_headReg[6:0];
      3'd1:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_he_ETC___d1306 =
	      bsvTopCore_ringbufPool_controller_1_headReg[6:0];
      3'd2:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_he_ETC___d1306 =
	      bsvTopCore_ringbufPool_controller_2_headReg[6:0];
      3'd3:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_he_ETC___d1306 =
	      bsvTopCore_ringbufPool_controller_3_headReg[6:0];
      default: SEL_ARR_bsvTopCore_ringbufPool_controller_0_he_ETC___d1306 =
		   7'b0101010 /* unspecified value */ ;
    endcase
  end
  always@(bsvTopCore_regBlock_readReqQ_D_OUT or
	  bsvTopCore_ringbufPool_controller_0_tailReg_1 or
	  bsvTopCore_ringbufPool_controller_1_tailReg_1 or
	  bsvTopCore_ringbufPool_controller_2_tailReg_1 or
	  bsvTopCore_ringbufPool_controller_3_tailReg_1)
  begin
    case (bsvTopCore_regBlock_readReqQ_D_OUT[6:4])
      3'd0:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_ta_ETC___d1332 =
	      bsvTopCore_ringbufPool_controller_0_tailReg_1[6:0];
      3'd1:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_ta_ETC___d1332 =
	      bsvTopCore_ringbufPool_controller_1_tailReg_1[6:0];
      3'd2:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_ta_ETC___d1332 =
	      bsvTopCore_ringbufPool_controller_2_tailReg_1[6:0];
      3'd3:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_ta_ETC___d1332 =
	      bsvTopCore_ringbufPool_controller_3_tailReg_1[6:0];
      default: SEL_ARR_bsvTopCore_ringbufPool_controller_0_ta_ETC___d1332 =
		   7'b0101010 /* unspecified value */ ;
    endcase
  end
  always@(bsvTopCore_regBlock_readReqQ_D_OUT or
	  bsvTopCore_ringbufPool_controller_0_headReg_1 or
	  bsvTopCore_ringbufPool_controller_1_headReg_1 or
	  bsvTopCore_ringbufPool_controller_2_headReg_1 or
	  bsvTopCore_ringbufPool_controller_3_headReg_1)
  begin
    case (bsvTopCore_regBlock_readReqQ_D_OUT[6:4])
      3'd0:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_he_ETC___d1319 =
	      bsvTopCore_ringbufPool_controller_0_headReg_1[6:0];
      3'd1:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_he_ETC___d1319 =
	      bsvTopCore_ringbufPool_controller_1_headReg_1[6:0];
      3'd2:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_he_ETC___d1319 =
	      bsvTopCore_ringbufPool_controller_2_headReg_1[6:0];
      3'd3:
	  SEL_ARR_bsvTopCore_ringbufPool_controller_0_he_ETC___d1319 =
	      bsvTopCore_ringbufPool_controller_3_headReg_1[6:0];
      default: SEL_ARR_bsvTopCore_ringbufPool_controller_0_he_ETC___d1319 =
		   7'b0101010 /* unspecified value */ ;
    endcase
  end
  always@(bsvTopCore_cmdQController_metaDataRespQ_D_OUT or
	  bsvTopCore_cmdQController_descWriteProxy_isSendingDescReg)
  begin
    case (bsvTopCore_cmdQController_metaDataRespQ_D_OUT[275:274])
      2'd0, 2'd1:
	  CASE_bsvTopCore_cmdQController_metaDataRespQD_ETC__q1 =
	      !bsvTopCore_cmdQController_descWriteProxy_isSendingDescReg;
      default: CASE_bsvTopCore_cmdQController_metaDataRespQD_ETC__q1 =
		   bsvTopCore_cmdQController_metaDataRespQ_D_OUT[275:274] !=
		   2'd2 ||
		   !bsvTopCore_cmdQController_descWriteProxy_isSendingDescReg;
    endcase
  end
  always@(v__h47620 or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0_D_OUT or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2_D_OUT)
  begin
    case (v__h47620)
      1'd0:
	  CASE_v7620_0_bsvTopCore_ringbufPool_arbitrated_ETC__q2 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0_D_OUT[33:2];
      1'd1:
	  CASE_v7620_0_bsvTopCore_ringbufPool_arbitrated_ETC__q2 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2_D_OUT[33:2];
    endcase
  end
  always@(v__h47620 or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0_D_OUT or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2_D_OUT)
  begin
    case (v__h47620)
      1'd0:
	  CASE_v7620_0_bsvTopCore_ringbufPool_arbitrated_ETC__q3 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0_D_OUT[1];
      1'd1:
	  CASE_v7620_0_bsvTopCore_ringbufPool_arbitrated_ETC__q3 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2_D_OUT[1];
    endcase
  end
  always@(v__h47620 or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0_D_OUT or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2_D_OUT)
  begin
    case (v__h47620)
      1'd0:
	  CASE_v7620_0_bsvTopCore_ringbufPool_arbitrated_ETC__q4 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0_D_OUT[0];
      1'd1:
	  CASE_v7620_0_bsvTopCore_ringbufPool_arbitrated_ETC__q4 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2_D_OUT[0];
    endcase
  end
  always@(v__h48907 or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1_D_OUT or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3_D_OUT)
  begin
    case (v__h48907)
      1'd0:
	  CASE_v8907_0_bsvTopCore_ringbufPool_arbitrated_ETC__q5 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1_D_OUT[33:2];
      1'd1:
	  CASE_v8907_0_bsvTopCore_ringbufPool_arbitrated_ETC__q5 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3_D_OUT[33:2];
    endcase
  end
  always@(v__h48907 or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1_D_OUT or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3_D_OUT)
  begin
    case (v__h48907)
      1'd0:
	  CASE_v8907_0_bsvTopCore_ringbufPool_arbitrated_ETC__q6 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1_D_OUT[1];
      1'd1:
	  CASE_v8907_0_bsvTopCore_ringbufPool_arbitrated_ETC__q6 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3_D_OUT[1];
    endcase
  end
  always@(v__h48907 or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1_D_OUT or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3_D_OUT)
  begin
    case (v__h48907)
      1'd0:
	  CASE_v8907_0_bsvTopCore_ringbufPool_arbitrated_ETC__q7 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1_D_OUT[0];
      1'd1:
	  CASE_v8907_0_bsvTopCore_ringbufPool_arbitrated_ETC__q7 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3_D_OUT[0];
    endcase
  end
  always@(v__h49988 or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_OUT or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_D_OUT)
  begin
    case (v__h49988)
      1'd0:
	  CASE_v9988_0_bsvTopCore_ringbufPool_arbitrated_ETC__q8 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_OUT[33:2];
      1'd1:
	  CASE_v9988_0_bsvTopCore_ringbufPool_arbitrated_ETC__q8 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_D_OUT[33:2];
    endcase
  end
  always@(v__h49988 or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_OUT or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_D_OUT)
  begin
    case (v__h49988)
      1'd0:
	  CASE_v9988_0_bsvTopCore_ringbufPool_arbitrated_ETC__q9 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_OUT[1];
      1'd1:
	  CASE_v9988_0_bsvTopCore_ringbufPool_arbitrated_ETC__q9 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_D_OUT[1];
    endcase
  end
  always@(v__h49988 or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_OUT or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_D_OUT)
  begin
    case (v__h49988)
      1'd0:
	  CASE_v9988_0_bsvTopCore_ringbufPool_arbitrated_ETC__q10 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_OUT[0];
      1'd1:
	  CASE_v9988_0_bsvTopCore_ringbufPool_arbitrated_ETC__q10 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_D_OUT[0];
    endcase
  end
  always@(v__h70211 or
	  bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0_D_OUT or
	  bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1_D_OUT)
  begin
    case (v__h70211)
      1'd0:
	  CASE_v0211_0_bsvTopCore_xdmaWriteClt_inputReqW_ETC__q11 =
	      bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0_D_OUT[33:2];
      1'd1:
	  CASE_v0211_0_bsvTopCore_xdmaWriteClt_inputReqW_ETC__q11 =
	      bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1_D_OUT[33:2];
    endcase
  end
  always@(v__h70211 or
	  bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0_D_OUT or
	  bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1_D_OUT)
  begin
    case (v__h70211)
      1'd0:
	  CASE_v0211_0_bsvTopCore_xdmaWriteClt_inputReqW_ETC__q12 =
	      bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0_D_OUT[1];
      1'd1:
	  CASE_v0211_0_bsvTopCore_xdmaWriteClt_inputReqW_ETC__q12 =
	      bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1_D_OUT[1];
    endcase
  end
  always@(v__h70211 or
	  bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0_D_OUT or
	  bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1_D_OUT)
  begin
    case (v__h70211)
      1'd0:
	  CASE_v0211_0_bsvTopCore_xdmaWriteClt_inputReqW_ETC__q13 =
	      bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0_D_OUT[0];
      1'd1:
	  CASE_v0211_0_bsvTopCore_xdmaWriteClt_inputReqW_ETC__q13 =
	      bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1_D_OUT[0];
    endcase
  end
  always@(v__h70211 or
	  bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0_D_OUT or
	  bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1_D_OUT)
  begin
    case (v__h70211)
      1'd0:
	  CASE_v0211_0_bsvTopCore_xdmaWriteClt_inputReqW_ETC__q14 =
	      bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0_D_OUT[309:290];
      1'd1:
	  CASE_v0211_0_bsvTopCore_xdmaWriteClt_inputReqW_ETC__q14 =
	      bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1_D_OUT[309:290];
    endcase
  end
  always@(v__h70211 or
	  bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0_D_OUT or
	  bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1_D_OUT)
  begin
    case (v__h70211)
      1'd0:
	  CASE_v0211_0_bsvTopCore_xdmaWriteClt_inputReqW_ETC__q15 =
	      bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0_D_OUT[289:34];
      1'd1:
	  CASE_v0211_0_bsvTopCore_xdmaWriteClt_inputReqW_ETC__q15 =
	      bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1_D_OUT[289:34];
    endcase
  end
  always@(v__h48907 or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1_D_OUT or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3_D_OUT)
  begin
    case (v__h48907)
      1'd0:
	  CASE_v8907_0_bsvTopCore_ringbufPool_arbitrated_ETC__q16 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1_D_OUT[309:290];
      1'd1:
	  CASE_v8907_0_bsvTopCore_ringbufPool_arbitrated_ETC__q16 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3_D_OUT[309:290];
    endcase
  end
  always@(v__h48907 or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1_D_OUT or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3_D_OUT)
  begin
    case (v__h48907)
      1'd0:
	  CASE_v8907_0_bsvTopCore_ringbufPool_arbitrated_ETC__q17 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1_D_OUT[289:34];
      1'd1:
	  CASE_v8907_0_bsvTopCore_ringbufPool_arbitrated_ETC__q17 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3_D_OUT[289:34];
    endcase
  end
  always@(v__h47620 or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0_D_OUT or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2_D_OUT)
  begin
    case (v__h47620)
      1'd0:
	  CASE_v7620_0_bsvTopCore_ringbufPool_arbitrated_ETC__q18 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0_D_OUT[309:290];
      1'd1:
	  CASE_v7620_0_bsvTopCore_ringbufPool_arbitrated_ETC__q18 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2_D_OUT[309:290];
    endcase
  end
  always@(v__h47620 or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0_D_OUT or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2_D_OUT)
  begin
    case (v__h47620)
      1'd0:
	  CASE_v7620_0_bsvTopCore_ringbufPool_arbitrated_ETC__q19 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0_D_OUT[289:34];
      1'd1:
	  CASE_v7620_0_bsvTopCore_ringbufPool_arbitrated_ETC__q19 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2_D_OUT[289:34];
    endcase
  end
  always@(v__h49988 or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_OUT or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_D_OUT)
  begin
    case (v__h49988)
      1'd0:
	  CASE_v9988_0_bsvTopCore_ringbufPool_arbitrated_ETC__q20 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_OUT[309:290];
      1'd1:
	  CASE_v9988_0_bsvTopCore_ringbufPool_arbitrated_ETC__q20 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_D_OUT[309:290];
    endcase
  end
  always@(v__h49988 or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_OUT or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_D_OUT)
  begin
    case (v__h49988)
      1'd0:
	  CASE_v9988_0_bsvTopCore_ringbufPool_arbitrated_ETC__q21 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_OUT[289:34];
      1'd1:
	  CASE_v9988_0_bsvTopCore_ringbufPool_arbitrated_ETC__q21 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_D_OUT[289:34];
    endcase
  end
  always@(bsvTopCore_ringbufPool_arbitratedC2hClient_preGrantIdxQ_D_OUT or
	  bsvTopCore_ringbufPool_controller_0_dmaRespQ_1_FULL_N or
	  bsvTopCore_ringbufPool_controller_1_dmaRespQ_1_FULL_N or
	  bsvTopCore_ringbufPool_controller_2_dmaRespQ_1_FULL_N or
	  bsvTopCore_ringbufPool_controller_3_dmaRespQ_1_FULL_N)
  begin
    case (bsvTopCore_ringbufPool_arbitratedC2hClient_preGrantIdxQ_D_OUT)
      2'd0:
	  CASE_bsvTopCore_ringbufPool_arbitratedC2hClien_ETC___d1208 =
	      bsvTopCore_ringbufPool_controller_0_dmaRespQ_1_FULL_N;
      2'd1:
	  CASE_bsvTopCore_ringbufPool_arbitratedC2hClien_ETC___d1208 =
	      bsvTopCore_ringbufPool_controller_1_dmaRespQ_1_FULL_N;
      2'd2:
	  CASE_bsvTopCore_ringbufPool_arbitratedC2hClien_ETC___d1208 =
	      bsvTopCore_ringbufPool_controller_2_dmaRespQ_1_FULL_N;
      2'd3:
	  CASE_bsvTopCore_ringbufPool_arbitratedC2hClien_ETC___d1208 =
	      bsvTopCore_ringbufPool_controller_3_dmaRespQ_1_FULL_N;
    endcase
  end
  always@(bsvTopCore_ringbufPool_arbitratedH2cClient_preGrantIdxQ_D_OUT or
	  bsvTopCore_ringbufPool_controller_0_dmaRespQ_FULL_N or
	  bsvTopCore_ringbufPool_controller_1_dmaRespQ_FULL_N or
	  bsvTopCore_ringbufPool_controller_2_dmaRespQ_FULL_N or
	  bsvTopCore_ringbufPool_controller_3_dmaRespQ_FULL_N)
  begin
    case (bsvTopCore_ringbufPool_arbitratedH2cClient_preGrantIdxQ_D_OUT)
      2'd0:
	  CASE_bsvTopCore_ringbufPool_arbitratedH2cClien_ETC___d996 =
	      bsvTopCore_ringbufPool_controller_0_dmaRespQ_FULL_N;
      2'd1:
	  CASE_bsvTopCore_ringbufPool_arbitratedH2cClien_ETC___d996 =
	      bsvTopCore_ringbufPool_controller_1_dmaRespQ_FULL_N;
      2'd2:
	  CASE_bsvTopCore_ringbufPool_arbitratedH2cClien_ETC___d996 =
	      bsvTopCore_ringbufPool_controller_2_dmaRespQ_FULL_N;
      2'd3:
	  CASE_bsvTopCore_ringbufPool_arbitratedH2cClien_ETC___d996 =
	      bsvTopCore_ringbufPool_controller_3_dmaRespQ_FULL_N;
    endcase
  end
  always@(bsvTopCore_xdmaReadClt_preGrantIdxQ_D_OUT or
	  bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_FULL_N or
	  bsvTopCore_ringbufPool_arbitratedH2cClient_respQ_FULL_N or
	  bsvTopCore_pgtManager_dmaReadRespQ_FULL_N or
	  bsvTopCore_dmaAccessH2cCltVec_3_t)
  begin
    case (bsvTopCore_xdmaReadClt_preGrantIdxQ_D_OUT)
      2'd0:
	  CASE_bsvTopCore_xdmaReadClt_preGrantIdxQ_first_ETC___d1804 =
	      bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_FULL_N;
      2'd1:
	  CASE_bsvTopCore_xdmaReadClt_preGrantIdxQ_first_ETC___d1804 =
	      bsvTopCore_ringbufPool_arbitratedH2cClient_respQ_FULL_N;
      2'd2:
	  CASE_bsvTopCore_xdmaReadClt_preGrantIdxQ_first_ETC___d1804 =
	      bsvTopCore_pgtManager_dmaReadRespQ_FULL_N;
      2'd3:
	  CASE_bsvTopCore_xdmaReadClt_preGrantIdxQ_first_ETC___d1804 =
	      bsvTopCore_dmaAccessH2cCltVec_3_t;
    endcase
  end
  always@(rawDesc__h92183 or
	  bsvTopCore_cmdQController_metaDataInflightReqQ_FULL_N or
	  bsvTopCore_cmdQController_metaDataReqQ_FULL_N or
	  bsvTopCore_cmdQController_pgtReqQ_FULL_N or
	  bsvTopCore_cmdQController_pgtInflightReqQ_FULL_N)
  begin
    case (rawDesc__h92183[3:1])
      3'd0, 3'd1:
	  IF_SEL_ARR_bsvTopCore_cmdQController_descReadP_ETC___d2177 =
	      bsvTopCore_cmdQController_pgtReqQ_FULL_N &&
	      bsvTopCore_cmdQController_pgtInflightReqQ_FULL_N;
      3'd2, 3'd3:
	  IF_SEL_ARR_bsvTopCore_cmdQController_descReadP_ETC___d2177 =
	      bsvTopCore_cmdQController_metaDataInflightReqQ_FULL_N &&
	      bsvTopCore_cmdQController_metaDataReqQ_FULL_N;
      default: IF_SEL_ARR_bsvTopCore_cmdQController_descReadP_ETC___d2177 =
		   rawDesc__h92183[3:1] != 3'd4 ||
		   bsvTopCore_cmdQController_metaDataInflightReqQ_FULL_N &&
		   bsvTopCore_cmdQController_metaDataReqQ_FULL_N;
    endcase
  end
  always@(v__h44241 or
	  bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_1_EMPTY_N or
	  bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_3_EMPTY_N)
  begin
    case (v__h44241)
      1'd0:
	  CASE_v4241_0_bsvTopCore_ringbufPool_arbitrated_ETC__q22 =
	      bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_1_EMPTY_N;
      1'd1:
	  CASE_v4241_0_bsvTopCore_ringbufPool_arbitrated_ETC__q22 =
	      bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_3_EMPTY_N;
    endcase
  end
  always@(v__h43019 or
	  bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_0_EMPTY_N or
	  bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_2_EMPTY_N)
  begin
    case (v__h43019)
      1'd0:
	  CASE_v3019_0_bsvTopCore_ringbufPool_arbitrated_ETC__q23 =
	      bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_0_EMPTY_N;
      1'd1:
	  CASE_v3019_0_bsvTopCore_ringbufPool_arbitrated_ETC__q23 =
	      bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_2_EMPTY_N;
    endcase
  end
  always@(v__h45257 or
	  bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_EMPTY_N or
	  bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_EMPTY_N)
  begin
    case (v__h45257)
      1'd0:
	  CASE_v5257_0_bsvTopCore_ringbufPool_arbitrated_ETC__q24 =
	      bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_EMPTY_N;
      1'd1:
	  CASE_v5257_0_bsvTopCore_ringbufPool_arbitrated_ETC__q24 =
	      bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_EMPTY_N;
    endcase
  end
  always@(v__h47620 or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0_EMPTY_N or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2_EMPTY_N)
  begin
    case (v__h47620)
      1'd0:
	  CASE_v7620_0_bsvTopCore_ringbufPool_arbitrated_ETC__q25 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0_EMPTY_N;
      1'd1:
	  CASE_v7620_0_bsvTopCore_ringbufPool_arbitrated_ETC__q25 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2_EMPTY_N;
    endcase
  end
  always@(v__h48907 or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1_EMPTY_N or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3_EMPTY_N)
  begin
    case (v__h48907)
      1'd0:
	  CASE_v8907_0_bsvTopCore_ringbufPool_arbitrated_ETC__q26 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1_EMPTY_N;
      1'd1:
	  CASE_v8907_0_bsvTopCore_ringbufPool_arbitrated_ETC__q26 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3_EMPTY_N;
    endcase
  end
  always@(v__h49988 or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_EMPTY_N or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_EMPTY_N)
  begin
    case (v__h49988)
      1'd0:
	  CASE_v9988_0_bsvTopCore_ringbufPool_arbitrated_ETC__q27 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_EMPTY_N;
      1'd1:
	  CASE_v9988_0_bsvTopCore_ringbufPool_arbitrated_ETC__q27 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_EMPTY_N;
    endcase
  end
  always@(v__h65840 or
	  bsvTopCore_xdmaReadClt_inputReqWithIdxVec_0_EMPTY_N or
	  bsvTopCore_xdmaReadClt_inputReqWithIdxVec_2_EMPTY_N)
  begin
    case (v__h65840)
      1'd0:
	  CASE_v5840_0_bsvTopCore_xdmaReadClt_inputReqWi_ETC__q28 =
	      bsvTopCore_xdmaReadClt_inputReqWithIdxVec_0_EMPTY_N;
      1'd1:
	  CASE_v5840_0_bsvTopCore_xdmaReadClt_inputReqWi_ETC__q28 =
	      bsvTopCore_xdmaReadClt_inputReqWithIdxVec_2_EMPTY_N;
    endcase
  end
  always@(v__h68078 or
	  bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_EMPTY_N or
	  bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_pipeOutQ_EMPTY_N)
  begin
    case (v__h68078)
      1'd0:
	  CASE_v8078_0_bsvTopCore_xdmaReadClt_leafArbite_ETC__q29 =
	      bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_EMPTY_N;
      1'd1:
	  CASE_v8078_0_bsvTopCore_xdmaReadClt_leafArbite_ETC__q29 =
	      bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_pipeOutQ_EMPTY_N;
    endcase
  end
  always@(v__h67062 or
	  bsvTopCore_xdmaReadClt_inputReqWithIdxVec_1_EMPTY_N or
	  bsvTopCore_xdmaReadClt_inputReqWithIdxVec_3_EMPTY_N)
  begin
    case (v__h67062)
      1'd0:
	  CASE_v7062_0_bsvTopCore_xdmaReadClt_inputReqWi_ETC__q30 =
	      bsvTopCore_xdmaReadClt_inputReqWithIdxVec_1_EMPTY_N;
      1'd1:
	  CASE_v7062_0_bsvTopCore_xdmaReadClt_inputReqWi_ETC__q30 =
	      bsvTopCore_xdmaReadClt_inputReqWithIdxVec_3_EMPTY_N;
    endcase
  end
  always@(v__h70211 or
	  bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0_EMPTY_N or
	  bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1_EMPTY_N)
  begin
    case (v__h70211)
      1'd0:
	  CASE_v0211_0_bsvTopCore_xdmaWriteClt_inputReqW_ETC__q31 =
	      bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0_EMPTY_N;
      1'd1:
	  CASE_v0211_0_bsvTopCore_xdmaWriteClt_inputReqW_ETC__q31 =
	      bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1_EMPTY_N;
    endcase
  end
  always@(bsvTopCore_xdmaWriteClt_preGrantIdxQ_D_OUT or
	  bsvTopCore_bluerdmaDmaProxy_c2hProxy_outRespQ_FULL_N or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_respQ_FULL_N)
  begin
    case (bsvTopCore_xdmaWriteClt_preGrantIdxQ_D_OUT)
      1'd0:
	  CASE_bsvTopCore_xdmaWriteClt_preGrantIdxQD_OU_ETC__q32 =
	      bsvTopCore_bluerdmaDmaProxy_c2hProxy_outRespQ_FULL_N;
      1'd1:
	  CASE_bsvTopCore_xdmaWriteClt_preGrantIdxQD_OU_ETC__q32 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_respQ_FULL_N;
    endcase
  end
  always@(bsvTopCore_cmdQController_metaDataRespQ_D_OUT or
	  din__h94868 or din__h93848 or din__h94254)
  begin
    case (bsvTopCore_cmdQController_metaDataRespQ_D_OUT[275:274])
      2'd0:
	  CASE_bsvTopCore_cmdQController_metaDataRespQD_ETC__q33 =
	      din__h93848;
      2'd1:
	  CASE_bsvTopCore_cmdQController_metaDataRespQD_ETC__q33 =
	      din__h94254;
      default: CASE_bsvTopCore_cmdQController_metaDataRespQD_ETC__q33 =
		   din__h94868;
    endcase
  end
  always@(v__h49988 or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_OUT or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_D_OUT)
  begin
    case (v__h49988)
      1'd0:
	  CASE_v9988_0_bsvTopCore_ringbufPool_arbitrated_ETC__q34 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_OUT[373:310];
      1'd1:
	  CASE_v9988_0_bsvTopCore_ringbufPool_arbitrated_ETC__q34 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_D_OUT[373:310];
    endcase
  end
  always@(v__h47620 or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0_D_OUT or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2_D_OUT)
  begin
    case (v__h47620)
      1'd0:
	  CASE_v7620_0_bsvTopCore_ringbufPool_arbitrated_ETC__q35 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_0_D_OUT[373:310];
      1'd1:
	  CASE_v7620_0_bsvTopCore_ringbufPool_arbitrated_ETC__q35 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_2_D_OUT[373:310];
    endcase
  end
  always@(v__h48907 or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1_D_OUT or
	  bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3_D_OUT)
  begin
    case (v__h48907)
      1'd0:
	  CASE_v8907_0_bsvTopCore_ringbufPool_arbitrated_ETC__q36 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_1_D_OUT[373:310];
      1'd1:
	  CASE_v8907_0_bsvTopCore_ringbufPool_arbitrated_ETC__q36 =
	      bsvTopCore_ringbufPool_arbitratedC2hClient_inputReqWithIdxVec_3_D_OUT[373:310];
    endcase
  end
  always@(v__h45257 or
	  bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_OUT or
	  bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_D_OUT)
  begin
    case (v__h45257)
      1'd0:
	  CASE_v5257_0_bsvTopCore_ringbufPool_arbitrated_ETC__q37 =
	      bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_OUT[83:20];
      1'd1:
	  CASE_v5257_0_bsvTopCore_ringbufPool_arbitrated_ETC__q37 =
	      bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_D_OUT[83:20];
    endcase
  end
  always@(v__h45257 or
	  bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_OUT or
	  bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_D_OUT)
  begin
    case (v__h45257)
      1'd0:
	  CASE_v5257_0_bsvTopCore_ringbufPool_arbitrated_ETC__q38 =
	      bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_OUT[19:0];
      1'd1:
	  CASE_v5257_0_bsvTopCore_ringbufPool_arbitrated_ETC__q38 =
	      bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_pipeOutQ_D_OUT[19:0];
    endcase
  end
  always@(v__h43019 or
	  bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_0_D_OUT or
	  bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_2_D_OUT)
  begin
    case (v__h43019)
      1'd0:
	  CASE_v3019_0_bsvTopCore_ringbufPool_arbitrated_ETC__q39 =
	      bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_0_D_OUT[83:20];
      1'd1:
	  CASE_v3019_0_bsvTopCore_ringbufPool_arbitrated_ETC__q39 =
	      bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_2_D_OUT[83:20];
    endcase
  end
  always@(v__h43019 or
	  bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_0_D_OUT or
	  bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_2_D_OUT)
  begin
    case (v__h43019)
      1'd0:
	  CASE_v3019_0_bsvTopCore_ringbufPool_arbitrated_ETC__q40 =
	      bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_0_D_OUT[19:0];
      1'd1:
	  CASE_v3019_0_bsvTopCore_ringbufPool_arbitrated_ETC__q40 =
	      bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_2_D_OUT[19:0];
    endcase
  end
  always@(v__h44241 or
	  bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_1_D_OUT or
	  bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_3_D_OUT)
  begin
    case (v__h44241)
      1'd0:
	  CASE_v4241_0_bsvTopCore_ringbufPool_arbitrated_ETC__q41 =
	      bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_1_D_OUT[83:20];
      1'd1:
	  CASE_v4241_0_bsvTopCore_ringbufPool_arbitrated_ETC__q41 =
	      bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_3_D_OUT[83:20];
    endcase
  end
  always@(v__h44241 or
	  bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_1_D_OUT or
	  bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_3_D_OUT)
  begin
    case (v__h44241)
      1'd0:
	  CASE_v4241_0_bsvTopCore_ringbufPool_arbitrated_ETC__q42 =
	      bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_1_D_OUT[19:0];
      1'd1:
	  CASE_v4241_0_bsvTopCore_ringbufPool_arbitrated_ETC__q42 =
	      bsvTopCore_ringbufPool_arbitratedH2cClient_inputReqWithIdxVec_3_D_OUT[19:0];
    endcase
  end
  always@(v__h68078 or
	  bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_OUT or
	  bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_pipeOutQ_D_OUT)
  begin
    case (v__h68078)
      1'd0:
	  CASE_v8078_0_bsvTopCore_xdmaReadClt_leafArbite_ETC__q48 =
	      bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_OUT[83:20];
      1'd1:
	  CASE_v8078_0_bsvTopCore_xdmaReadClt_leafArbite_ETC__q48 =
	      bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_pipeOutQ_D_OUT[83:20];
    endcase
  end
  always@(v__h68078 or
	  bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_OUT or
	  bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_pipeOutQ_D_OUT)
  begin
    case (v__h68078)
      1'd0:
	  CASE_v8078_0_bsvTopCore_xdmaReadClt_leafArbite_ETC__q49 =
	      bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_pipeOutQ_D_OUT[19:0];
      1'd1:
	  CASE_v8078_0_bsvTopCore_xdmaReadClt_leafArbite_ETC__q49 =
	      bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_pipeOutQ_D_OUT[19:0];
    endcase
  end
  always@(v__h65840 or
	  bsvTopCore_xdmaReadClt_inputReqWithIdxVec_0_D_OUT or
	  bsvTopCore_xdmaReadClt_inputReqWithIdxVec_2_D_OUT)
  begin
    case (v__h65840)
      1'd0:
	  CASE_v5840_0_bsvTopCore_xdmaReadClt_inputReqWi_ETC__q50 =
	      bsvTopCore_xdmaReadClt_inputReqWithIdxVec_0_D_OUT[83:20];
      1'd1:
	  CASE_v5840_0_bsvTopCore_xdmaReadClt_inputReqWi_ETC__q50 =
	      bsvTopCore_xdmaReadClt_inputReqWithIdxVec_2_D_OUT[83:20];
    endcase
  end
  always@(v__h65840 or
	  bsvTopCore_xdmaReadClt_inputReqWithIdxVec_0_D_OUT or
	  bsvTopCore_xdmaReadClt_inputReqWithIdxVec_2_D_OUT)
  begin
    case (v__h65840)
      1'd0:
	  CASE_v5840_0_bsvTopCore_xdmaReadClt_inputReqWi_ETC__q51 =
	      bsvTopCore_xdmaReadClt_inputReqWithIdxVec_0_D_OUT[19:0];
      1'd1:
	  CASE_v5840_0_bsvTopCore_xdmaReadClt_inputReqWi_ETC__q51 =
	      bsvTopCore_xdmaReadClt_inputReqWithIdxVec_2_D_OUT[19:0];
    endcase
  end
  always@(v__h67062 or
	  bsvTopCore_xdmaReadClt_inputReqWithIdxVec_1_D_OUT or
	  bsvTopCore_xdmaReadClt_inputReqWithIdxVec_3_D_OUT)
  begin
    case (v__h67062)
      1'd0:
	  CASE_v7062_0_bsvTopCore_xdmaReadClt_inputReqWi_ETC__q52 =
	      bsvTopCore_xdmaReadClt_inputReqWithIdxVec_1_D_OUT[83:20];
      1'd1:
	  CASE_v7062_0_bsvTopCore_xdmaReadClt_inputReqWi_ETC__q52 =
	      bsvTopCore_xdmaReadClt_inputReqWithIdxVec_3_D_OUT[83:20];
    endcase
  end
  always@(v__h67062 or
	  bsvTopCore_xdmaReadClt_inputReqWithIdxVec_1_D_OUT or
	  bsvTopCore_xdmaReadClt_inputReqWithIdxVec_3_D_OUT)
  begin
    case (v__h67062)
      1'd0:
	  CASE_v7062_0_bsvTopCore_xdmaReadClt_inputReqWi_ETC__q53 =
	      bsvTopCore_xdmaReadClt_inputReqWithIdxVec_1_D_OUT[19:0];
      1'd1:
	  CASE_v7062_0_bsvTopCore_xdmaReadClt_inputReqWi_ETC__q53 =
	      bsvTopCore_xdmaReadClt_inputReqWithIdxVec_3_D_OUT[19:0];
    endcase
  end
  always@(v__h70211 or
	  bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0_D_OUT or
	  bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1_D_OUT)
  begin
    case (v__h70211)
      1'd0:
	  CASE_v0211_0_bsvTopCore_xdmaWriteClt_inputReqW_ETC__q54 =
	      bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_0_D_OUT[373:310];
      1'd1:
	  CASE_v0211_0_bsvTopCore_xdmaWriteClt_inputReqW_ETC__q54 =
	      bsvTopCore_xdmaWriteClt_inputReqWithIdxVec_1_D_OUT[373:310];
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        bsvTopCore_cmdQController_descReadProxy_curSegCntReg <= `BSV_ASSIGNMENT_DELAY
	    4'd0;
	bsvTopCore_cmdQController_descReadProxy_isFillingReqSegmentsReg <= `BSV_ASSIGNMENT_DELAY
	    1'd1;
	bsvTopCore_cmdQController_descReadProxy_isFirstReqSegmentsReg <= `BSV_ASSIGNMENT_DELAY
	    1'd1;
	bsvTopCore_cmdQController_descWriteProxy_isSendingDescReg <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_dmaAccessH2cCltVec_3_t <= `BSV_ASSIGNMENT_DELAY 1'd0;
	bsvTopCore_pgtManager_curBeatOfDataReg <= `BSV_ASSIGNMENT_DELAY
	    290'd0;
	bsvTopCore_pgtManager_state <= `BSV_ASSIGNMENT_DELAY 2'd0;
	bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_grantReg <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg <= `BSV_ASSIGNMENT_DELAY
	    1'd1;
	bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_grantReg <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_needArbitrationReg <= `BSV_ASSIGNMENT_DELAY
	    1'd1;
	bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_priorityReg <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_grantReg <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_needArbitrationReg <= `BSV_ASSIGNMENT_DELAY
	    1'd1;
	bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_priorityReg <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_ringbufPool_arbitratedC2hClient_shouldSaveGrantIdxReg <= `BSV_ASSIGNMENT_DELAY
	    1'd1;
	bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_grantReg <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg <= `BSV_ASSIGNMENT_DELAY
	    1'd1;
	bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_grantReg <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_needArbitrationReg <= `BSV_ASSIGNMENT_DELAY
	    1'd1;
	bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_priorityReg <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_grantReg <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_needArbitrationReg <= `BSV_ASSIGNMENT_DELAY
	    1'd1;
	bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_priorityReg <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_ringbufPool_arbitratedH2cClient_shouldSaveGrantIdxReg <= `BSV_ASSIGNMENT_DELAY
	    1'd1;
	bsvTopCore_ringbufPool_controller_0_baseAddrReg <= `BSV_ASSIGNMENT_DELAY
	    64'd0;
	bsvTopCore_ringbufPool_controller_0_baseAddrReg_1 <= `BSV_ASSIGNMENT_DELAY
	    64'd0;
	bsvTopCore_ringbufPool_controller_0_headReg <= `BSV_ASSIGNMENT_DELAY
	    8'd0;
	bsvTopCore_ringbufPool_controller_0_headReg_1 <= `BSV_ASSIGNMENT_DELAY
	    8'd0;
	bsvTopCore_ringbufPool_controller_0_headShadowReg <= `BSV_ASSIGNMENT_DELAY
	    8'd0;
	bsvTopCore_ringbufPool_controller_0_ruleState <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_ringbufPool_controller_0_tailPosInReadBlockReg <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	bsvTopCore_ringbufPool_controller_0_tailReg <= `BSV_ASSIGNMENT_DELAY
	    8'd0;
	bsvTopCore_ringbufPool_controller_0_tailReg_1 <= `BSV_ASSIGNMENT_DELAY
	    8'd0;
	bsvTopCore_ringbufPool_controller_0_tailShadowReg <= `BSV_ASSIGNMENT_DELAY
	    8'd0;
	bsvTopCore_ringbufPool_controller_1_baseAddrReg <= `BSV_ASSIGNMENT_DELAY
	    64'd0;
	bsvTopCore_ringbufPool_controller_1_baseAddrReg_1 <= `BSV_ASSIGNMENT_DELAY
	    64'd0;
	bsvTopCore_ringbufPool_controller_1_headReg <= `BSV_ASSIGNMENT_DELAY
	    8'd0;
	bsvTopCore_ringbufPool_controller_1_headReg_1 <= `BSV_ASSIGNMENT_DELAY
	    8'd0;
	bsvTopCore_ringbufPool_controller_1_headShadowReg <= `BSV_ASSIGNMENT_DELAY
	    8'd0;
	bsvTopCore_ringbufPool_controller_1_ruleState <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_ringbufPool_controller_1_tailPosInReadBlockReg <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	bsvTopCore_ringbufPool_controller_1_tailReg <= `BSV_ASSIGNMENT_DELAY
	    8'd0;
	bsvTopCore_ringbufPool_controller_1_tailReg_1 <= `BSV_ASSIGNMENT_DELAY
	    8'd0;
	bsvTopCore_ringbufPool_controller_1_tailShadowReg <= `BSV_ASSIGNMENT_DELAY
	    8'd0;
	bsvTopCore_ringbufPool_controller_2_baseAddrReg <= `BSV_ASSIGNMENT_DELAY
	    64'd0;
	bsvTopCore_ringbufPool_controller_2_baseAddrReg_1 <= `BSV_ASSIGNMENT_DELAY
	    64'd0;
	bsvTopCore_ringbufPool_controller_2_headReg <= `BSV_ASSIGNMENT_DELAY
	    8'd0;
	bsvTopCore_ringbufPool_controller_2_headReg_1 <= `BSV_ASSIGNMENT_DELAY
	    8'd0;
	bsvTopCore_ringbufPool_controller_2_headShadowReg <= `BSV_ASSIGNMENT_DELAY
	    8'd0;
	bsvTopCore_ringbufPool_controller_2_ruleState <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_ringbufPool_controller_2_tailPosInReadBlockReg <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	bsvTopCore_ringbufPool_controller_2_tailReg <= `BSV_ASSIGNMENT_DELAY
	    8'd0;
	bsvTopCore_ringbufPool_controller_2_tailReg_1 <= `BSV_ASSIGNMENT_DELAY
	    8'd0;
	bsvTopCore_ringbufPool_controller_2_tailShadowReg <= `BSV_ASSIGNMENT_DELAY
	    8'd0;
	bsvTopCore_ringbufPool_controller_3_baseAddrReg <= `BSV_ASSIGNMENT_DELAY
	    64'd0;
	bsvTopCore_ringbufPool_controller_3_baseAddrReg_1 <= `BSV_ASSIGNMENT_DELAY
	    64'd0;
	bsvTopCore_ringbufPool_controller_3_headReg <= `BSV_ASSIGNMENT_DELAY
	    8'd0;
	bsvTopCore_ringbufPool_controller_3_headReg_1 <= `BSV_ASSIGNMENT_DELAY
	    8'd0;
	bsvTopCore_ringbufPool_controller_3_headShadowReg <= `BSV_ASSIGNMENT_DELAY
	    8'd0;
	bsvTopCore_ringbufPool_controller_3_ruleState <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_ringbufPool_controller_3_tailPosInReadBlockReg <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	bsvTopCore_ringbufPool_controller_3_tailReg <= `BSV_ASSIGNMENT_DELAY
	    8'd0;
	bsvTopCore_ringbufPool_controller_3_tailReg_1 <= `BSV_ASSIGNMENT_DELAY
	    8'd0;
	bsvTopCore_ringbufPool_controller_3_tailShadowReg <= `BSV_ASSIGNMENT_DELAY
	    8'd0;
	bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	    4'd0;
	bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	    2'd0;
	bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_s2 <= `BSV_ASSIGNMENT_DELAY
	    2'd0;
	bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	    4'd0;
	bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	    2'd0;
	bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_s2 <= `BSV_ASSIGNMENT_DELAY
	    2'd0;
	bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	    4'd0;
	bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	    2'd0;
	bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_s2 <= `BSV_ASSIGNMENT_DELAY
	    2'd0;
	bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	    4'd0;
	bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	    2'd0;
	bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_s2 <= `BSV_ASSIGNMENT_DELAY
	    2'd0;
	bsvTopCore_workAndCompleteQController_sqDescReadProxy_curSegCntReg <= `BSV_ASSIGNMENT_DELAY
	    4'd0;
	bsvTopCore_workAndCompleteQController_sqDescReadProxy_isFillingReqSegmentsReg <= `BSV_ASSIGNMENT_DELAY
	    1'd1;
	bsvTopCore_workAndCompleteQController_sqDescReadProxy_isFirstReqSegmentsReg <= `BSV_ASSIGNMENT_DELAY
	    1'd1;
	bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_status_0 <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_status_1 <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_status_0 <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_status_1 <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_0 <= `BSV_ASSIGNMENT_DELAY
	    375'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_1 <= `BSV_ASSIGNMENT_DELAY
	    375'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_2 <= `BSV_ASSIGNMENT_DELAY
	    375'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_3 <= `BSV_ASSIGNMENT_DELAY
	    375'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	bsvTopCore_xdmaGearbox_c2hReqGearbox_write_block <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_xdmaGearbox_c2hStreamRespQ_head_wrapped <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_status_0 <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_status_1 <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_status_0 <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_status_1 <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_xdmaGearbox_h2cRespGearbox_read_block <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_xdmaGearbox_h2cStreamReqQ_tail_wrapped <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_xdmaGearbox_isCurrentC2hReqAnEvenBeat <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_grantReg <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg <= `BSV_ASSIGNMENT_DELAY
	    1'd1;
	bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_grantReg <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_needArbitrationReg <= `BSV_ASSIGNMENT_DELAY
	    1'd1;
	bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_priorityReg <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_grantReg <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_needArbitrationReg <= `BSV_ASSIGNMENT_DELAY
	    1'd1;
	bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_priorityReg <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_xdmaReadClt_shouldSaveGrantIdxReg <= `BSV_ASSIGNMENT_DELAY
	    1'd1;
	bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_grantReg <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_needArbitrationReg <= `BSV_ASSIGNMENT_DELAY
	    1'd1;
	bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_priorityReg <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_xdmaWriteClt_shouldSaveGrantIdxReg <= `BSV_ASSIGNMENT_DELAY
	    1'd1;
      end
    else
      begin
        if (bsvTopCore_cmdQController_descReadProxy_curSegCntReg_EN)
	  bsvTopCore_cmdQController_descReadProxy_curSegCntReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_cmdQController_descReadProxy_curSegCntReg_D_IN;
	if (bsvTopCore_cmdQController_descReadProxy_isFillingReqSegmentsReg_EN)
	  bsvTopCore_cmdQController_descReadProxy_isFillingReqSegmentsReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_cmdQController_descReadProxy_isFillingReqSegmentsReg_D_IN;
	if (bsvTopCore_cmdQController_descReadProxy_isFirstReqSegmentsReg_EN)
	  bsvTopCore_cmdQController_descReadProxy_isFirstReqSegmentsReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_cmdQController_descReadProxy_isFirstReqSegmentsReg_D_IN;
	if (bsvTopCore_cmdQController_descWriteProxy_isSendingDescReg_EN)
	  bsvTopCore_cmdQController_descWriteProxy_isSendingDescReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_cmdQController_descWriteProxy_isSendingDescReg_D_IN;
	if (bsvTopCore_dmaAccessH2cCltVec_3_t_EN)
	  bsvTopCore_dmaAccessH2cCltVec_3_t <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_dmaAccessH2cCltVec_3_t_D_IN;
	if (bsvTopCore_pgtManager_curBeatOfDataReg_EN)
	  bsvTopCore_pgtManager_curBeatOfDataReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_pgtManager_curBeatOfDataReg_D_IN;
	if (bsvTopCore_pgtManager_state_EN)
	  bsvTopCore_pgtManager_state <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_pgtManager_state_D_IN;
	if (bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_grantReg_EN)
	  bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_grantReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_grantReg_D_IN;
	if (bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg_EN)
	  bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg_D_IN;
	if (bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg_EN)
	  bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg_D_IN;
	if (bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_grantReg_EN)
	  bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_grantReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_grantReg_D_IN;
	if (bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_needArbitrationReg_EN)
	  bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_needArbitrationReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_needArbitrationReg_D_IN;
	if (bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_priorityReg_EN)
	  bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_priorityReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_priorityReg_D_IN;
	if (bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_grantReg_EN)
	  bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_grantReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_grantReg_D_IN;
	if (bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_needArbitrationReg_EN)
	  bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_needArbitrationReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_needArbitrationReg_D_IN;
	if (bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_priorityReg_EN)
	  bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_priorityReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_priorityReg_D_IN;
	if (bsvTopCore_ringbufPool_arbitratedC2hClient_shouldSaveGrantIdxReg_EN)
	  bsvTopCore_ringbufPool_arbitratedC2hClient_shouldSaveGrantIdxReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_arbitratedC2hClient_shouldSaveGrantIdxReg_D_IN;
	if (bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_grantReg_EN)
	  bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_grantReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_grantReg_D_IN;
	if (bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg_EN)
	  bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg_D_IN;
	if (bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg_EN)
	  bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg_D_IN;
	if (bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_grantReg_EN)
	  bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_grantReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_grantReg_D_IN;
	if (bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_needArbitrationReg_EN)
	  bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_needArbitrationReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_needArbitrationReg_D_IN;
	if (bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_priorityReg_EN)
	  bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_priorityReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_priorityReg_D_IN;
	if (bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_grantReg_EN)
	  bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_grantReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_grantReg_D_IN;
	if (bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_needArbitrationReg_EN)
	  bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_needArbitrationReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_needArbitrationReg_D_IN;
	if (bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_priorityReg_EN)
	  bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_priorityReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_priorityReg_D_IN;
	if (bsvTopCore_ringbufPool_arbitratedH2cClient_shouldSaveGrantIdxReg_EN)
	  bsvTopCore_ringbufPool_arbitratedH2cClient_shouldSaveGrantIdxReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_arbitratedH2cClient_shouldSaveGrantIdxReg_D_IN;
	if (bsvTopCore_ringbufPool_controller_0_baseAddrReg_EN)
	  bsvTopCore_ringbufPool_controller_0_baseAddrReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_controller_0_baseAddrReg_D_IN;
	if (bsvTopCore_ringbufPool_controller_0_baseAddrReg_1_EN)
	  bsvTopCore_ringbufPool_controller_0_baseAddrReg_1 <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_controller_0_baseAddrReg_1_D_IN;
	if (bsvTopCore_ringbufPool_controller_0_headReg_EN)
	  bsvTopCore_ringbufPool_controller_0_headReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_controller_0_headReg_D_IN;
	if (bsvTopCore_ringbufPool_controller_0_headReg_1_EN)
	  bsvTopCore_ringbufPool_controller_0_headReg_1 <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_controller_0_headReg_1_D_IN;
	if (bsvTopCore_ringbufPool_controller_0_headShadowReg_EN)
	  bsvTopCore_ringbufPool_controller_0_headShadowReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_controller_0_headShadowReg_D_IN;
	if (bsvTopCore_ringbufPool_controller_0_ruleState_EN)
	  bsvTopCore_ringbufPool_controller_0_ruleState <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_controller_0_ruleState_D_IN;
	if (bsvTopCore_ringbufPool_controller_0_tailPosInReadBlockReg_EN)
	  bsvTopCore_ringbufPool_controller_0_tailPosInReadBlockReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_controller_0_tailPosInReadBlockReg_D_IN;
	if (bsvTopCore_ringbufPool_controller_0_tailReg_EN)
	  bsvTopCore_ringbufPool_controller_0_tailReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_controller_0_tailReg_D_IN;
	if (bsvTopCore_ringbufPool_controller_0_tailReg_1_EN)
	  bsvTopCore_ringbufPool_controller_0_tailReg_1 <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_controller_0_tailReg_1_D_IN;
	if (bsvTopCore_ringbufPool_controller_0_tailShadowReg_EN)
	  bsvTopCore_ringbufPool_controller_0_tailShadowReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_controller_0_tailShadowReg_D_IN;
	if (bsvTopCore_ringbufPool_controller_1_baseAddrReg_EN)
	  bsvTopCore_ringbufPool_controller_1_baseAddrReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_controller_1_baseAddrReg_D_IN;
	if (bsvTopCore_ringbufPool_controller_1_baseAddrReg_1_EN)
	  bsvTopCore_ringbufPool_controller_1_baseAddrReg_1 <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_controller_1_baseAddrReg_1_D_IN;
	if (bsvTopCore_ringbufPool_controller_1_headReg_EN)
	  bsvTopCore_ringbufPool_controller_1_headReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_controller_1_headReg_D_IN;
	if (bsvTopCore_ringbufPool_controller_1_headReg_1_EN)
	  bsvTopCore_ringbufPool_controller_1_headReg_1 <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_controller_1_headReg_1_D_IN;
	if (bsvTopCore_ringbufPool_controller_1_headShadowReg_EN)
	  bsvTopCore_ringbufPool_controller_1_headShadowReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_controller_1_headShadowReg_D_IN;
	if (bsvTopCore_ringbufPool_controller_1_ruleState_EN)
	  bsvTopCore_ringbufPool_controller_1_ruleState <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_controller_1_ruleState_D_IN;
	if (bsvTopCore_ringbufPool_controller_1_tailPosInReadBlockReg_EN)
	  bsvTopCore_ringbufPool_controller_1_tailPosInReadBlockReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_controller_1_tailPosInReadBlockReg_D_IN;
	if (bsvTopCore_ringbufPool_controller_1_tailReg_EN)
	  bsvTopCore_ringbufPool_controller_1_tailReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_controller_1_tailReg_D_IN;
	if (bsvTopCore_ringbufPool_controller_1_tailReg_1_EN)
	  bsvTopCore_ringbufPool_controller_1_tailReg_1 <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_controller_1_tailReg_1_D_IN;
	if (bsvTopCore_ringbufPool_controller_1_tailShadowReg_EN)
	  bsvTopCore_ringbufPool_controller_1_tailShadowReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_controller_1_tailShadowReg_D_IN;
	if (bsvTopCore_ringbufPool_controller_2_baseAddrReg_EN)
	  bsvTopCore_ringbufPool_controller_2_baseAddrReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_controller_2_baseAddrReg_D_IN;
	if (bsvTopCore_ringbufPool_controller_2_baseAddrReg_1_EN)
	  bsvTopCore_ringbufPool_controller_2_baseAddrReg_1 <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_controller_2_baseAddrReg_1_D_IN;
	if (bsvTopCore_ringbufPool_controller_2_headReg_EN)
	  bsvTopCore_ringbufPool_controller_2_headReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_controller_2_headReg_D_IN;
	if (bsvTopCore_ringbufPool_controller_2_headReg_1_EN)
	  bsvTopCore_ringbufPool_controller_2_headReg_1 <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_controller_2_headReg_1_D_IN;
	if (bsvTopCore_ringbufPool_controller_2_headShadowReg_EN)
	  bsvTopCore_ringbufPool_controller_2_headShadowReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_controller_2_headShadowReg_D_IN;
	if (bsvTopCore_ringbufPool_controller_2_ruleState_EN)
	  bsvTopCore_ringbufPool_controller_2_ruleState <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_controller_2_ruleState_D_IN;
	if (bsvTopCore_ringbufPool_controller_2_tailPosInReadBlockReg_EN)
	  bsvTopCore_ringbufPool_controller_2_tailPosInReadBlockReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_controller_2_tailPosInReadBlockReg_D_IN;
	if (bsvTopCore_ringbufPool_controller_2_tailReg_EN)
	  bsvTopCore_ringbufPool_controller_2_tailReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_controller_2_tailReg_D_IN;
	if (bsvTopCore_ringbufPool_controller_2_tailReg_1_EN)
	  bsvTopCore_ringbufPool_controller_2_tailReg_1 <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_controller_2_tailReg_1_D_IN;
	if (bsvTopCore_ringbufPool_controller_2_tailShadowReg_EN)
	  bsvTopCore_ringbufPool_controller_2_tailShadowReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_controller_2_tailShadowReg_D_IN;
	if (bsvTopCore_ringbufPool_controller_3_baseAddrReg_EN)
	  bsvTopCore_ringbufPool_controller_3_baseAddrReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_controller_3_baseAddrReg_D_IN;
	if (bsvTopCore_ringbufPool_controller_3_baseAddrReg_1_EN)
	  bsvTopCore_ringbufPool_controller_3_baseAddrReg_1 <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_controller_3_baseAddrReg_1_D_IN;
	if (bsvTopCore_ringbufPool_controller_3_headReg_EN)
	  bsvTopCore_ringbufPool_controller_3_headReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_controller_3_headReg_D_IN;
	if (bsvTopCore_ringbufPool_controller_3_headReg_1_EN)
	  bsvTopCore_ringbufPool_controller_3_headReg_1 <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_controller_3_headReg_1_D_IN;
	if (bsvTopCore_ringbufPool_controller_3_headShadowReg_EN)
	  bsvTopCore_ringbufPool_controller_3_headShadowReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_controller_3_headShadowReg_D_IN;
	if (bsvTopCore_ringbufPool_controller_3_ruleState_EN)
	  bsvTopCore_ringbufPool_controller_3_ruleState <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_controller_3_ruleState_D_IN;
	if (bsvTopCore_ringbufPool_controller_3_tailPosInReadBlockReg_EN)
	  bsvTopCore_ringbufPool_controller_3_tailPosInReadBlockReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_controller_3_tailPosInReadBlockReg_D_IN;
	if (bsvTopCore_ringbufPool_controller_3_tailReg_EN)
	  bsvTopCore_ringbufPool_controller_3_tailReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_controller_3_tailReg_D_IN;
	if (bsvTopCore_ringbufPool_controller_3_tailReg_1_EN)
	  bsvTopCore_ringbufPool_controller_3_tailReg_1 <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_controller_3_tailReg_1_D_IN;
	if (bsvTopCore_ringbufPool_controller_3_tailShadowReg_EN)
	  bsvTopCore_ringbufPool_controller_3_tailShadowReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_ringbufPool_controller_3_tailShadowReg_D_IN;
	if (bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_cnt_EN)
	  bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_cnt_D_IN;
	if (bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_s1_EN)
	  bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_s1_D_IN;
	if (bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_s2_EN)
	  bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_s2 <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_s2_D_IN;
	if (bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_cnt_EN)
	  bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_cnt_D_IN;
	if (bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_s1_EN)
	  bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_s1_D_IN;
	if (bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_s2_EN)
	  bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_s2 <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_s2_D_IN;
	if (bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_cnt_EN)
	  bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_cnt <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_cnt_D_IN;
	if (bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_s1_EN)
	  bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_s1 <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_s1_D_IN;
	if (bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_s2_EN)
	  bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_s2 <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_s2_D_IN;
	if (bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_cnt_EN)
	  bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_cnt <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_cnt_D_IN;
	if (bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_s1_EN)
	  bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_s1 <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_s1_D_IN;
	if (bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_s2_EN)
	  bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_s2 <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_s2_D_IN;
	if (bsvTopCore_workAndCompleteQController_sqDescReadProxy_curSegCntReg_EN)
	  bsvTopCore_workAndCompleteQController_sqDescReadProxy_curSegCntReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_workAndCompleteQController_sqDescReadProxy_curSegCntReg_D_IN;
	if (bsvTopCore_workAndCompleteQController_sqDescReadProxy_isFillingReqSegmentsReg_EN)
	  bsvTopCore_workAndCompleteQController_sqDescReadProxy_isFillingReqSegmentsReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_workAndCompleteQController_sqDescReadProxy_isFillingReqSegmentsReg_D_IN;
	if (bsvTopCore_workAndCompleteQController_sqDescReadProxy_isFirstReqSegmentsReg_EN)
	  bsvTopCore_workAndCompleteQController_sqDescReadProxy_isFirstReqSegmentsReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_workAndCompleteQController_sqDescReadProxy_isFirstReqSegmentsReg_D_IN;
	if (bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_status_0_EN)
	  bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_status_0 <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_status_0_D_IN;
	if (bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_status_1_EN)
	  bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_status_1 <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_status_1_D_IN;
	if (bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_status_0_EN)
	  bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_status_0 <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_status_0_D_IN;
	if (bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_status_1_EN)
	  bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_status_1 <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_status_1_D_IN;
	if (bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_0_EN)
	  bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_0 <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_0_D_IN;
	if (bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_1_EN)
	  bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_1 <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_1_D_IN;
	if (bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_2_EN)
	  bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_2 <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_2_D_IN;
	if (bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_3_EN)
	  bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_3 <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_3_D_IN;
	if (bsvTopCore_xdmaGearbox_c2hReqGearbox_write_block_EN)
	  bsvTopCore_xdmaGearbox_c2hReqGearbox_write_block <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_xdmaGearbox_c2hReqGearbox_write_block_D_IN;
	if (bsvTopCore_xdmaGearbox_c2hStreamRespQ_head_wrapped_EN)
	  bsvTopCore_xdmaGearbox_c2hStreamRespQ_head_wrapped <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_xdmaGearbox_c2hStreamRespQ_head_wrapped_D_IN;
	if (bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_status_0_EN)
	  bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_status_0 <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_status_0_D_IN;
	if (bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_status_1_EN)
	  bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_status_1 <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_status_1_D_IN;
	if (bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_status_0_EN)
	  bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_status_0 <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_status_0_D_IN;
	if (bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_status_1_EN)
	  bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_status_1 <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_status_1_D_IN;
	if (bsvTopCore_xdmaGearbox_h2cRespGearbox_read_block_EN)
	  bsvTopCore_xdmaGearbox_h2cRespGearbox_read_block <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_xdmaGearbox_h2cRespGearbox_read_block_D_IN;
	if (bsvTopCore_xdmaGearbox_h2cStreamReqQ_tail_wrapped_EN)
	  bsvTopCore_xdmaGearbox_h2cStreamReqQ_tail_wrapped <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_xdmaGearbox_h2cStreamReqQ_tail_wrapped_D_IN;
	if (bsvTopCore_xdmaGearbox_isCurrentC2hReqAnEvenBeat_EN)
	  bsvTopCore_xdmaGearbox_isCurrentC2hReqAnEvenBeat <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_xdmaGearbox_isCurrentC2hReqAnEvenBeat_D_IN;
	if (bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_grantReg_EN)
	  bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_grantReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_grantReg_D_IN;
	if (bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg_EN)
	  bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg_D_IN;
	if (bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg_EN)
	  bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg_D_IN;
	if (bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_grantReg_EN)
	  bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_grantReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_grantReg_D_IN;
	if (bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_needArbitrationReg_EN)
	  bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_needArbitrationReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_needArbitrationReg_D_IN;
	if (bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_priorityReg_EN)
	  bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_priorityReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_priorityReg_D_IN;
	if (bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_grantReg_EN)
	  bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_grantReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_grantReg_D_IN;
	if (bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_needArbitrationReg_EN)
	  bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_needArbitrationReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_needArbitrationReg_D_IN;
	if (bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_priorityReg_EN)
	  bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_priorityReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_priorityReg_D_IN;
	if (bsvTopCore_xdmaReadClt_shouldSaveGrantIdxReg_EN)
	  bsvTopCore_xdmaReadClt_shouldSaveGrantIdxReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_xdmaReadClt_shouldSaveGrantIdxReg_D_IN;
	if (bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_grantReg_EN)
	  bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_grantReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_grantReg_D_IN;
	if (bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_needArbitrationReg_EN)
	  bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_needArbitrationReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_needArbitrationReg_D_IN;
	if (bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_priorityReg_EN)
	  bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_priorityReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_priorityReg_D_IN;
	if (bsvTopCore_xdmaWriteClt_shouldSaveGrantIdxReg_EN)
	  bsvTopCore_xdmaWriteClt_shouldSaveGrantIdxReg <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_xdmaWriteClt_shouldSaveGrantIdxReg_D_IN;
      end
    if (bsvTopCore_cmdQController_descReadProxy_segBuf_0_EN)
      bsvTopCore_cmdQController_descReadProxy_segBuf_0 <= `BSV_ASSIGNMENT_DELAY
	  bsvTopCore_cmdQController_descReadProxy_segBuf_0_D_IN;
    if (bsvTopCore_cmdQController_descReadProxy_segBuf_1_EN)
      bsvTopCore_cmdQController_descReadProxy_segBuf_1 <= `BSV_ASSIGNMENT_DELAY
	  bsvTopCore_cmdQController_descReadProxy_segBuf_1_D_IN;
    if (bsvTopCore_cmdQController_descReadProxy_totalSegCntReg_EN)
      bsvTopCore_cmdQController_descReadProxy_totalSegCntReg <= `BSV_ASSIGNMENT_DELAY
	  bsvTopCore_cmdQController_descReadProxy_totalSegCntReg_D_IN;
    if (bsvTopCore_cmdQController_descWriteProxy_segBuf_0_EN)
      bsvTopCore_cmdQController_descWriteProxy_segBuf_0 <= `BSV_ASSIGNMENT_DELAY
	  bsvTopCore_cmdQController_descWriteProxy_segBuf_0_D_IN;
    if (bsvTopCore_cmdQController_descWriteProxy_segBuf_1_EN)
      bsvTopCore_cmdQController_descWriteProxy_segBuf_1 <= `BSV_ASSIGNMENT_DELAY
	  bsvTopCore_cmdQController_descWriteProxy_segBuf_1_D_IN;
    if (bsvTopCore_cmdQController_descWriteProxy_segCntReg_EN)
      bsvTopCore_cmdQController_descWriteProxy_segCntReg <= `BSV_ASSIGNMENT_DELAY
	  bsvTopCore_cmdQController_descWriteProxy_segCntReg_D_IN;
    if (bsvTopCore_pgtManager_curSecondStagePgtWriteIdxReg_EN)
      bsvTopCore_pgtManager_curSecondStagePgtWriteIdxReg <= `BSV_ASSIGNMENT_DELAY
	  bsvTopCore_pgtManager_curSecondStagePgtWriteIdxReg_D_IN;
    if (bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_0_EN)
      bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_0 <= `BSV_ASSIGNMENT_DELAY
	  bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_0_D_IN;
    if (bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1_EN)
      bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1 <= `BSV_ASSIGNMENT_DELAY
	  bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1_D_IN;
    if (bsvTopCore_workAndCompleteQController_sqDescReadProxy_totalSegCntReg_EN)
      bsvTopCore_workAndCompleteQController_sqDescReadProxy_totalSegCntReg <= `BSV_ASSIGNMENT_DELAY
	  bsvTopCore_workAndCompleteQController_sqDescReadProxy_totalSegCntReg_D_IN;
    if (bsvTopCore_xdmaGearbox_h2cStreamReqQStore_EN)
      bsvTopCore_xdmaGearbox_h2cStreamReqQStore <= `BSV_ASSIGNMENT_DELAY
	  bsvTopCore_xdmaGearbox_h2cStreamReqQStore_D_IN;
  end

  always@(posedge CLK_slowClock)
  begin
    if (RST_N_slowReset == `BSV_RESET_VALUE)
      begin
        bsvTopCore_xdmaGearbox_c2hReqGearbox_block0_status <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_xdmaGearbox_c2hReqGearbox_block1_status <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_xdmaGearbox_c2hReqGearbox_read_block <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_xdmaGearbox_c2hStreamRespQ_tail_wrapped <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_xdmaGearbox_h2cRespGearbox_block0 <= `BSV_ASSIGNMENT_DELAY
	    582'h15555555555555555555555555555555555555555555555555555555555555555555555552AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	bsvTopCore_xdmaGearbox_h2cRespGearbox_block0_status <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_xdmaGearbox_h2cRespGearbox_block1 <= `BSV_ASSIGNMENT_DELAY
	    582'h15555555555555555555555555555555555555555555555555555555555555555555555552AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	bsvTopCore_xdmaGearbox_h2cRespGearbox_block1_status <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_xdmaGearbox_h2cRespGearbox_write_block <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	bsvTopCore_xdmaGearbox_h2cStreamReqQ_head_wrapped <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	xdmaWrap_h2cNextBeatIsFirst <= `BSV_ASSIGNMENT_DELAY 1'd1;
      end
    else
      begin
        if (bsvTopCore_xdmaGearbox_c2hReqGearbox_block0_status_EN)
	  bsvTopCore_xdmaGearbox_c2hReqGearbox_block0_status <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_xdmaGearbox_c2hReqGearbox_block0_status_D_IN;
	if (bsvTopCore_xdmaGearbox_c2hReqGearbox_block1_status_EN)
	  bsvTopCore_xdmaGearbox_c2hReqGearbox_block1_status <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_xdmaGearbox_c2hReqGearbox_block1_status_D_IN;
	if (bsvTopCore_xdmaGearbox_c2hReqGearbox_read_block_EN)
	  bsvTopCore_xdmaGearbox_c2hReqGearbox_read_block <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_xdmaGearbox_c2hReqGearbox_read_block_D_IN;
	if (bsvTopCore_xdmaGearbox_c2hStreamRespQ_tail_wrapped_EN)
	  bsvTopCore_xdmaGearbox_c2hStreamRespQ_tail_wrapped <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_xdmaGearbox_c2hStreamRespQ_tail_wrapped_D_IN;
	if (bsvTopCore_xdmaGearbox_h2cRespGearbox_block0_EN)
	  bsvTopCore_xdmaGearbox_h2cRespGearbox_block0 <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_xdmaGearbox_h2cRespGearbox_block0_D_IN;
	if (bsvTopCore_xdmaGearbox_h2cRespGearbox_block0_status_EN)
	  bsvTopCore_xdmaGearbox_h2cRespGearbox_block0_status <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_xdmaGearbox_h2cRespGearbox_block0_status_D_IN;
	if (bsvTopCore_xdmaGearbox_h2cRespGearbox_block1_EN)
	  bsvTopCore_xdmaGearbox_h2cRespGearbox_block1 <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_xdmaGearbox_h2cRespGearbox_block1_D_IN;
	if (bsvTopCore_xdmaGearbox_h2cRespGearbox_block1_status_EN)
	  bsvTopCore_xdmaGearbox_h2cRespGearbox_block1_status <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_xdmaGearbox_h2cRespGearbox_block1_status_D_IN;
	if (bsvTopCore_xdmaGearbox_h2cRespGearbox_write_block_EN)
	  bsvTopCore_xdmaGearbox_h2cRespGearbox_write_block <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_xdmaGearbox_h2cRespGearbox_write_block_D_IN;
	if (bsvTopCore_xdmaGearbox_h2cStreamReqQ_head_wrapped_EN)
	  bsvTopCore_xdmaGearbox_h2cStreamReqQ_head_wrapped <= `BSV_ASSIGNMENT_DELAY
	      bsvTopCore_xdmaGearbox_h2cStreamReqQ_head_wrapped_D_IN;
	if (xdmaWrap_h2cNextBeatIsFirst_EN)
	  xdmaWrap_h2cNextBeatIsFirst <= `BSV_ASSIGNMENT_DELAY
	      xdmaWrap_h2cNextBeatIsFirst_D_IN;
      end
  end

  always@(posedge CLK or
	  `BSV_RESET_EDGE bsvTopCore_xdmaGearbox_c2hReqGearbox_sCombinedReset_RST_OUT)
  if (bsvTopCore_xdmaGearbox_c2hReqGearbox_sCombinedReset_RST_OUT ==
      `BSV_RESET_VALUE)
    begin
      bsvTopCore_xdmaGearbox_c2hReqGearbox_sInReset_pre_isInReset <= `BSV_ASSIGNMENT_DELAY
	  1'd1;
    end
  else
    begin
      if (bsvTopCore_xdmaGearbox_c2hReqGearbox_sInReset_pre_isInReset_EN)
	bsvTopCore_xdmaGearbox_c2hReqGearbox_sInReset_pre_isInReset <= `BSV_ASSIGNMENT_DELAY
	    bsvTopCore_xdmaGearbox_c2hReqGearbox_sInReset_pre_isInReset_D_IN;
    end

  always@(posedge CLK or
	  `BSV_RESET_EDGE bsvTopCore_xdmaGearbox_h2cRespGearbox_dCombinedReset_RST_OUT)
  if (bsvTopCore_xdmaGearbox_h2cRespGearbox_dCombinedReset_RST_OUT ==
      `BSV_RESET_VALUE)
    begin
      bsvTopCore_xdmaGearbox_h2cRespGearbox_dInReset_pre_isInReset <= `BSV_ASSIGNMENT_DELAY
	  1'd1;
    end
  else
    begin
      if (bsvTopCore_xdmaGearbox_h2cRespGearbox_dInReset_pre_isInReset_EN)
	bsvTopCore_xdmaGearbox_h2cRespGearbox_dInReset_pre_isInReset <= `BSV_ASSIGNMENT_DELAY
	    bsvTopCore_xdmaGearbox_h2cRespGearbox_dInReset_pre_isInReset_D_IN;
    end

  always@(posedge CLK_slowClock or `BSV_RESET_EDGE RST_N_slowReset)
  if (RST_N_slowReset == `BSV_RESET_VALUE)
    begin
      xdmaAxiLiteWrap_cntrlAxilSlave_rawRdAddrBus_isReset_isInReset <= `BSV_ASSIGNMENT_DELAY
	  1'd1;
      xdmaAxiLiteWrap_cntrlAxilSlave_rawRdDataBus_isReset_isInReset <= `BSV_ASSIGNMENT_DELAY
	  1'd1;
      xdmaAxiLiteWrap_cntrlAxilSlave_rawWrAddrBus_isReset_isInReset <= `BSV_ASSIGNMENT_DELAY
	  1'd1;
      xdmaAxiLiteWrap_cntrlAxilSlave_rawWrDataBus_isReset_isInReset <= `BSV_ASSIGNMENT_DELAY
	  1'd1;
      xdmaAxiLiteWrap_cntrlAxilSlave_rawWrRespBus_isReset_isInReset <= `BSV_ASSIGNMENT_DELAY
	  1'd1;
      xdmaWrap_rawC2hSt_rawBus_isReset_isInReset <= `BSV_ASSIGNMENT_DELAY
	  1'd1;
      xdmaWrap_rawH2cSt_rawBus_isReset_isInReset <= `BSV_ASSIGNMENT_DELAY
	  1'd1;
    end
  else
    begin
      if (xdmaAxiLiteWrap_cntrlAxilSlave_rawRdAddrBus_isReset_isInReset_EN)
	xdmaAxiLiteWrap_cntrlAxilSlave_rawRdAddrBus_isReset_isInReset <= `BSV_ASSIGNMENT_DELAY
	    xdmaAxiLiteWrap_cntrlAxilSlave_rawRdAddrBus_isReset_isInReset_D_IN;
      if (xdmaAxiLiteWrap_cntrlAxilSlave_rawRdDataBus_isReset_isInReset_EN)
	xdmaAxiLiteWrap_cntrlAxilSlave_rawRdDataBus_isReset_isInReset <= `BSV_ASSIGNMENT_DELAY
	    xdmaAxiLiteWrap_cntrlAxilSlave_rawRdDataBus_isReset_isInReset_D_IN;
      if (xdmaAxiLiteWrap_cntrlAxilSlave_rawWrAddrBus_isReset_isInReset_EN)
	xdmaAxiLiteWrap_cntrlAxilSlave_rawWrAddrBus_isReset_isInReset <= `BSV_ASSIGNMENT_DELAY
	    xdmaAxiLiteWrap_cntrlAxilSlave_rawWrAddrBus_isReset_isInReset_D_IN;
      if (xdmaAxiLiteWrap_cntrlAxilSlave_rawWrDataBus_isReset_isInReset_EN)
	xdmaAxiLiteWrap_cntrlAxilSlave_rawWrDataBus_isReset_isInReset <= `BSV_ASSIGNMENT_DELAY
	    xdmaAxiLiteWrap_cntrlAxilSlave_rawWrDataBus_isReset_isInReset_D_IN;
      if (xdmaAxiLiteWrap_cntrlAxilSlave_rawWrRespBus_isReset_isInReset_EN)
	xdmaAxiLiteWrap_cntrlAxilSlave_rawWrRespBus_isReset_isInReset <= `BSV_ASSIGNMENT_DELAY
	    xdmaAxiLiteWrap_cntrlAxilSlave_rawWrRespBus_isReset_isInReset_D_IN;
      if (xdmaWrap_rawC2hSt_rawBus_isReset_isInReset_EN)
	xdmaWrap_rawC2hSt_rawBus_isReset_isInReset <= `BSV_ASSIGNMENT_DELAY
	    xdmaWrap_rawC2hSt_rawBus_isReset_isInReset_D_IN;
      if (xdmaWrap_rawH2cSt_rawBus_isReset_isInReset_EN)
	xdmaWrap_rawH2cSt_rawBus_isReset_isInReset <= `BSV_ASSIGNMENT_DELAY
	    xdmaWrap_rawH2cSt_rawBus_isReset_isInReset_D_IN;
    end

  always@(posedge CLK_slowClock or
	  `BSV_RESET_EDGE bsvTopCore_xdmaGearbox_c2hReqGearbox_dCombinedReset_RST_OUT)
  if (bsvTopCore_xdmaGearbox_c2hReqGearbox_dCombinedReset_RST_OUT ==
      `BSV_RESET_VALUE)
    begin
      bsvTopCore_xdmaGearbox_c2hReqGearbox_dInReset_pre_isInReset <= `BSV_ASSIGNMENT_DELAY
	  1'd1;
    end
  else
    begin
      if (bsvTopCore_xdmaGearbox_c2hReqGearbox_dInReset_pre_isInReset_EN)
	bsvTopCore_xdmaGearbox_c2hReqGearbox_dInReset_pre_isInReset <= `BSV_ASSIGNMENT_DELAY
	    bsvTopCore_xdmaGearbox_c2hReqGearbox_dInReset_pre_isInReset_D_IN;
    end

  always@(posedge CLK_slowClock or
	  `BSV_RESET_EDGE bsvTopCore_xdmaGearbox_h2cRespGearbox_sCombinedReset_RST_OUT)
  if (bsvTopCore_xdmaGearbox_h2cRespGearbox_sCombinedReset_RST_OUT ==
      `BSV_RESET_VALUE)
    begin
      bsvTopCore_xdmaGearbox_h2cRespGearbox_sInReset_pre_isInReset <= `BSV_ASSIGNMENT_DELAY
	  1'd1;
    end
  else
    begin
      if (bsvTopCore_xdmaGearbox_h2cRespGearbox_sInReset_pre_isInReset_EN)
	bsvTopCore_xdmaGearbox_h2cRespGearbox_sInReset_pre_isInReset <= `BSV_ASSIGNMENT_DELAY
	    bsvTopCore_xdmaGearbox_h2cRespGearbox_sInReset_pre_isInReset_D_IN;
    end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    bsvTopCore_cmdQController_descReadProxy_curSegCntReg = 4'hA;
    bsvTopCore_cmdQController_descReadProxy_isFillingReqSegmentsReg = 1'h0;
    bsvTopCore_cmdQController_descReadProxy_isFirstReqSegmentsReg = 1'h0;
    bsvTopCore_cmdQController_descReadProxy_segBuf_0 =
	256'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    bsvTopCore_cmdQController_descReadProxy_segBuf_1 =
	256'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    bsvTopCore_cmdQController_descReadProxy_totalSegCntReg = 4'hA;
    bsvTopCore_cmdQController_descWriteProxy_isSendingDescReg = 1'h0;
    bsvTopCore_cmdQController_descWriteProxy_segBuf_0 =
	256'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    bsvTopCore_cmdQController_descWriteProxy_segBuf_1 =
	256'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    bsvTopCore_cmdQController_descWriteProxy_segCntReg = 4'hA;
    bsvTopCore_dmaAccessH2cCltVec_3_t = 1'h0;
    bsvTopCore_pgtManager_curBeatOfDataReg =
	290'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    bsvTopCore_pgtManager_curSecondStagePgtWriteIdxReg = 17'h0AAAA;
    bsvTopCore_pgtManager_state = 2'h2;
    bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_grantReg =
	1'h0;
    bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg =
	1'h0;
    bsvTopCore_ringbufPool_arbitratedC2hClient_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg =
	1'h0;
    bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_grantReg =
	1'h0;
    bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_needArbitrationReg =
	1'h0;
    bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_0_priorityReg =
	1'h0;
    bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_grantReg =
	1'h0;
    bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_needArbitrationReg =
	1'h0;
    bsvTopCore_ringbufPool_arbitratedC2hClient_leafArbiterVec_binaryArbiter_1_priorityReg =
	1'h0;
    bsvTopCore_ringbufPool_arbitratedC2hClient_shouldSaveGrantIdxReg = 1'h0;
    bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_grantReg =
	1'h0;
    bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg =
	1'h0;
    bsvTopCore_ringbufPool_arbitratedH2cClient_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg =
	1'h0;
    bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_grantReg =
	1'h0;
    bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_needArbitrationReg =
	1'h0;
    bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_0_priorityReg =
	1'h0;
    bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_grantReg =
	1'h0;
    bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_needArbitrationReg =
	1'h0;
    bsvTopCore_ringbufPool_arbitratedH2cClient_leafArbiterVec_binaryArbiter_1_priorityReg =
	1'h0;
    bsvTopCore_ringbufPool_arbitratedH2cClient_shouldSaveGrantIdxReg = 1'h0;
    bsvTopCore_ringbufPool_controller_0_baseAddrReg = 64'hAAAAAAAAAAAAAAAA;
    bsvTopCore_ringbufPool_controller_0_baseAddrReg_1 = 64'hAAAAAAAAAAAAAAAA;
    bsvTopCore_ringbufPool_controller_0_headReg = 8'hAA;
    bsvTopCore_ringbufPool_controller_0_headReg_1 = 8'hAA;
    bsvTopCore_ringbufPool_controller_0_headShadowReg = 8'hAA;
    bsvTopCore_ringbufPool_controller_0_ruleState = 1'h0;
    bsvTopCore_ringbufPool_controller_0_tailPosInReadBlockReg = 3'h2;
    bsvTopCore_ringbufPool_controller_0_tailReg = 8'hAA;
    bsvTopCore_ringbufPool_controller_0_tailReg_1 = 8'hAA;
    bsvTopCore_ringbufPool_controller_0_tailShadowReg = 8'hAA;
    bsvTopCore_ringbufPool_controller_1_baseAddrReg = 64'hAAAAAAAAAAAAAAAA;
    bsvTopCore_ringbufPool_controller_1_baseAddrReg_1 = 64'hAAAAAAAAAAAAAAAA;
    bsvTopCore_ringbufPool_controller_1_headReg = 8'hAA;
    bsvTopCore_ringbufPool_controller_1_headReg_1 = 8'hAA;
    bsvTopCore_ringbufPool_controller_1_headShadowReg = 8'hAA;
    bsvTopCore_ringbufPool_controller_1_ruleState = 1'h0;
    bsvTopCore_ringbufPool_controller_1_tailPosInReadBlockReg = 3'h2;
    bsvTopCore_ringbufPool_controller_1_tailReg = 8'hAA;
    bsvTopCore_ringbufPool_controller_1_tailReg_1 = 8'hAA;
    bsvTopCore_ringbufPool_controller_1_tailShadowReg = 8'hAA;
    bsvTopCore_ringbufPool_controller_2_baseAddrReg = 64'hAAAAAAAAAAAAAAAA;
    bsvTopCore_ringbufPool_controller_2_baseAddrReg_1 = 64'hAAAAAAAAAAAAAAAA;
    bsvTopCore_ringbufPool_controller_2_headReg = 8'hAA;
    bsvTopCore_ringbufPool_controller_2_headReg_1 = 8'hAA;
    bsvTopCore_ringbufPool_controller_2_headShadowReg = 8'hAA;
    bsvTopCore_ringbufPool_controller_2_ruleState = 1'h0;
    bsvTopCore_ringbufPool_controller_2_tailPosInReadBlockReg = 3'h2;
    bsvTopCore_ringbufPool_controller_2_tailReg = 8'hAA;
    bsvTopCore_ringbufPool_controller_2_tailReg_1 = 8'hAA;
    bsvTopCore_ringbufPool_controller_2_tailShadowReg = 8'hAA;
    bsvTopCore_ringbufPool_controller_3_baseAddrReg = 64'hAAAAAAAAAAAAAAAA;
    bsvTopCore_ringbufPool_controller_3_baseAddrReg_1 = 64'hAAAAAAAAAAAAAAAA;
    bsvTopCore_ringbufPool_controller_3_headReg = 8'hAA;
    bsvTopCore_ringbufPool_controller_3_headReg_1 = 8'hAA;
    bsvTopCore_ringbufPool_controller_3_headShadowReg = 8'hAA;
    bsvTopCore_ringbufPool_controller_3_ruleState = 1'h0;
    bsvTopCore_ringbufPool_controller_3_tailPosInReadBlockReg = 3'h2;
    bsvTopCore_ringbufPool_controller_3_tailReg = 8'hAA;
    bsvTopCore_ringbufPool_controller_3_tailReg_1 = 8'hAA;
    bsvTopCore_ringbufPool_controller_3_tailShadowReg = 8'hAA;
    bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_cnt = 4'hA;
    bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_s1 = 2'h2;
    bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_s2 = 2'h2;
    bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_cnt = 4'hA;
    bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_s1 = 2'h2;
    bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_s2 = 2'h2;
    bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_cnt = 4'hA;
    bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_s1 = 2'h2;
    bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_s2 = 2'h2;
    bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_cnt = 4'hA;
    bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_s1 = 2'h2;
    bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_s2 = 2'h2;
    bsvTopCore_workAndCompleteQController_sqDescReadProxy_curSegCntReg = 4'hA;
    bsvTopCore_workAndCompleteQController_sqDescReadProxy_isFillingReqSegmentsReg =
	1'h0;
    bsvTopCore_workAndCompleteQController_sqDescReadProxy_isFirstReqSegmentsReg =
	1'h0;
    bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_0 =
	256'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1 =
	256'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    bsvTopCore_workAndCompleteQController_sqDescReadProxy_totalSegCntReg =
	4'hA;
    bsvTopCore_xdmaGearbox_c2hReqGearbox_block0_status = 1'h0;
    bsvTopCore_xdmaGearbox_c2hReqGearbox_block1_status = 1'h0;
    bsvTopCore_xdmaGearbox_c2hReqGearbox_dInReset_pre_isInReset = 1'h0;
    bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_status_0 = 1'h0;
    bsvTopCore_xdmaGearbox_c2hReqGearbox_elem0_status_1 = 1'h0;
    bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_status_0 = 1'h0;
    bsvTopCore_xdmaGearbox_c2hReqGearbox_elem1_status_1 = 1'h0;
    bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_0 =
	375'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_1 =
	375'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_2 =
	375'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    bsvTopCore_xdmaGearbox_c2hReqGearbox_elem_3 =
	375'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    bsvTopCore_xdmaGearbox_c2hReqGearbox_read_block = 1'h0;
    bsvTopCore_xdmaGearbox_c2hReqGearbox_sInReset_pre_isInReset = 1'h0;
    bsvTopCore_xdmaGearbox_c2hReqGearbox_write_block = 1'h0;
    bsvTopCore_xdmaGearbox_c2hStreamRespQ_head_wrapped = 1'h0;
    bsvTopCore_xdmaGearbox_c2hStreamRespQ_tail_wrapped = 1'h0;
    bsvTopCore_xdmaGearbox_h2cRespGearbox_block0 =
	582'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    bsvTopCore_xdmaGearbox_h2cRespGearbox_block0_status = 1'h0;
    bsvTopCore_xdmaGearbox_h2cRespGearbox_block1 =
	582'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    bsvTopCore_xdmaGearbox_h2cRespGearbox_block1_status = 1'h0;
    bsvTopCore_xdmaGearbox_h2cRespGearbox_dInReset_pre_isInReset = 1'h0;
    bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_status_0 = 1'h0;
    bsvTopCore_xdmaGearbox_h2cRespGearbox_elem0_status_1 = 1'h0;
    bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_status_0 = 1'h0;
    bsvTopCore_xdmaGearbox_h2cRespGearbox_elem1_status_1 = 1'h0;
    bsvTopCore_xdmaGearbox_h2cRespGearbox_read_block = 1'h0;
    bsvTopCore_xdmaGearbox_h2cRespGearbox_sInReset_pre_isInReset = 1'h0;
    bsvTopCore_xdmaGearbox_h2cRespGearbox_write_block = 1'h0;
    bsvTopCore_xdmaGearbox_h2cStreamReqQStore = 84'hAAAAAAAAAAAAAAAAAAAAA;
    bsvTopCore_xdmaGearbox_h2cStreamReqQ_head_wrapped = 1'h0;
    bsvTopCore_xdmaGearbox_h2cStreamReqQ_tail_wrapped = 1'h0;
    bsvTopCore_xdmaGearbox_isCurrentC2hReqAnEvenBeat = 1'h0;
    bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_grantReg =
	1'h0;
    bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_needArbitrationReg =
	1'h0;
    bsvTopCore_xdmaReadClt_finalReqWithIdxPipeOut_binaryArbiter_0_priorityReg =
	1'h0;
    bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_grantReg = 1'h0;
    bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_needArbitrationReg =
	1'h0;
    bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_0_priorityReg = 1'h0;
    bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_grantReg = 1'h0;
    bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_needArbitrationReg =
	1'h0;
    bsvTopCore_xdmaReadClt_leafArbiterVec_binaryArbiter_1_priorityReg = 1'h0;
    bsvTopCore_xdmaReadClt_shouldSaveGrantIdxReg = 1'h0;
    bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_grantReg = 1'h0;
    bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_needArbitrationReg =
	1'h0;
    bsvTopCore_xdmaWriteClt_leafArbiterVec_binaryArbiter_0_priorityReg = 1'h0;
    bsvTopCore_xdmaWriteClt_shouldSaveGrantIdxReg = 1'h0;
    xdmaAxiLiteWrap_cntrlAxilSlave_rawRdAddrBus_isReset_isInReset = 1'h0;
    xdmaAxiLiteWrap_cntrlAxilSlave_rawRdDataBus_isReset_isInReset = 1'h0;
    xdmaAxiLiteWrap_cntrlAxilSlave_rawWrAddrBus_isReset_isInReset = 1'h0;
    xdmaAxiLiteWrap_cntrlAxilSlave_rawWrDataBus_isReset_isInReset = 1'h0;
    xdmaAxiLiteWrap_cntrlAxilSlave_rawWrRespBus_isReset_isInReset = 1'h0;
    xdmaWrap_h2cNextBeatIsFirst = 1'h0;
    xdmaWrap_rawC2hSt_rawBus_isReset_isInReset = 1'h0;
    xdmaWrap_rawH2cSt_rawBus_isReset_isInReset = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ)
	$write("WorkCompSQ Recv = ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ)
	$write("WorkComp { ", "id: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ)
	$write("'h%h",
	       bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[221:158]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ) $write(", ", "opcode: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[157:150] ==
	  8'd0)
	$write("IBV_WC_SEND");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[157:150] ==
	  8'd1)
	$write("IBV_WC_RDMA_WRITE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[157:150] ==
	  8'd2)
	$write("IBV_WC_RDMA_READ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[157:150] ==
	  8'd3)
	$write("IBV_WC_COMP_SWAP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[157:150] ==
	  8'd4)
	$write("IBV_WC_FETCH_ADD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[157:150] ==
	  8'd5)
	$write("IBV_WC_BIND_MW");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[157:150] ==
	  8'd6)
	$write("IBV_WC_LOCAL_INV");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[157:150] ==
	  8'd7)
	$write("IBV_WC_TSO");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[157:150] ==
	  8'd128)
	$write("IBV_WC_RECV");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[157:150] ==
	  8'd129)
	$write("IBV_WC_RECV_RDMA_WITH_IMM");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[157:150] ==
	  8'd130)
	$write("IBV_WC_TM_ADD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[157:150] ==
	  8'd131)
	$write("IBV_WC_TM_DEL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[157:150] ==
	  8'd132)
	$write("IBV_WC_TM_SYNC");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[157:150] ==
	  8'd133)
	$write("IBV_WC_TM_RECV");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[157:150] ==
	  8'd134)
	$write("IBV_WC_TM_NO_TAG");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[157:150] ==
	  8'd135)
	$write("IBV_WC_DRIVER1");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[157:150] ==
	  8'd136)
	$write("IBV_WC_DRIVER2");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[157:150] !=
	  8'd0 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[157:150] !=
	  8'd1 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[157:150] !=
	  8'd2 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[157:150] !=
	  8'd3 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[157:150] !=
	  8'd4 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[157:150] !=
	  8'd5 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[157:150] !=
	  8'd6 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[157:150] !=
	  8'd7 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[157:150] !=
	  8'd128 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[157:150] !=
	  8'd129 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[157:150] !=
	  8'd130 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[157:150] !=
	  8'd131 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[157:150] !=
	  8'd132 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[157:150] !=
	  8'd133 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[157:150] !=
	  8'd134 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[157:150] !=
	  8'd135 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[157:150] !=
	  8'd136)
	$write("IBV_WC_DRIVER3");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ) $write(", ", "flags: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[149:143] ==
	  7'd0)
	$write("IBV_WC_NO_FLAGS");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[149:143] ==
	  7'd1)
	$write("IBV_WC_GRH");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[149:143] ==
	  7'd2)
	$write("IBV_WC_WITH_IMM");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[149:143] ==
	  7'd4)
	$write("IBV_WC_IP_CSUM_OK");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[149:143] ==
	  7'd8)
	$write("IBV_WC_WITH_INV");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[149:143] ==
	  7'd16)
	$write("IBV_WC_TM_SYNC_REQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[149:143] ==
	  7'd32)
	$write("IBV_WC_TM_MATCH");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[149:143] !=
	  7'd0 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[149:143] !=
	  7'd1 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[149:143] !=
	  7'd2 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[149:143] !=
	  7'd4 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[149:143] !=
	  7'd8 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[149:143] !=
	  7'd16 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[149:143] !=
	  7'd32)
	$write("IBV_WC_TM_DATA_VALID");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ) $write(", ", "status: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] ==
	  5'd0)
	$write("IBV_WC_SUCCESS");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] ==
	  5'd1)
	$write("IBV_WC_LOC_LEN_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] ==
	  5'd2)
	$write("IBV_WC_LOC_QP_OP_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] ==
	  5'd3)
	$write("IBV_WC_LOC_EEC_OP_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] ==
	  5'd4)
	$write("IBV_WC_LOC_PROT_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] ==
	  5'd5)
	$write("IBV_WC_WR_FLUSH_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] ==
	  5'd6)
	$write("IBV_WC_MW_BIND_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] ==
	  5'd7)
	$write("IBV_WC_BAD_RESP_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] ==
	  5'd8)
	$write("IBV_WC_LOC_ACCESS_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] ==
	  5'd9)
	$write("IBV_WC_REM_INV_REQ_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] ==
	  5'd10)
	$write("IBV_WC_REM_ACCESS_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] ==
	  5'd11)
	$write("IBV_WC_REM_OP_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] ==
	  5'd12)
	$write("IBV_WC_RETRY_EXC_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] ==
	  5'd13)
	$write("IBV_WC_RNR_RETRY_EXC_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] ==
	  5'd14)
	$write("IBV_WC_LOC_RDD_VIOL_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] ==
	  5'd15)
	$write("IBV_WC_REM_INV_RD_REQ_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] ==
	  5'd16)
	$write("IBV_WC_REM_ABORT_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] ==
	  5'd17)
	$write("IBV_WC_INV_EECN_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] ==
	  5'd18)
	$write("IBV_WC_INV_EEC_STATE_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] ==
	  5'd19)
	$write("IBV_WC_FATAL_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] ==
	  5'd20)
	$write("IBV_WC_RESP_TIMEOUT_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] ==
	  5'd21)
	$write("IBV_WC_GENERAL_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] ==
	  5'd22)
	$write("IBV_WC_TM_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] !=
	  5'd0 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] !=
	  5'd1 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] !=
	  5'd2 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] !=
	  5'd3 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] !=
	  5'd4 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] !=
	  5'd5 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] !=
	  5'd6 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] !=
	  5'd7 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] !=
	  5'd8 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] !=
	  5'd9 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] !=
	  5'd10 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] !=
	  5'd11 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] !=
	  5'd12 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] !=
	  5'd13 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] !=
	  5'd14 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] !=
	  5'd15 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] !=
	  5'd16 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] !=
	  5'd17 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] !=
	  5'd18 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] !=
	  5'd19 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] !=
	  5'd20 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] !=
	  5'd21 &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[142:138] !=
	  5'd22)
	$write("IBV_WC_TM_RNDV_INCOMPLETE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ) $write(", ", "len: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ)
	$write("'h%h",
	       bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[137:106]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ) $write(", ", "pkey: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ)
	$write("'h%h",
	       bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[105:90]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ) $write(", ", "qpn: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ)
	$write("'h%h",
	       bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[89:66]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ) $write(", ", "immDt: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[65])
	$write("tagged Valid ",
	       "'h%h",
	       bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[64:33]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  !bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[65])
	$write("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ) $write(", ", "rkey2Inv: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[32])
	$write("tagged Valid ",
	       "'h%h",
	       bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[31:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ &&
	  !bsvTopCore_rdmaTransportLayer_workCompPipeOutSQ_first[32])
	$write("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ) $write(" }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_debugWorkCompSQ) $write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp)
	$write("==========,");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp)
	$write("DmaReadResp { ", "initiator: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp &&
	  bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT[91:88] ==
	  4'd0)
	$write("DMA_SRC_RQ_RD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp &&
	  bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT[91:88] ==
	  4'd1)
	$write("DMA_SRC_RQ_WR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp &&
	  bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT[91:88] ==
	  4'd2)
	$write("DMA_SRC_RQ_DUP_RD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp &&
	  bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT[91:88] ==
	  4'd3)
	$write("DMA_SRC_RQ_ATOMIC");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp &&
	  bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT[91:88] ==
	  4'd4)
	$write("DMA_SRC_RQ_DISCARD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp &&
	  bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT[91:88] ==
	  4'd5)
	$write("DMA_SRC_SQ_RD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp &&
	  bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT[91:88] ==
	  4'd6)
	$write("DMA_SRC_SQ_WR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp &&
	  bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT[91:88] ==
	  4'd7)
	$write("DMA_SRC_SQ_ATOMIC");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp &&
	  bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT[91:88] ==
	  4'd8)
	$write("DMA_SRC_SQ_DISCARD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp &&
	  bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT[91:88] !=
	  4'd0 &&
	  bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT[91:88] !=
	  4'd1 &&
	  bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT[91:88] !=
	  4'd2 &&
	  bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT[91:88] !=
	  4'd3 &&
	  bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT[91:88] !=
	  4'd4 &&
	  bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT[91:88] !=
	  4'd5 &&
	  bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT[91:88] !=
	  4'd6 &&
	  bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT[91:88] !=
	  4'd7 &&
	  bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT[91:88] !=
	  4'd8)
	$write("DMA_SRC_CONTROL_PATH_LOGIC");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp)
	$write(", ", "sqpn: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp)
	$write("'h%h",
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT[87:64]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp)
	$write(", ", "wrID: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp)
	$write("'h%h",
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT[63:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp)
	$write(", ", "isRespErr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp)
	$write(", ", "dataStream: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp)
	$write("DataStream { ", "data: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp)
	$write("'h%h", a_dataStream_data__h4861);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp)
	$write(", ", "byteEn: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp)
	$write("'h%h", a_dataStream_byteEn__h4862);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp)
	$write(", ", "isFirst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp &&
	  bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[1])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp &&
	  !bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[1])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp)
	$write(", ", "isLast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp &&
	  bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[0])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp &&
	  !bsvTopCore_bluerdmaDmaProxy_h2cProxy_outRespQ_D_OUT[0])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp)
	$write(" }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp)
	$write(" }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp)
	$write("UserLogicBluerdmaDmaProxyCustomDataH2c { ", "initiator: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp &&
	  bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT[91:88] ==
	  4'd0)
	$write("DMA_SRC_RQ_RD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp &&
	  bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT[91:88] ==
	  4'd1)
	$write("DMA_SRC_RQ_WR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp &&
	  bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT[91:88] ==
	  4'd2)
	$write("DMA_SRC_RQ_DUP_RD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp &&
	  bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT[91:88] ==
	  4'd3)
	$write("DMA_SRC_RQ_ATOMIC");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp &&
	  bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT[91:88] ==
	  4'd4)
	$write("DMA_SRC_RQ_DISCARD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp &&
	  bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT[91:88] ==
	  4'd5)
	$write("DMA_SRC_SQ_RD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp &&
	  bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT[91:88] ==
	  4'd6)
	$write("DMA_SRC_SQ_WR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp &&
	  bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT[91:88] ==
	  4'd7)
	$write("DMA_SRC_SQ_ATOMIC");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp &&
	  bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT[91:88] ==
	  4'd8)
	$write("DMA_SRC_SQ_DISCARD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp &&
	  bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT[91:88] !=
	  4'd0 &&
	  bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT[91:88] !=
	  4'd1 &&
	  bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT[91:88] !=
	  4'd2 &&
	  bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT[91:88] !=
	  4'd3 &&
	  bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT[91:88] !=
	  4'd4 &&
	  bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT[91:88] !=
	  4'd5 &&
	  bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT[91:88] !=
	  4'd6 &&
	  bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT[91:88] !=
	  4'd7 &&
	  bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT[91:88] !=
	  4'd8)
	$write("DMA_SRC_CONTROL_PATH_LOGIC");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp)
	$write(", ", "sqpn: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp)
	$write("'h%h",
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT[87:64]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp)
	$write(", ", "wrID: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp)
	$write("'h%h",
	       bsvTopCore_bluerdmaDmaProxy_h2cProxy_customDataQ_D_OUT[63:0],
	       " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_h2cProxy_forwardResp)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_c2hProxy_forwardResp)
	$write("==========,");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_c2hProxy_forwardResp)
	$write("DmaWriteResp { ", "initiator: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_c2hProxy_forwardResp &&
	  bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT[51:48] ==
	  4'd0)
	$write("DMA_SRC_RQ_RD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_c2hProxy_forwardResp &&
	  bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT[51:48] ==
	  4'd1)
	$write("DMA_SRC_RQ_WR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_c2hProxy_forwardResp &&
	  bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT[51:48] ==
	  4'd2)
	$write("DMA_SRC_RQ_DUP_RD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_c2hProxy_forwardResp &&
	  bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT[51:48] ==
	  4'd3)
	$write("DMA_SRC_RQ_ATOMIC");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_c2hProxy_forwardResp &&
	  bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT[51:48] ==
	  4'd4)
	$write("DMA_SRC_RQ_DISCARD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_c2hProxy_forwardResp &&
	  bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT[51:48] ==
	  4'd5)
	$write("DMA_SRC_SQ_RD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_c2hProxy_forwardResp &&
	  bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT[51:48] ==
	  4'd6)
	$write("DMA_SRC_SQ_WR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_c2hProxy_forwardResp &&
	  bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT[51:48] ==
	  4'd7)
	$write("DMA_SRC_SQ_ATOMIC");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_c2hProxy_forwardResp &&
	  bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT[51:48] ==
	  4'd8)
	$write("DMA_SRC_SQ_DISCARD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_c2hProxy_forwardResp &&
	  bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT[51:48] !=
	  4'd0 &&
	  bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT[51:48] !=
	  4'd1 &&
	  bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT[51:48] !=
	  4'd2 &&
	  bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT[51:48] !=
	  4'd3 &&
	  bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT[51:48] !=
	  4'd4 &&
	  bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT[51:48] !=
	  4'd5 &&
	  bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT[51:48] !=
	  4'd6 &&
	  bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT[51:48] !=
	  4'd7 &&
	  bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT[51:48] !=
	  4'd8)
	$write("DMA_SRC_CONTROL_PATH_LOGIC");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_c2hProxy_forwardResp)
	$write(", ", "sqpn: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_c2hProxy_forwardResp)
	$write("'h%h",
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT[47:24]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_c2hProxy_forwardResp)
	$write(", ", "psn: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_c2hProxy_forwardResp)
	$write("'h%h",
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT[23:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_c2hProxy_forwardResp)
	$write(", ", "isRespErr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_c2hProxy_forwardResp)
	$write("False", " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_c2hProxy_forwardResp)
	$write("UserLogicBluerdmaDmaProxyCustomDataC2h { ", "initiator: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_c2hProxy_forwardResp &&
	  bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT[51:48] ==
	  4'd0)
	$write("DMA_SRC_RQ_RD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_c2hProxy_forwardResp &&
	  bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT[51:48] ==
	  4'd1)
	$write("DMA_SRC_RQ_WR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_c2hProxy_forwardResp &&
	  bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT[51:48] ==
	  4'd2)
	$write("DMA_SRC_RQ_DUP_RD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_c2hProxy_forwardResp &&
	  bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT[51:48] ==
	  4'd3)
	$write("DMA_SRC_RQ_ATOMIC");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_c2hProxy_forwardResp &&
	  bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT[51:48] ==
	  4'd4)
	$write("DMA_SRC_RQ_DISCARD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_c2hProxy_forwardResp &&
	  bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT[51:48] ==
	  4'd5)
	$write("DMA_SRC_SQ_RD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_c2hProxy_forwardResp &&
	  bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT[51:48] ==
	  4'd6)
	$write("DMA_SRC_SQ_WR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_c2hProxy_forwardResp &&
	  bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT[51:48] ==
	  4'd7)
	$write("DMA_SRC_SQ_ATOMIC");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_c2hProxy_forwardResp &&
	  bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT[51:48] ==
	  4'd8)
	$write("DMA_SRC_SQ_DISCARD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_c2hProxy_forwardResp &&
	  bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT[51:48] !=
	  4'd0 &&
	  bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT[51:48] !=
	  4'd1 &&
	  bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT[51:48] !=
	  4'd2 &&
	  bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT[51:48] !=
	  4'd3 &&
	  bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT[51:48] !=
	  4'd4 &&
	  bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT[51:48] !=
	  4'd5 &&
	  bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT[51:48] !=
	  4'd6 &&
	  bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT[51:48] !=
	  4'd7 &&
	  bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT[51:48] !=
	  4'd8)
	$write("DMA_SRC_CONTROL_PATH_LOGIC");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_c2hProxy_forwardResp)
	$write(", ", "sqpn: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_c2hProxy_forwardResp)
	$write("'h%h",
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT[47:24]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_c2hProxy_forwardResp)
	$write(", ", "psn: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_c2hProxy_forwardResp)
	$write("'h%h",
	       bsvTopCore_bluerdmaDmaProxy_c2hProxy_customDataQ_D_OUT[23:0],
	       " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_bluerdmaDmaProxy_c2hProxy_forwardResp)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_0_recvDmaResp &&
	  bsvTopCore_ringbufPool_controller_0_tailPosInReadBlockReg == 3'd0 &&
	  bsvTopCore_ringbufPool_controller_0_dmaRespQ_f_ETC___d500)
	begin
	  v__h26229 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_0_recvDmaResp &&
	  bsvTopCore_ringbufPool_controller_0_tailPosInReadBlockReg == 3'd0 &&
	  bsvTopCore_ringbufPool_controller_0_dmaRespQ_f_ETC___d500)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h26229,
		 "\"/home/mingheng/blue-rdma/top/src/bsv/user_logic/Ringbuf.bsv\", line 232, column 21\n",
		 "shadowTail assertion @ mkRingbufH2cMetadata");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_0_recvDmaResp &&
	  bsvTopCore_ringbufPool_controller_0_tailPosInReadBlockReg == 3'd0 &&
	  bsvTopCore_ringbufPool_controller_0_dmaRespQ_f_ETC___d500)
	$display("newTail=%h should == shadowTail=%h, ",
		 IF_NOT_bsvTopCore_ringbufPool_controller_0_tai_ETC___d503,
		 bsvTopCore_ringbufPool_controller_0_tailShadowReg);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_0_recvDmaResp &&
	  bsvTopCore_ringbufPool_controller_0_tailPosInReadBlockReg == 3'd0 &&
	  bsvTopCore_ringbufPool_controller_0_dmaRespQ_f_ETC___d500)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_1_recvDmaResp &&
	  bsvTopCore_ringbufPool_controller_1_tailPosInReadBlockReg == 3'd0 &&
	  bsvTopCore_ringbufPool_controller_1_dmaRespQ_f_ETC___d574)
	begin
	  v__h27400 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_1_recvDmaResp &&
	  bsvTopCore_ringbufPool_controller_1_tailPosInReadBlockReg == 3'd0 &&
	  bsvTopCore_ringbufPool_controller_1_dmaRespQ_f_ETC___d574)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h27400,
		 "\"/home/mingheng/blue-rdma/top/src/bsv/user_logic/Ringbuf.bsv\", line 232, column 21\n",
		 "shadowTail assertion @ mkRingbufH2cMetadata");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_1_recvDmaResp &&
	  bsvTopCore_ringbufPool_controller_1_tailPosInReadBlockReg == 3'd0 &&
	  bsvTopCore_ringbufPool_controller_1_dmaRespQ_f_ETC___d574)
	$display("newTail=%h should == shadowTail=%h, ",
		 IF_NOT_bsvTopCore_ringbufPool_controller_1_tai_ETC___d577,
		 bsvTopCore_ringbufPool_controller_1_tailShadowReg);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_1_recvDmaResp &&
	  bsvTopCore_ringbufPool_controller_1_tailPosInReadBlockReg == 3'd0 &&
	  bsvTopCore_ringbufPool_controller_1_dmaRespQ_f_ETC___d574)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_2_recvDmaResp &&
	  bsvTopCore_ringbufPool_controller_2_tailPosInReadBlockReg == 3'd0 &&
	  bsvTopCore_ringbufPool_controller_2_dmaRespQ_f_ETC___d648)
	begin
	  v__h28571 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_2_recvDmaResp &&
	  bsvTopCore_ringbufPool_controller_2_tailPosInReadBlockReg == 3'd0 &&
	  bsvTopCore_ringbufPool_controller_2_dmaRespQ_f_ETC___d648)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h28571,
		 "\"/home/mingheng/blue-rdma/top/src/bsv/user_logic/Ringbuf.bsv\", line 232, column 21\n",
		 "shadowTail assertion @ mkRingbufH2cMetadata");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_2_recvDmaResp &&
	  bsvTopCore_ringbufPool_controller_2_tailPosInReadBlockReg == 3'd0 &&
	  bsvTopCore_ringbufPool_controller_2_dmaRespQ_f_ETC___d648)
	$display("newTail=%h should == shadowTail=%h, ",
		 IF_NOT_bsvTopCore_ringbufPool_controller_2_tai_ETC___d651,
		 bsvTopCore_ringbufPool_controller_2_tailShadowReg);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_2_recvDmaResp &&
	  bsvTopCore_ringbufPool_controller_2_tailPosInReadBlockReg == 3'd0 &&
	  bsvTopCore_ringbufPool_controller_2_dmaRespQ_f_ETC___d648)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_3_recvDmaResp &&
	  bsvTopCore_ringbufPool_controller_3_tailPosInReadBlockReg == 3'd0 &&
	  bsvTopCore_ringbufPool_controller_3_dmaRespQ_f_ETC___d722)
	begin
	  v__h29742 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_3_recvDmaResp &&
	  bsvTopCore_ringbufPool_controller_3_tailPosInReadBlockReg == 3'd0 &&
	  bsvTopCore_ringbufPool_controller_3_dmaRespQ_f_ETC___d722)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h29742,
		 "\"/home/mingheng/blue-rdma/top/src/bsv/user_logic/Ringbuf.bsv\", line 232, column 21\n",
		 "shadowTail assertion @ mkRingbufH2cMetadata");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_3_recvDmaResp &&
	  bsvTopCore_ringbufPool_controller_3_tailPosInReadBlockReg == 3'd0 &&
	  bsvTopCore_ringbufPool_controller_3_dmaRespQ_f_ETC___d722)
	$display("newTail=%h should == shadowTail=%h, ",
		 IF_NOT_bsvTopCore_ringbufPool_controller_3_tai_ETC___d725,
		 bsvTopCore_ringbufPool_controller_3_tailShadowReg);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_ringbufPool_controller_3_recvDmaResp &&
	  bsvTopCore_ringbufPool_controller_3_tailPosInReadBlockReg == 3'd0 &&
	  bsvTopCore_ringbufPool_controller_3_dmaRespQ_f_ETC___d722)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_s2[1] &&
	  (!bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_beforeEnq_Q_OUT ||
	   !bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_beforeDeq_Q_OUT ||
	   !bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterA_outData_ff_FULL_N))
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_s2[1] &&
	  (!bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_beforeEnq_Q_OUT ||
	   !bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_beforeDeq_Q_OUT ||
	   !bsvTopCore_tlb_firstStageCache_bram2Port_serverAdapterB_outData_ff_FULL_N))
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_s2[1] &&
	  (!bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_beforeEnq_Q_OUT ||
	   !bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_beforeDeq_Q_OUT ||
	   !bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterA_outData_ff_FULL_N))
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_s2[1] &&
	  (!bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_beforeEnq_Q_OUT ||
	   !bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_beforeDeq_Q_OUT ||
	   !bsvTopCore_tlb_secondStageCache_bram2Port_serverAdapterB_outData_ff_FULL_N))
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ)
	$write("SQ read a new descriptor: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ)
	$write("WorkReq { ID=%h", 64'hAAAAAAAAAAAAAAAA, ", opcode=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ &&
	  bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1[4:1] ==
	  4'd0)
	$write("IBV_WR_RDMA_WRITE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ &&
	  bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1[4:1] ==
	  4'd1)
	$write("IBV_WR_RDMA_WRITE_WITH_IMM");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ &&
	  bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1[4:1] ==
	  4'd2)
	$write("IBV_WR_SEND");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ &&
	  bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1[4:1] ==
	  4'd3)
	$write("IBV_WR_SEND_WITH_IMM");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ &&
	  bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1[4:1] ==
	  4'd4)
	$write("IBV_WR_RDMA_READ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ &&
	  bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1[4:1] ==
	  4'd5)
	$write("IBV_WR_ATOMIC_CMP_AND_SWP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ &&
	  bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1[4:1] ==
	  4'd6)
	$write("IBV_WR_ATOMIC_FETCH_AND_ADD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ &&
	  bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1[4:1] ==
	  4'd7)
	$write("IBV_WR_LOCAL_INV");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ &&
	  bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1[4:1] ==
	  4'd8)
	$write("IBV_WR_BIND_MW");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ &&
	  bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1[4:1] ==
	  4'd9)
	$write("IBV_WR_SEND_WITH_INV");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ &&
	  bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1[4:1] ==
	  4'd10)
	$write("IBV_WR_TSO");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ &&
	  bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1[4:1] !=
	  4'd0 &&
	  bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1[4:1] !=
	  4'd1 &&
	  bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1[4:1] !=
	  4'd2 &&
	  bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1[4:1] !=
	  4'd3 &&
	  bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1[4:1] !=
	  4'd4 &&
	  bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1[4:1] !=
	  4'd5 &&
	  bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1[4:1] !=
	  4'd6 &&
	  bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1[4:1] !=
	  4'd7 &&
	  bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1[4:1] !=
	  4'd8 &&
	  bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1[4:1] !=
	  4'd9 &&
	  bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1[4:1] !=
	  4'd10)
	$write("IBV_WR_DRIVER1");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ)
	$write(", flags=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ)
	$write("FlagsType { flags: ",
	       bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_0[4:0],
	       " = ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ &&
	  bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_0[0])
	$write("IBV_SEND_FENCE", " | ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ &&
	  !bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_0[0])
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ &&
	  bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_0[1])
	$write("IBV_SEND_SIGNALED", " | ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ &&
	  !bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_0[1])
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ &&
	  bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_0[2])
	$write("IBV_SEND_SOLICITED", " | ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ &&
	  !bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_0[2])
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ &&
	  bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_0[3])
	$write("IBV_SEND_INLINE", " | ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ &&
	  !bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_0[3])
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ &&
	  bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_0[4])
	$write("IBV_SEND_IP_CSUM", " | ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ &&
	  !bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_0[4])
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ &&
	  bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_0[4:0] ==
	  5'd0)
	$write("IBV_SEND_NO_FLAGS", " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ &&
	  bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_0[4:0] !=
	  5'd0)
	$write("}");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ)
	$write(", raddr=%h, rkey=%h, len=%0d, laddr=%h, lkey=%h, sqpn=%h",
	       bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1[191:128],
	       bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1[255:224],
	       bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1[63:32],
	       bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1[127:64],
	       bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_1[223:192],
	       bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_0[31:8],
	       ", solicited=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ &&
	  bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_0[7])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ &&
	  !bsvTopCore_workAndCompleteQController_sqDescReadProxy_segBuf_0[7])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ)
	$write(", comp=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ)
	$write("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ)
	$write(", swap=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ)
	$write("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ)
	$write(", immDt=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ)
	$write("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ)
	$write(", rkey2Inv=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ)
	$write("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ)
	$write(", srqn=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ)
	$write("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ)
	$write(", dqpn=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ)
	$write("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ)
	$write(", qkey=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ)
	$write("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ)
	$write(" }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_bsvTopCore_workAndCompleteQController_forwardSQ)
	$write("\n");
  end
  // synopsys translate_on

  // synopsys translate_off
  always@(negedge CLK_slowClock)
  begin
    #0;
    if (RST_N_slowReset != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_xdmaWrap_forwardC2hDescAndData &&
	  !xdmaChannel_c2hDescByp_ready)
	$display("This rule should not be fired when c2hDescBypRdyWire is False\n");
    if (RST_N_slowReset != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_ClientServerRequest_3 &&
	  IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_read_b_ETC___d2891)
	begin
	  v__h114342 = $time;
	  #0;
	end
    if (RST_N_slowReset != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_ClientServerRequest_3 &&
	  IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_read_b_ETC___d2891)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h114342,
		 "\"/home/mingheng/blue-rdma/top/src/bsv/user_logic/XdmaWrapper.bsv\", line 627, column 21\n",
		 "XdmaGearbox c2h head part valid check err @ mkXdmaGearbox");
    if (RST_N_slowReset != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_ClientServerRequest_3 &&
	  IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_read_b_ETC___d2891)
	$display("expect head part to always be valid");
    if (RST_N_slowReset != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_ClientServerRequest_3 &&
	  IF_bsvTopCore_xdmaGearbox_c2hReqGearbox_read_b_ETC___d2891)
	$finish(32'd1);
  end
  // synopsys translate_on
endmodule  // mkBsvTop

